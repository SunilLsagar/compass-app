"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentTypeQuery = void 0;
const tslib_1 = require("tslib");
const core_1 = require("@contentstack/core");
class ContentTypeQuery {
    constructor(client) {
        this._queryParams = {};
        this._client = client;
        this._urlPath = '/content_types';
    }
    /**
     * @method includeGlobalFieldSchema
     * @memberof ContentTypeQuery
     * @description The assets published in the locale will be fetched
     * @returns {ContentTypeQuery}
     * @example
     * import contentstack from '@contentstack/delivery-sdk'
     *
     * const stack = contentstack.Stack({ apiKey: "apiKey", deliveryToken: "deliveryToken", environment: "environment" });
     * const contentTypeQuery = stack.contentType();
     * const result = await contentTypeQuery.includeGlobalFieldSchema().find();
     */
    includeGlobalFieldSchema() {
        this._queryParams.include_global_field_schema = 'true';
        return this;
    }
    /**
     * @method find
     * @memberof ContentTypeQuery
     * @description Fetches all contentTypes of the stack
     * @returns {ContentTypeQuery}
     * @example
     * import contentstack from '@contentstack/delivery-sdk'
     *
     * const stack = contentstack.Stack({ apiKey: "apiKey", deliveryToken: "deliveryToken", environment: "environment" });
     * const contentTypeQuery = stack.contentType();
     * const result = await contentTypeQuery.find();
     */
    find() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const response = yield (0, core_1.getData)(this._client, this._urlPath, this._queryParams);
            return response;
        });
    }
}
exports.ContentTypeQuery = ContentTypeQuery;
//# sourceMappingURL=contenttype-query.js.map