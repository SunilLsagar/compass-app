"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.synchronization = void 0;
const tslib_1 = require("tslib");
const core_1 = require("@contentstack/core");
const humps_1 = tslib_1.__importDefault(require("humps"));
function synchronization(client_1) {
    return tslib_1.__awaiter(this, arguments, void 0, function* (client, params = {}, recursive = false) {
        const config = { params };
        if (!('paginationToken' in params || 'syncToken' in params)) {
            // for every config except sync and pagination token
            config.params = Object.assign(Object.assign({}, params), { init: true });
        }
        if (params.type && typeof params.type !== 'string') {
            const type = params.type;
            config.params = Object.assign(Object.assign({}, config.params), { type: type.join(',') });
        }
        let response = yield (0, core_1.getData)(client, '/sync', humps_1.default.decamelizeKeys(config));
        const data = response.data;
        while (recursive && 'pagination_token' in response.data) {
            const recResponse = yield (0, core_1.getData)(client, '/sync', humps_1.default.decamelizeKeys({ paginationToken: data.pagination_token }));
            recResponse.data.items = Object.assign(Object.assign({}, response.data.items), recResponse.data.items);
            response = Object.assign({}, recResponse);
        }
        return response.data;
    });
}
exports.synchronization = synchronization;
//# sourceMappingURL=synchronization.js.map