/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@contentstack";
exports.ids = ["vendor-chunks/@contentstack"];
exports.modules = {

/***/ "(ssr)/./node_modules/@contentstack/live-preview-utils/dist/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@contentstack/live-preview-utils/dist/index.js ***!
  \*********************************************************************/
/***/ (function(module) {

eval("!function(e, t) {\n     true ? module.exports = t() : 0;\n}(this, ()=>(()=>{\n        var e = {\n            704: (e)=>{\n                e.exports = function(e, a) {\n                    for(var l = e.split(t), s = l.length, c = new Array(s), u = 0; u < s; u++){\n                        var d = l[u];\n                        if (\"\" !== d) {\n                            var p = n.test(d) && !r.test(d);\n                            p && (d = d.replace(i, function(e, t, n) {\n                                return o(e, d.length - n - e.length == 0);\n                            }));\n                            var v = d[0];\n                            v = u > 0 ? v.toUpperCase() : v.toLowerCase(), c[u] = v + (p ? d.slice(1) : d.slice(1).toLowerCase());\n                        }\n                    }\n                    return c.join(\"\");\n                };\n                var t = /[\\s\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~]+/, n = /^[a-z\\u00E0-\\u00FCA-Z\\u00C0-\\u00DC][\\d|a-z\\u00E0-\\u00FCA-Z\\u00C0-\\u00DC]*$/, i = /([A-Z\\u00C0-\\u00DC]{4,})/g, r = /^[A-Z\\u00C0-\\u00DC]+$/;\n                function o(e, t) {\n                    var n = e.split(\"\"), i = n.shift().toUpperCase(), r = t ? n.pop().toLowerCase() : n.pop();\n                    return i + n.join(\"\").toLowerCase() + r;\n                }\n            },\n            279: (e, t, n)=>{\n                \"use strict\";\n                n.r(t);\n            },\n            492: (e, t, n)=>{\n                \"use strict\";\n                var i;\n                n.r(t), n.d(t, {\n                    default: ()=>p\n                });\n                var r = \"undefined\" == typeof document ? void 0 : document, o = !!r && \"content\" in r.createElement(\"template\"), a = !!r && r.createRange && \"createContextualFragment\" in r.createRange();\n                function l(e, t) {\n                    var n, i, r = e.nodeName, o = t.nodeName;\n                    return r === o || (n = r.charCodeAt(0), i = o.charCodeAt(0), n <= 90 && i >= 97 ? r === o.toUpperCase() : i <= 90 && n >= 97 && o === r.toUpperCase());\n                }\n                function s(e, t, n) {\n                    e[n] !== t[n] && (e[n] = t[n], e[n] ? e.setAttribute(n, \"\") : e.removeAttribute(n));\n                }\n                var c = {\n                    OPTION: function(e, t) {\n                        var n = e.parentNode;\n                        if (n) {\n                            var i = n.nodeName.toUpperCase();\n                            \"OPTGROUP\" === i && (i = (n = n.parentNode) && n.nodeName.toUpperCase()), \"SELECT\" !== i || n.hasAttribute(\"multiple\") || (e.hasAttribute(\"selected\") && !t.selected && (e.setAttribute(\"selected\", \"selected\"), e.removeAttribute(\"selected\")), n.selectedIndex = -1);\n                        }\n                        s(e, t, \"selected\");\n                    },\n                    INPUT: function(e, t) {\n                        s(e, t, \"checked\"), s(e, t, \"disabled\"), e.value !== t.value && (e.value = t.value), t.hasAttribute(\"value\") || e.removeAttribute(\"value\");\n                    },\n                    TEXTAREA: function(e, t) {\n                        var n = t.value;\n                        e.value !== n && (e.value = n);\n                        var i = e.firstChild;\n                        if (i) {\n                            var r = i.nodeValue;\n                            if (r == n || !n && r == e.placeholder) return;\n                            i.nodeValue = n;\n                        }\n                    },\n                    SELECT: function(e, t) {\n                        if (!t.hasAttribute(\"multiple\")) {\n                            for(var n, i, r = -1, o = 0, a = e.firstChild; a;)if (\"OPTGROUP\" === (i = a.nodeName && a.nodeName.toUpperCase())) a = (n = a).firstChild;\n                            else {\n                                if (\"OPTION\" === i) {\n                                    if (a.hasAttribute(\"selected\")) {\n                                        r = o;\n                                        break;\n                                    }\n                                    o++;\n                                }\n                                !(a = a.nextSibling) && n && (a = n.nextSibling, n = null);\n                            }\n                            e.selectedIndex = r;\n                        }\n                    }\n                };\n                function u() {}\n                function d(e) {\n                    if (e) return e.getAttribute && e.getAttribute(\"id\") || e.id;\n                }\n                const p = function(e, t, n) {\n                    if (n || (n = {}), \"string\" == typeof t) if (\"#document\" === e.nodeName || \"HTML\" === e.nodeName || \"BODY\" === e.nodeName) {\n                        var s = t;\n                        (t = r.createElement(\"html\")).innerHTML = s;\n                    } else p = (p = t).trim(), t = o ? function(e) {\n                        var t = r.createElement(\"template\");\n                        return t.innerHTML = e, t.content.childNodes[0];\n                    }(p) : a ? function(e) {\n                        return i || (i = r.createRange()).selectNode(r.body), i.createContextualFragment(e).childNodes[0];\n                    }(p) : function(e) {\n                        var t = r.createElement(\"body\");\n                        return t.innerHTML = e, t.childNodes[0];\n                    }(p);\n                    var p, v = n.getNodeKey || d, f = n.onBeforeNodeAdded || u, h = n.onNodeAdded || u, g = n.onBeforeElUpdated || u, m = n.onElUpdated || u, y = n.onBeforeNodeDiscarded || u, b = n.onNodeDiscarded || u, w = n.onBeforeElChildrenUpdated || u, C = !0 === n.childrenOnly, P = Object.create(null), k = [];\n                    function L(e) {\n                        k.push(e);\n                    }\n                    function B(e, t) {\n                        if (1 === e.nodeType) for(var n = e.firstChild; n;){\n                            var i = void 0;\n                            t && (i = v(n)) ? L(i) : (b(n), n.firstChild && B(n, t)), n = n.nextSibling;\n                        }\n                    }\n                    function S(e, t, n) {\n                        !1 !== y(e) && (t && t.removeChild(e), b(e), B(e, n));\n                    }\n                    function _(e) {\n                        h(e);\n                        for(var t = e.firstChild; t;){\n                            var n = t.nextSibling, i = v(t);\n                            if (i) {\n                                var r = P[i];\n                                r && l(t, r) ? (t.parentNode.replaceChild(r, t), T(r, t)) : _(t);\n                            } else _(t);\n                            t = n;\n                        }\n                    }\n                    function T(e, t, n) {\n                        var i = v(t);\n                        if (i && delete P[i], !n) {\n                            if (!1 === g(e, t)) return;\n                            if (function(e, t) {\n                                var n, i, r, o, a = t.attributes;\n                                if (11 !== t.nodeType && 11 !== e.nodeType) {\n                                    for(var l = a.length - 1; l >= 0; l--)i = (n = a[l]).name, r = n.namespaceURI, o = n.value, r ? (i = n.localName || i, e.getAttributeNS(r, i) !== o && (\"xmlns\" === n.prefix && (i = n.name), e.setAttributeNS(r, i, o))) : e.getAttribute(i) !== o && e.setAttribute(i, o);\n                                    for(var s = e.attributes, c = s.length - 1; c >= 0; c--)i = (n = s[c]).name, (r = n.namespaceURI) ? (i = n.localName || i, t.hasAttributeNS(r, i) || e.removeAttributeNS(r, i)) : t.hasAttribute(i) || e.removeAttribute(i);\n                                }\n                            }(e, t), m(e), !1 === w(e, t)) return;\n                        }\n                        \"TEXTAREA\" !== e.nodeName ? function(e, t) {\n                            var n, i, o, a, s, u = t.firstChild, d = e.firstChild;\n                            e: for(; u;){\n                                for(a = u.nextSibling, n = v(u); d;){\n                                    if (o = d.nextSibling, u.isSameNode && u.isSameNode(d)) {\n                                        u = a, d = o;\n                                        continue e;\n                                    }\n                                    i = v(d);\n                                    var p = d.nodeType, h = void 0;\n                                    if (p === u.nodeType && (1 === p ? (n ? n !== i && ((s = P[n]) ? o === s ? h = !1 : (e.insertBefore(s, d), i ? L(i) : S(d, e, !0), d = s) : h = !1) : i && (h = !1), (h = !1 !== h && l(d, u)) && T(d, u)) : 3 !== p && 8 != p || (h = !0, d.nodeValue !== u.nodeValue && (d.nodeValue = u.nodeValue))), h) {\n                                        u = a, d = o;\n                                        continue e;\n                                    }\n                                    i ? L(i) : S(d, e, !0), d = o;\n                                }\n                                if (n && (s = P[n]) && l(s, u)) e.appendChild(s), T(s, u);\n                                else {\n                                    var g = f(u);\n                                    !1 !== g && (g && (u = g), u.actualize && (u = u.actualize(e.ownerDocument || r)), e.appendChild(u), _(u));\n                                }\n                                u = a, d = o;\n                            }\n                            !function(e, t, n) {\n                                for(; t;){\n                                    var i = t.nextSibling;\n                                    (n = v(t)) ? L(n) : S(t, e, !0), t = i;\n                                }\n                            }(e, d, i);\n                            var m = c[e.nodeName];\n                            m && m(e, t);\n                        }(e, t) : c.TEXTAREA(e, t);\n                    }\n                    !function e(t) {\n                        if (1 === t.nodeType || 11 === t.nodeType) for(var n = t.firstChild; n;){\n                            var i = v(n);\n                            i && (P[i] = n), e(n), n = n.nextSibling;\n                        }\n                    }(e);\n                    var O, E, U = e, x = U.nodeType, A = t.nodeType;\n                    if (!C) {\n                        if (1 === x) 1 === A ? l(e, t) || (b(e), U = function(e, t) {\n                            for(var n = e.firstChild; n;){\n                                var i = n.nextSibling;\n                                t.appendChild(n), n = i;\n                            }\n                            return t;\n                        }(e, (O = t.nodeName, (E = t.namespaceURI) && \"http://www.w3.org/1999/xhtml\" !== E ? r.createElementNS(E, O) : r.createElement(O)))) : U = t;\n                        else if (3 === x || 8 === x) {\n                            if (A === x) return U.nodeValue !== t.nodeValue && (U.nodeValue = t.nodeValue), U;\n                            U = t;\n                        }\n                    }\n                    if (U === t) b(e);\n                    else {\n                        if (t.isSameNode && t.isSameNode(U)) return;\n                        if (T(U, t, C), k) for(var D = 0, M = k.length; D < M; D++){\n                            var I = P[k[D]];\n                            I && S(I, I.parentNode, !1);\n                        }\n                    }\n                    return !C && U !== e && e.parentNode && (U.actualize && (U = U.actualize(e.ownerDocument || r)), e.parentNode.replaceChild(U, e)), U;\n                };\n            },\n            135: function(e, t, n) {\n                \"use strict\";\n                var i = this && this.__awaiter || function(e, t, n, i) {\n                    return new (n || (n = Promise))(function(r, o) {\n                        function a(e) {\n                            try {\n                                s(i.next(e));\n                            } catch (e) {\n                                o(e);\n                            }\n                        }\n                        function l(e) {\n                            try {\n                                s(i.throw(e));\n                            } catch (e) {\n                                o(e);\n                            }\n                        }\n                        function s(e) {\n                            var t;\n                            e.done ? r(e.value) : (t = e.value, t instanceof n ? t : new n(function(e) {\n                                e(t);\n                            })).then(a, l);\n                        }\n                        s((i = i.apply(e, t || [])).next());\n                    });\n                }, r = this && this.__generator || function(e, t) {\n                    var n, i, r, o, a = {\n                        label: 0,\n                        sent: function() {\n                            if (1 & r[0]) throw r[1];\n                            return r[1];\n                        },\n                        trys: [],\n                        ops: []\n                    };\n                    return o = {\n                        next: l(0),\n                        throw: l(1),\n                        return: l(2)\n                    }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function() {\n                        return this;\n                    }), o;\n                    function l(l) {\n                        return function(s) {\n                            return function(l) {\n                                if (n) throw new TypeError(\"Generator is already executing.\");\n                                for(; o && (o = 0, l[0] && (a = 0)), a;)try {\n                                    if (n = 1, i && (r = 2 & l[0] ? i.return : l[0] ? i.throw || ((r = i.return) && r.call(i), 0) : i.next) && !(r = r.call(i, l[1])).done) return r;\n                                    switch(i = 0, r && (l = [\n                                        2 & l[0],\n                                        r.value\n                                    ]), l[0]){\n                                        case 0:\n                                        case 1:\n                                            r = l;\n                                            break;\n                                        case 4:\n                                            return a.label++, {\n                                                value: l[1],\n                                                done: !1\n                                            };\n                                        case 5:\n                                            a.label++, i = l[1], l = [\n                                                0\n                                            ];\n                                            continue;\n                                        case 7:\n                                            l = a.ops.pop(), a.trys.pop();\n                                            continue;\n                                        default:\n                                            if (!((r = (r = a.trys).length > 0 && r[r.length - 1]) || 6 !== l[0] && 2 !== l[0])) {\n                                                a = 0;\n                                                continue;\n                                            }\n                                            if (3 === l[0] && (!r || l[1] > r[0] && l[1] < r[3])) {\n                                                a.label = l[1];\n                                                break;\n                                            }\n                                            if (6 === l[0] && a.label < r[1]) {\n                                                a.label = r[1], r = l;\n                                                break;\n                                            }\n                                            if (r && a.label < r[2]) {\n                                                a.label = r[2], a.ops.push(l);\n                                                break;\n                                            }\n                                            r[2] && a.ops.pop(), a.trys.pop();\n                                            continue;\n                                    }\n                                    l = t.call(e, a);\n                                } catch (e) {\n                                    l = [\n                                        6,\n                                        e\n                                    ], i = 0;\n                                } finally{\n                                    n = r = 0;\n                                }\n                                if (5 & l[0]) throw l[1];\n                                return {\n                                    value: l[0] ? l[1] : void 0,\n                                    done: !0\n                                };\n                            }([\n                                l,\n                                s\n                            ]);\n                        };\n                    }\n                }, o = this && this.__importDefault || function(e) {\n                    return e && e.__esModule ? e : {\n                        default: e\n                    };\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.ContentstackLivePreview = void 0;\n                var a = n(614), l = o(n(704)), s = o(n(147)), c = o(n(922)), u = n(334), d = n(895), p = function() {\n                    function e() {}\n                    return e.init = function(t) {\n                        if (void 0 === t && (t = u.userInitData), \"undefined\" != \"undefined\") return e.livePreview ? (d.PublicLogger.warn(\"You have already initialized the Live Preview SDK. So, any subsequent initialization returns the existing SDK instance.\"), Promise.resolve(e.livePreview)) : (e.livePreview = new c.default(t), e.livePreview.setOnChangeCallback(e.publish), e.livePreview.setConfigFromParams(this.configs.params), this.configs.params = {}, Promise.resolve(e.livePreview));\n                        e.userConfig = t;\n                    }, Object.defineProperty(e, \"hash\", {\n                        get: function() {\n                            var e;\n                            return this.livePreview ? this.livePreview.hash : null !== (e = new URLSearchParams(this.configs.params).get(\"live_preview\")) && void 0 !== e ? e : \"\";\n                        },\n                        enumerable: !1,\n                        configurable: !0\n                    }), e.setConfigFromParams = function(e) {\n                        void 0 === e && (e = {}), this.livePreview ? this.livePreview.setConfigFromParams(e) : this.configs.params = e;\n                    }, e.publish = function() {\n                        Object.values(e.subscribers).forEach(function(e) {\n                            e();\n                        });\n                    }, e.subscribe = function(t) {\n                        var n = (0, a.v4)();\n                        return e.subscribers[n] = t, n;\n                    }, e.onEntryChange = function(t, n) {\n                        var i = (n || {}).skipInitialRender, r = void 0 !== i && i;\n                        e.userConfig && (e.livePreview = new c.default(e.userConfig), e.livePreview.setOnChangeCallback(e.publish), e.livePreview.setConfigFromParams(this.configs.params), this.configs.params = {}, e.userConfig = null);\n                        var o = e.subscribe(t);\n                        return r || t(), o;\n                    }, e.onLiveEdit = function(t) {\n                        return e.onEntryChange(t, {\n                            skipInitialRender: !0\n                        });\n                    }, e.unsubscribeOnEntryChange = function(t) {\n                        \"string\" == typeof t ? (e.subscribers[t] || d.PublicLogger.warn(\"No subscriber found with the given id.\"), delete e.subscribers[t]) : \"function\" == typeof t && (Object.entries(e.subscribers).some(function(n) {\n                            var i = n[0];\n                            return n[1] === t && (delete e.subscribers[i], !0);\n                        }) || d.PublicLogger.warn(\"No subscriber found with the given callback.\"));\n                    }, e.getGatsbyDataFormat = function(e, t) {\n                        return i(this, void 0, void 0, function() {\n                            return r(this, function(n) {\n                                return \"function\" == typeof e.find ? [\n                                    2,\n                                    e.toJSON().find().then(function(n) {\n                                        return n.map(function(n) {\n                                            return n.map(function(n) {\n                                                var i;\n                                                return (i = {})[(0, l.default)(\"\".concat(t, \"_\").concat(e.content_type_uid))] = n, i;\n                                            });\n                                        });\n                                    }).catch(function(e) {\n                                        console.error(e);\n                                    })\n                                ] : \"function\" == typeof e.fetch ? [\n                                    2,\n                                    e.toJSON().fetch().then(function(n) {\n                                        var i;\n                                        return (i = {})[(0, l.default)(\"\".concat(t, \"_\").concat(e.content_type_uid))] = n, i;\n                                    }).catch(function(e) {\n                                        console.error(e);\n                                    })\n                                ] : [\n                                    2\n                                ];\n                            });\n                        });\n                    }, e.getSdkVersion = function() {\n                        return s.default.version;\n                    }, e.livePreview = null, e.userConfig = null, e.subscribers = {}, e.configs = {\n                        params: {}\n                    }, e;\n                }();\n                t.ContentstackLivePreview = p, t.default = p, e.exports = p;\n            },\n            607: function(e, t, n) {\n                \"use strict\";\n                var i = this && this.__importDefault || function(e) {\n                    return e && e.__esModule ? e : {\n                        default: e\n                    };\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.ContentstackLivePreview = void 0;\n                var r = i(n(135));\n                n(279), t.ContentstackLivePreview = r.default, t.default = t.ContentstackLivePreview, e.exports = t.ContentstackLivePreview;\n            },\n            922: function(e, t, n) {\n                \"use strict\";\n                var i = this && this.__assign || function() {\n                    return i = Object.assign || function(e) {\n                        for(var t, n = 1, i = arguments.length; n < i; n++)for(var r in t = arguments[n])Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);\n                        return e;\n                    }, i.apply(this, arguments);\n                }, r = this && this.__importDefault || function(e) {\n                    return e && e.__esModule ? e : {\n                        default: e\n                    };\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                });\n                var o = n(928), a = n(895), l = n(383), s = n(334), c = r(n(147)), u = n(63), d = function() {\n                    function e(e) {\n                        void 0 === e && (e = s.userInitData);\n                        var t = this;\n                        this.config = {\n                            ssr: !0,\n                            enable: !0,\n                            runScriptsOnUpdate: !1,\n                            cleanCslpOnProduction: !0,\n                            hash: \"\",\n                            editButton: {\n                                enable: !0,\n                                exclude: [],\n                                position: \"top\",\n                                includeByQueryParameter: !0\n                            },\n                            stackDetails: {\n                                apiKey: \"\",\n                                environment: \"\",\n                                contentTypeUid: \"\",\n                                entryUid: \"\"\n                            },\n                            clientUrlParams: {\n                                protocol: \"https\",\n                                host: \"app.contentstack.com\",\n                                port: 443,\n                                url: \"https://app.contentstack.com:443\"\n                            },\n                            stackSdk: {\n                                live_preview: {},\n                                headers: {\n                                    api_key: \"\"\n                                },\n                                environment: \"\"\n                            },\n                            onChange: function() {}\n                        }, this.tooltip = null, this.currentElementBesideTooltip = null, this.tooltipChild = {\n                            singular: null,\n                            multiple: null\n                        }, this.tooltipCurrentChild = \"singular\", this.createCslpTooltip = function() {\n                            if (!document.getElementById(\"cslp-tooltip\") && t.config.editButton.enable) {\n                                var e = document.createElement(\"button\");\n                                e.classList.add(\"cslp-tooltip\"), e.setAttribute(\"data-test-id\", \"cs-cslp-tooltip\"), e.id = \"cslp-tooltip\", window.document.body.insertAdjacentElement(\"beforeend\", e), t.tooltipChild.singular = (0, o.createSingularEditButton)(t.scrollHandler), t.tooltipChild.multiple = (0, o.createMultipleEditButton)(t.scrollHandler, t.linkClickHandler), e.innerHTML = \"\", e.appendChild(t.tooltipChild.singular), t.tooltip = e;\n                            }\n                            t.updateTooltipPosition();\n                        }, (0, l.handleInitData)(e, this.config), this.addEditStyleOnHover = this.addEditStyleOnHover.bind(this), this.generateRedirectUrl = this.generateRedirectUrl.bind(this), this.scrollHandler = this.scrollHandler.bind(this), this.linkClickHandler = this.linkClickHandler.bind(this), this.handleUserChange = this.handleUserChange.bind(this), this.setOnChangeCallback = this.setOnChangeCallback.bind(this), this.resolveIncomingMessage = this.resolveIncomingMessage.bind(this), this.createCslpTooltip = this.createCslpTooltip.bind(this), this.requestDataSync = this.requestDataSync.bind(this), this.updateTooltipPosition = this.updateTooltipPosition.bind(this), this.removeDataCslp = this.removeDataCslp.bind(this), e.debug && a.PublicLogger.debug(\"Contentstack Live Preview Debugging mode: config --\", this.config), this.config.enable ? (void 0 !== typeof document && \"complete\" === document.readyState ? this.requestDataSync() : window.addEventListener(\"load\", this.requestDataSync), window.addEventListener(\"message\", this.resolveIncomingMessage), window.addEventListener(\"scroll\", this.updateTooltipPosition), this.config.editButton.enable && window.addEventListener(\"mouseover\", this.addEditStyleOnHover), this.config.ssr && (window.addEventListener(\"load\", function(e) {\n                            document.querySelectorAll(\"a\").forEach(function(e) {\n                                var t = document.location.origin;\n                                if (e.href && e.href.includes(t)) {\n                                    var n = (0, o.addLivePreviewQueryTags)(e.href);\n                                    e.href = n;\n                                }\n                            });\n                        }), window.addEventListener(\"click\", function(e) {\n                            var t = e.target, n = t.href, i = document.location.origin;\n                            if (n && n.includes(i) && !n.includes(\"live_preview\")) {\n                                var r = (0, o.addLivePreviewQueryTags)(t.href);\n                                e.target.href = r || t.href;\n                            }\n                        }))) : this.config.cleanCslpOnProduction && this.removeDataCslp();\n                    }\n                    return e.prototype.addEditStyleOnHover = function(e) {\n                        for(var t, n, i, r = !0, o = 0, a = e.composedPath(); o < a.length; o++){\n                            var l = a[o];\n                            if (\"BODY\" === l.nodeName) break;\n                            if (\"function\" == typeof (null == l ? void 0 : l.getAttribute)) {\n                                var s = l.getAttribute(\"data-cslp\");\n                                r && s ? (this.currentElementBesideTooltip && this.currentElementBesideTooltip.classList.remove(\"cslp-edit-mode\"), l.classList.add(\"cslp-edit-mode\"), this.currentElementBesideTooltip = l, this.updateTooltipPosition() && (null === (t = this.tooltip) || void 0 === t || t.setAttribute(\"current-data-cslp\", s), null === (n = this.tooltip) || void 0 === n || n.setAttribute(\"current-href\", null !== (i = l.getAttribute(\"href\")) && void 0 !== i ? i : \"\")), r = !1) : r || l.classList.remove(\"cslp-edit-mode\");\n                            }\n                        }\n                    }, e.prototype.generateRedirectUrl = function(e, t, n, i) {\n                        if (void 0 === t && (t = \"en-us\"), !this.config.stackDetails.apiKey) throw \"To use edit tags, you must provide the stack API key. Specify the API key while initializing the Live Preview SDK.\\n\\n                ContentstackLivePreview.init({\\n                    ...,\\n                    stackDetails: {\\n                        apiKey: 'your-api-key'\\n                    },\\n                    ...\\n                })\";\n                        if (!this.config.stackDetails.environment) throw \"To use edit tags, you must provide the preview environment. Specify the preview environment while initializing the Live Preview SDK.\\n\\n                ContentstackLivePreview.init({\\n                    ...,\\n                    stackDetails: {\\n                        environment: 'Your-environment'\\n                    },\\n                    ...\\n                })\";\n                        var r = String(this.config.clientUrlParams.protocol), o = String(this.config.clientUrlParams.host), a = String(this.config.clientUrlParams.port), l = String(this.config.stackDetails.environment), s = \"!/stack/\".concat(this.config.stackDetails.apiKey, \"/content-type/\").concat(e, \"/\").concat(null != t ? t : \"en-us\", \"/entry/\").concat(n, \"/edit\"), c = new URL(\"\".concat(r, \"://\").concat(o));\n                        return c.port = a, c.hash = s, c.searchParams.append(\"preview-field\", i), c.searchParams.append(\"preview-locale\", null != t ? t : \"en-us\"), c.searchParams.append(\"preview-environment\", l), \"\".concat(c.origin, \"/\").concat(c.hash).concat(c.search);\n                    }, e.prototype.scrollHandler = function() {\n                        if (this.tooltip) {\n                            var e = this.tooltip.getAttribute(\"current-data-cslp\");\n                            if (e) {\n                                var t = e.split(\".\"), n = t[0], i = t[1], r = t[2], o = t.slice(3);\n                                if (window.location !== window.parent.location) window.parent.postMessage({\n                                    from: \"live-preview\",\n                                    type: \"scroll\",\n                                    data: {\n                                        field: o.join(\".\"),\n                                        content_type_uid: n,\n                                        entry_uid: i,\n                                        locale: r\n                                    }\n                                }, \"*\");\n                                else try {\n                                    var l = this.generateRedirectUrl(n, r, i, o.join(\".\"));\n                                    window.open(l, \"_blank\");\n                                } catch (e) {\n                                    a.PublicLogger.error(e);\n                                }\n                            }\n                        }\n                    }, e.prototype.linkClickHandler = function() {\n                        if (this.tooltip) {\n                            var e = this.tooltip.getAttribute(\"current-href\");\n                            e && window.location.assign(e);\n                        }\n                    }, e.prototype.handleUserChange = function(e) {\n                        this.config.stackSdk.live_preview = i(i(i({}, this.config.stackSdk.live_preview), e), {\n                            live_preview: e.hash\n                        }), this.config.onChange();\n                    }, e.prototype.setOnChangeCallback = function(e) {\n                        this.config.onChange = e;\n                    }, Object.defineProperty(e.prototype, \"hash\", {\n                        get: function() {\n                            return this.config.hash;\n                        },\n                        enumerable: !1,\n                        configurable: !0\n                    }), e.prototype.setConfigFromParams = function(e) {\n                        if (void 0 === e && (e = {}), \"object\" != typeof e) throw new TypeError(\"Live preview SDK: query param must be an object\");\n                        var t = new URLSearchParams(e).get(\"live_preview\");\n                        t && (this.config.hash = t);\n                    }, e.prototype.resolveIncomingMessage = function(e) {\n                        var t = this;\n                        if (\"object\" == typeof e.data && \"live-preview\" === e.data.from) switch(e.data.type){\n                            case \"client-data-send\":\n                                var n = this.config.stackDetails, i = n.contentTypeUid, r = n.entryUid, o = e.data.data.hash;\n                                if (this.setConfigFromParams({\n                                    live_preview: o\n                                }), this.config.ssr) {\n                                    var a = new URL(window.location.href);\n                                    a.searchParams.append(\"live_preview\", o), a.searchParams.append(\"content_type_uid\", i), a.searchParams.append(\"entry_uid\", r), fetch(a.toString(), {\n                                        method: \"GET\"\n                                    }).then(function(e) {\n                                        return e.text();\n                                    }).then(function(e) {\n                                        (0, u.updateDocumentBody)(document, e, {\n                                            onPostOperation: t.createCslpTooltip,\n                                            shouldReRunScripts: t.config.runScriptsOnUpdate\n                                        });\n                                    });\n                                } else this.handleUserChange({\n                                    content_type_uid: i,\n                                    entry_uid: r,\n                                    hash: o\n                                });\n                                break;\n                            case \"init-ack\":\n                                var l = e.data.data;\n                                i = l.contentTypeUid, r = l.entryUid, this.config.stackDetails.contentTypeUid = i, this.config.stackDetails.entryUid = r;\n                                break;\n                            case \"history\":\n                                switch(e.data.data.type){\n                                    case \"forward\":\n                                        window.history.forward();\n                                        break;\n                                    case \"backward\":\n                                        window.history.back();\n                                        break;\n                                    case \"reload\":\n                                        window.history.go();\n                                }\n                                break;\n                            case \"document-body-post-scripts-loaded\":\n                                var s = e.data.data.body;\n                                (0, u.replaceDocumentBody)(s, this.createCslpTooltip);\n                        }\n                    }, e.prototype.requestDataSync = function() {\n                        this.handleUserChange({\n                            live_preview: \"init\"\n                        }), this.createCslpTooltip(), window.parent.postMessage({\n                            from: \"live-preview\",\n                            type: \"init\",\n                            data: {\n                                config: {\n                                    shouldReload: this.config.ssr,\n                                    href: window.location.href,\n                                    sdkVersion: c.default.version\n                                }\n                            }\n                        }, \"*\"), this.config.ssr || setInterval(function() {\n                            window.parent.postMessage({\n                                from: \"live-preview\",\n                                type: \"check-entry-page\",\n                                data: {\n                                    href: window.location.href\n                                }\n                            }, \"*\");\n                        }, 1500);\n                    }, e.prototype.updateTooltipPosition = function() {\n                        var e;\n                        if (!this.currentElementBesideTooltip || !this.tooltip) return !1;\n                        var t = this.currentElementBesideTooltip.getBoundingClientRect(), n = null === (e = this.tooltip.parentElement) || void 0 === e ? void 0 : e.getBoundingClientRect();\n                        if (t && n) {\n                            var i = (0, o.getEditButtonPosition)(this.currentElementBesideTooltip, this.config.editButton.position), r = i.upperBoundOfTooltip, a = i.leftBoundOfTooltip;\n                            return r < 0 && (r = t.top < 0 ? t.top : 0), this.tooltip.style.top = r + \"px\", this.tooltip.style.zIndex = this.currentElementBesideTooltip.style.zIndex || \"200\", this.tooltip.style.left = a + \"px\", this.tooltipChild.singular && this.tooltipChild.multiple && (this.currentElementBesideTooltip.hasAttribute(\"href\") ? \"multiple\" !== this.tooltipCurrentChild && (this.tooltip.innerHTML = \"\", this.tooltip.appendChild(this.tooltipChild.multiple), this.tooltipCurrentChild = \"multiple\") : \"singular\" !== this.tooltipCurrentChild && (this.tooltip.innerHTML = \"\", this.tooltip.appendChild(this.tooltipChild.singular), this.tooltipCurrentChild = \"singular\")), !0;\n                        }\n                        return !1;\n                    }, e.prototype.removeDataCslp = function() {\n                        document.querySelectorAll(\"[data-cslp]\").forEach(function(e) {\n                            e.removeAttribute(\"data-cslp\"), e.removeAttribute(\"data-cslp-button-position\");\n                        });\n                    }, e;\n                }();\n                t.default = d;\n            },\n            334: (e, t)=>{\n                \"use strict\";\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.userInitData = void 0, t.userInitData = {\n                    ssr: !0,\n                    enable: !0,\n                    cleanCslpOnProduction: !0,\n                    editButton: {\n                        enable: !0,\n                        exclude: [],\n                        position: \"top\",\n                        includeByQueryParameter: !0\n                    },\n                    stackDetails: {\n                        apiKey: \"\",\n                        environment: \"\"\n                    },\n                    clientUrlParams: {\n                        protocol: \"https\",\n                        host: \"app.contentstack.com\",\n                        port: 443\n                    },\n                    stackSdk: {\n                        live_preview: {},\n                        headers: {\n                            api_key: \"\"\n                        },\n                        environment: \"\"\n                    },\n                    runScriptsOnUpdate: !1\n                };\n            },\n            383: (e, t, n)=>{\n                \"use strict\";\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.handleUserConfig = t.handleInitData = void 0;\n                var i = n(928), r = n(895), o = function(e, t) {\n                    var n, i, r;\n                    if (e.clientUrlParams.host = null !== (n = t.host) && void 0 !== n ? n : e.clientUrlParams.host, e.clientUrlParams.protocol = null !== (i = t.protocol) && void 0 !== i ? i : e.clientUrlParams.protocol, e.clientUrlParams.port = null !== (r = t.port) && void 0 !== r ? r : e.clientUrlParams.port, void 0 !== t.protocol && void 0 === t.port) switch(t.protocol){\n                        case \"http\":\n                            e.clientUrlParams.port = 80;\n                            break;\n                        case \"https\":\n                            e.clientUrlParams.port = 443;\n                    }\n                    var o = e.clientUrlParams.host;\n                    o.endsWith(\"/\") && (o = o.slice(0, -1), e.clientUrlParams.host = o), e.clientUrlParams.url = \"\".concat(e.clientUrlParams.protocol, \"://\").concat(e.clientUrlParams.host, \":\").concat(e.clientUrlParams.port);\n                };\n                function a(e) {\n                    return Object.prototype.hasOwnProperty.call(e, \"cachePolicy\");\n                }\n                t.handleInitData = function(e, t) {\n                    var n, l, s, c, u, d, p, v, f, h, g, m, y, b, w, C, P, k, L, B, S, _, T, O, E, U, x, A, D, M, I, N, j, R, H, V, K, F, Z, q, Q, z, W, G, Y, $, J, X, ee, te, ne, ie, re, oe, ae, le, se, ce;\n                    if (a(e)) {\n                        r.PublicLogger.warn(\"Deprecated: Do not pass the Stack object directly to the Live Preview SDK. Pass it using the config.stackSDK config object.\");\n                        var ue = (null == e ? void 0 : e.live_preview) || {};\n                        t.ssr = !1, t.runScriptsOnUpdate = null !== (n = ue.runScriptsOnUpdate) && void 0 !== n ? n : t.runScriptsOnUpdate, t.enable = null !== (l = ue.enable) && void 0 !== l ? l : t.enable, t.cleanCslpOnProduction = null !== (s = ue.cleanCslpOnProduction) && void 0 !== s ? s : t.cleanCslpOnProduction, t.editButton = {\n                            enable: (0, i.shouldRenderEditButton)(null !== (c = ue.editButton) && void 0 !== c ? c : t.editButton),\n                            exclude: Array.isArray(null === (u = ue.editButton) || void 0 === u ? void 0 : u.exclude) && (null === (d = ue.editButton) || void 0 === d ? void 0 : d.exclude) ? null === (p = ue.editButton) || void 0 === p ? void 0 : p.exclude : null !== (v = t.editButton.exclude) && void 0 !== v ? v : [],\n                            position: null !== (g = null !== (h = null === (f = ue.editButton) || void 0 === f ? void 0 : f.position) && void 0 !== h ? h : t.editButton.position) && void 0 !== g ? g : \"top\",\n                            includeByQueryParameter: null === (b = null !== (y = null === (m = ue.editButton) || void 0 === m ? void 0 : m.includeByQueryParameter) && void 0 !== y ? y : t.editButton.includeByQueryParameter) || void 0 === b || b\n                        }, t.stackSdk = e, Object.prototype.hasOwnProperty.call(e.headers, \"api_key\") && e.headers.api_key && (t.stackDetails.apiKey = e.headers.api_key), Object.prototype.hasOwnProperty.call(e, \"environment\") && (t.stackDetails.environment = e.environment), o(t, null !== (w = ue.clientUrlParams) && void 0 !== w ? w : t.clientUrlParams);\n                    } else if (!a(e)) {\n                        var de = e.stackSdk || t.stackSdk;\n                        t.enable = null !== (k = null !== (C = e.enable) && void 0 !== C ? C : null === (P = de.live_preview) || void 0 === P ? void 0 : P.enable) && void 0 !== k ? k : t.enable, t.ssr = null === (_ = null !== (S = null !== (L = e.ssr) && void 0 !== L ? L : null === (B = de.live_preview) || void 0 === B ? void 0 : B.ssr) && void 0 !== S ? S : \"object\" != typeof e.stackSdk) || void 0 === _ || _, t.runScriptsOnUpdate = null !== (E = null !== (T = e.runScriptsOnUpdate) && void 0 !== T ? T : null === (O = de.live_preview) || void 0 === O ? void 0 : O.runScriptsOnUpdate) && void 0 !== E ? E : t.runScriptsOnUpdate, t.stackSdk = de, t.cleanCslpOnProduction = null !== (A = null !== (U = e.cleanCslpOnProduction) && void 0 !== U ? U : null === (x = de.live_preview) || void 0 === x ? void 0 : x.cleanCslpOnProduction) && void 0 !== A ? A : t.cleanCslpOnProduction, t.editButton = {\n                            enable: (0, i.shouldRenderEditButton)(null !== (I = null !== (D = e.editButton) && void 0 !== D ? D : null === (M = de.live_preview) || void 0 === M ? void 0 : M.editButton) && void 0 !== I ? I : t.editButton),\n                            exclude: Array.isArray(null === (N = e.editButton) || void 0 === N ? void 0 : N.exclude) && (null === (j = e.editButton) || void 0 === j ? void 0 : j.exclude) ? null === (R = e.editButton) || void 0 === R ? void 0 : R.exclude : Array.isArray(null === (H = de.live_preview) || void 0 === H ? void 0 : H.exclude) && (null === (V = de.live_preview) || void 0 === V ? void 0 : V.exclude) ? null === (K = de.live_preview) || void 0 === K ? void 0 : K.exclude : null !== (F = t.editButton.exclude) && void 0 !== F ? F : [],\n                            position: null !== (W = null !== (z = null !== (q = null === (Z = e.editButton) || void 0 === Z ? void 0 : Z.position) && void 0 !== q ? q : null === (Q = de.live_preview) || void 0 === Q ? void 0 : Q.position) && void 0 !== z ? z : t.editButton.position) && void 0 !== W ? W : \"top\",\n                            includeByQueryParameter: null === (X = null !== (J = null !== (Y = null === (G = e.editButton) || void 0 === G ? void 0 : G.includeByQueryParameter) && void 0 !== Y ? Y : null === ($ = de.live_preview) || void 0 === $ ? void 0 : $.includeByQueryParameter) && void 0 !== J ? J : t.editButton.includeByQueryParameter) || void 0 === X || X\n                        }, t.stackDetails.apiKey = null !== (ie = null !== (te = null === (ee = e.stackDetails) || void 0 === ee ? void 0 : ee.apiKey) && void 0 !== te ? te : null === (ne = de.headers) || void 0 === ne ? void 0 : ne.api_key) && void 0 !== ie ? ie : t.stackDetails.apiKey, t.stackDetails.environment = null !== (ae = null !== (oe = null === (re = e.stackDetails) || void 0 === re ? void 0 : re.environment) && void 0 !== oe ? oe : de.environment) && void 0 !== ae ? ae : t.stackDetails.environment, o(t, null !== (ce = null !== (le = e.clientUrlParams) && void 0 !== le ? le : null === (se = de.live_preview) || void 0 === se ? void 0 : se.clientUrlParams) && void 0 !== ce ? ce : t.clientUrlParams);\n                    }\n                }, t.handleUserConfig = {\n                    clientUrlParams: o\n                };\n            },\n            928: (e, t, n)=>{\n                \"use strict\";\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.getEditButtonPosition = t.shouldRenderEditButton = t.addLivePreviewQueryTags = t.createMultipleEditButton = t.createSingularEditButton = t.tooltipMultipleInnerHtml = t.tooltipSingularInnerHtml = t.hasWindow = void 0;\n                var i = n(895);\n                function r() {\n                    return window.location !== window.parent.location;\n                }\n                t.hasWindow = function() {\n                    return \"undefined\" != \"undefined\";\n                }, t.tooltipSingularInnerHtml = '<div class=\"singular edit-button\">\\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\\n    </svg>Edit\\n  </div>', t.tooltipMultipleInnerHtml = '<div class=\"edit-button\" title=\"edit\">\\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\\n    </svg>\\n  </div>\\n  <div title=\"click element\" class=\"external-link-button\">\\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M2.66654 2.66758H13.3332V13.3342H6.66654V16.0009H13.3332C14.0405 16.0009 14.7187 15.72 15.2188 15.2199C15.7189 14.7198 15.9999 14.0415 15.9999 13.3342V2.66758C15.9999 1.96034 15.7189 1.28206 15.2188 0.781964C14.7187 0.281867 14.0405 0.000915527 13.3332 0.000915527H2.66654C1.9593 0.000915527 1.28102 0.281867 0.780927 0.781964C0.280829 1.28206 -0.00012207 1.96034 -0.00012207 2.66758V9.33425H2.66654V2.66758Z\" fill=\"#718096\" />\\n      <path d=\"M6.94263 7.05734L0.999958 13L2.88529 14.8853L8.82796 8.94267L10.8853 11V5.00001H4.88529L6.94263 7.05734Z\" fill=\"#718096\" />\\n    </svg>\\n  </div>', t.createSingularEditButton = function(e) {\n                    var t = document.createElement(\"div\");\n                    return t.classList.add(\"cslp-tooltip-child\", \"singular\"), t.setAttribute(\"data-test-id\", \"cslp-singular-edit-button\"), t.innerHTML = '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\\n    </svg>Edit', t.addEventListener(\"click\", e), t;\n                }, t.createMultipleEditButton = function(e, t) {\n                    var n = document.createElement(\"div\");\n                    n.classList.add(\"cslp-tooltip-child\"), n.setAttribute(\"data-title\", \"Edit\"), n.setAttribute(\"data-test-id\", \"cslp-multiple-edit-button\"), n.innerHTML = ' <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\\n    </svg>', n.addEventListener(\"click\", e);\n                    var i = document.createElement(\"div\");\n                    i.classList.add(\"cslp-tooltip-child\"), i.setAttribute(\"data-title\", \"Go to link\"), i.setAttribute(\"data-test-id\", \"cslp-multiple-external-link-button\"), i.innerHTML = ' <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M2.66654 2.66758H13.3332V13.3342H6.66654V16.0009H13.3332C14.0405 16.0009 14.7187 15.72 15.2188 15.2199C15.7189 14.7198 15.9999 14.0415 15.9999 13.3342V2.66758C15.9999 1.96034 15.7189 1.28206 15.2188 0.781964C14.7187 0.281867 14.0405 0.000915527 13.3332 0.000915527H2.66654C1.9593 0.000915527 1.28102 0.281867 0.780927 0.781964C0.280829 1.28206 -0.00012207 1.96034 -0.00012207 2.66758V9.33425H2.66654V2.66758Z\" fill=\"#718096\" />\\n      <path d=\"M6.94263 7.05734L0.999958 13L2.88529 14.8853L8.82796 8.94267L10.8853 11V5.00001H4.88529L6.94263 7.05734Z\" fill=\"#718096\" />\\n    </svg>', i.addEventListener(\"click\", t);\n                    var r = document.createDocumentFragment();\n                    r.appendChild(n), r.appendChild(i);\n                    var o = document.createElement(\"div\");\n                    return o.appendChild(r), o.classList.add(\"multiple\"), o;\n                }, t.addLivePreviewQueryTags = function(e) {\n                    try {\n                        var t = new URL(document.location.href), n = new URL(e), r = t.searchParams.get(\"live_preview\"), o = t.searchParams.get(\"content_type_uid\"), a = t.searchParams.get(\"entry_uid\");\n                        return r && o && a && (n.searchParams.set(\"live_preview\", r), n.searchParams.set(\"content_type_uid\", o), n.searchParams.set(\"entry_uid\", a)), n.href;\n                    } catch (t) {\n                        return i.PublicLogger.error(\"Error while adding live preview to URL\"), e;\n                    }\n                }, t.shouldRenderEditButton = function(e) {\n                    var t, n;\n                    if (!e.enable) return void 0 === e.enable && i.PublicLogger.error(\"enable key is required inside editButton object\"), !1;\n                    try {\n                        var o = new URL(window.location.href).searchParams.get(\"cslp-buttons\");\n                        if (null !== o && !1 !== e.includeByQueryParameter) return \"false\" !== o;\n                    } catch (e) {\n                        i.PublicLogger.error(e);\n                    }\n                    return !(r() && (null === (t = e.exclude) || void 0 === t ? void 0 : t.find(function(e) {\n                        return \"insideLivePreviewPortal\" === e;\n                    })) || !r() && (null === (n = e.exclude) || void 0 === n ? void 0 : n.find(function(e) {\n                        return \"outsideLivePreviewPortal\" === e;\n                    })));\n                }, t.getEditButtonPosition = function(e, t) {\n                    if (!e) return {\n                        upperBoundOfTooltip: 0,\n                        leftBoundOfTooltip: 0\n                    };\n                    var n = e.getAttribute(\"data-cslp-button-position\");\n                    return function(e, t) {\n                        var n = {\n                            upperBoundOfTooltip: 0,\n                            leftBoundOfTooltip: 0\n                        }, r = e.getBoundingClientRect();\n                        try {\n                            var o = {\n                                width: 72,\n                                halfWidth: 36,\n                                height: 40,\n                                basicMargin: 5,\n                                widthWithMargin: 77\n                            };\n                            switch(t){\n                                case \"top-center\":\n                                    n.upperBoundOfTooltip = r.top - o.height, n.leftBoundOfTooltip = r.width / 2 - o.halfWidth + r.left;\n                                    break;\n                                case \"top-right\":\n                                    n.upperBoundOfTooltip = r.top - o.height, n.leftBoundOfTooltip = r.right - o.width;\n                                    break;\n                                case \"right\":\n                                    n.upperBoundOfTooltip = r.top - o.basicMargin, n.leftBoundOfTooltip = r.right + o.basicMargin;\n                                    break;\n                                case \"bottom\":\n                                case \"bottom-left\":\n                                    n.upperBoundOfTooltip = r.bottom + o.basicMargin, n.leftBoundOfTooltip = r.left - o.basicMargin;\n                                    break;\n                                case \"bottom-center\":\n                                    n.upperBoundOfTooltip = r.bottom + o.basicMargin, n.leftBoundOfTooltip = r.width / 2 - o.halfWidth + r.left;\n                                    break;\n                                case \"bottom-right\":\n                                    n.upperBoundOfTooltip = r.bottom + o.basicMargin, n.leftBoundOfTooltip = r.right - o.width;\n                                    break;\n                                case \"left\":\n                                    n.upperBoundOfTooltip = r.top - o.basicMargin, n.leftBoundOfTooltip = r.left - o.widthWithMargin;\n                                    break;\n                                default:\n                                    n.upperBoundOfTooltip = r.top - o.height, n.leftBoundOfTooltip = r.left - o.basicMargin;\n                            }\n                            return n;\n                        } catch (e) {\n                            return i.PublicLogger.error(e), n;\n                        }\n                    }(e, n || t || \"top\");\n                };\n            },\n            895: function(e, t) {\n                \"use strict\";\n                var n = this && this.__spreadArray || function(e, t, n) {\n                    if (n || 2 === arguments.length) for(var i, r = 0, o = t.length; r < o; r++)!i && r in t || (i || (i = Array.prototype.slice.call(t, 0, r)), i[r] = t[r]);\n                    return e.concat(i || Array.prototype.slice.call(t));\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.PublicLogger = void 0;\n                var i = function() {\n                    function e() {}\n                    return e.logEvent = function(e, t) {\n                        e.apply(void 0, n([\n                            \"Live_Preview_SDK:\"\n                        ], t, !1));\n                    }, e.error = function() {\n                        for(var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t];\n                        this.logEvent(console.error, e);\n                    }, e.warn = function() {\n                        for(var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t];\n                        this.logEvent(console.warn, e);\n                    }, e.debug = function() {\n                        for(var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t];\n                        this.logEvent(console.debug, e);\n                    }, e;\n                }();\n                t.PublicLogger = i;\n            },\n            63: function(e, t, n) {\n                \"use strict\";\n                var i = this && this.__awaiter || function(e, t, n, i) {\n                    return new (n || (n = Promise))(function(r, o) {\n                        function a(e) {\n                            try {\n                                s(i.next(e));\n                            } catch (e) {\n                                o(e);\n                            }\n                        }\n                        function l(e) {\n                            try {\n                                s(i.throw(e));\n                            } catch (e) {\n                                o(e);\n                            }\n                        }\n                        function s(e) {\n                            var t;\n                            e.done ? r(e.value) : (t = e.value, t instanceof n ? t : new n(function(e) {\n                                e(t);\n                            })).then(a, l);\n                        }\n                        s((i = i.apply(e, t || [])).next());\n                    });\n                }, r = this && this.__generator || function(e, t) {\n                    var n, i, r, o, a = {\n                        label: 0,\n                        sent: function() {\n                            if (1 & r[0]) throw r[1];\n                            return r[1];\n                        },\n                        trys: [],\n                        ops: []\n                    };\n                    return o = {\n                        next: l(0),\n                        throw: l(1),\n                        return: l(2)\n                    }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function() {\n                        return this;\n                    }), o;\n                    function l(l) {\n                        return function(s) {\n                            return function(l) {\n                                if (n) throw new TypeError(\"Generator is already executing.\");\n                                for(; o && (o = 0, l[0] && (a = 0)), a;)try {\n                                    if (n = 1, i && (r = 2 & l[0] ? i.return : l[0] ? i.throw || ((r = i.return) && r.call(i), 0) : i.next) && !(r = r.call(i, l[1])).done) return r;\n                                    switch(i = 0, r && (l = [\n                                        2 & l[0],\n                                        r.value\n                                    ]), l[0]){\n                                        case 0:\n                                        case 1:\n                                            r = l;\n                                            break;\n                                        case 4:\n                                            return a.label++, {\n                                                value: l[1],\n                                                done: !1\n                                            };\n                                        case 5:\n                                            a.label++, i = l[1], l = [\n                                                0\n                                            ];\n                                            continue;\n                                        case 7:\n                                            l = a.ops.pop(), a.trys.pop();\n                                            continue;\n                                        default:\n                                            if (!((r = (r = a.trys).length > 0 && r[r.length - 1]) || 6 !== l[0] && 2 !== l[0])) {\n                                                a = 0;\n                                                continue;\n                                            }\n                                            if (3 === l[0] && (!r || l[1] > r[0] && l[1] < r[3])) {\n                                                a.label = l[1];\n                                                break;\n                                            }\n                                            if (6 === l[0] && a.label < r[1]) {\n                                                a.label = r[1], r = l;\n                                                break;\n                                            }\n                                            if (r && a.label < r[2]) {\n                                                a.label = r[2], a.ops.push(l);\n                                                break;\n                                            }\n                                            r[2] && a.ops.pop(), a.trys.pop();\n                                            continue;\n                                    }\n                                    l = t.call(e, a);\n                                } catch (e) {\n                                    l = [\n                                        6,\n                                        e\n                                    ], i = 0;\n                                } finally{\n                                    n = r = 0;\n                                }\n                                if (5 & l[0]) throw l[1];\n                                return {\n                                    value: l[0] ? l[1] : void 0,\n                                    done: !0\n                                };\n                            }([\n                                l,\n                                s\n                            ]);\n                        };\n                    }\n                }, o = this && this.__importDefault || function(e) {\n                    return e && e.__esModule ? e : {\n                        default: e\n                    };\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.replaceDocumentBody = t.updateDocumentBody = t.rerunScriptsInDocument = void 0;\n                var a = o(n(492));\n                function l() {\n                    var e = document.querySelectorAll(\"script\"), t = e.length, n = 0;\n                    function i() {\n                        n++, 0 == --t && window.parent.postMessage({\n                            from: \"live-preview\",\n                            type: \"document-body-post-scripts-loaded\",\n                            data: {\n                                body: document.body.outerHTML\n                            }\n                        }, \"*\"), r();\n                    }\n                    function r() {\n                        if (n < e.length) {\n                            var t = e[n], r = t.parentNode, o = document.createElement(\"script\");\n                            t.src ? (o.onerror = i, o.onload = i, o.src = t.src) : (o.text = t.text, i()), null == r || r.replaceChild(o, t);\n                        }\n                    }\n                    e.length && r();\n                }\n                function s(e, t) {\n                    var n = (new DOMParser).parseFromString(e, \"text/html\");\n                    (0, a.default)(document.body, n.body), t && t();\n                }\n                t.rerunScriptsInDocument = l, t.updateDocumentBody = function(e, t, n) {\n                    return i(this, void 0, void 0, function() {\n                        var i, o, a, c, u;\n                        return r(this, function(r) {\n                            return i = n.shouldReRunScripts, o = n.onPostOperation, i ? (e.querySelectorAll(\"iframe#contentstack-live-preview-iframe\").forEach(function(e) {\n                                e.remove();\n                            }), (a = e.createElement(\"iframe\")).style.display = \"none\", a.id = \"contentstack-live-preview-iframe\", c = /(<\\s*\\/\\s*script\\s*>)|(`)/gm, u = t.replace(c, function(e, t, n) {\n                                return n ? \"\\\\`\" : \"<\\\\/script>\";\n                            }), a.srcdoc = \"\\n        <head>\\n        <script>\\n            function prepareIframeForScriptRerun() {\\n                const responseHTML = `\".concat(u, '`;\\n\\n                const html = document.getElementsByTagName(\"html\").item(0);\\n\\n                const rerunScriptsInDocument = ').concat(l, \"\\n\\n                if (html) {\\n                    html.innerHTML = responseHTML;\\n                    rerunScriptsInDocument();\\n                }\\n            }\\n            prepareIframeForScriptRerun()\\n        </script>\\n        </head>\"), e.body.appendChild(a)) : s(t, o), [\n                                2\n                            ];\n                        });\n                    });\n                }, t.replaceDocumentBody = s;\n            },\n            614: (e, t, n)=>{\n                \"use strict\";\n                var i;\n                n.r(t), n.d(t, {\n                    NIL: ()=>E,\n                    parse: ()=>g,\n                    stringify: ()=>u,\n                    v1: ()=>h,\n                    v3: ()=>B,\n                    v4: ()=>S,\n                    v5: ()=>O,\n                    validate: ()=>l,\n                    version: ()=>U\n                });\n                var r = new Uint8Array(16);\n                function o() {\n                    if (!i && !(i = \"undefined\" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || \"undefined\" != typeof msCrypto && \"function\" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto))) throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n                    return i(r);\n                }\n                const a = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i, l = function(e) {\n                    return \"string\" == typeof e && a.test(e);\n                };\n                for(var s = [], c = 0; c < 256; ++c)s.push((c + 256).toString(16).substr(1));\n                const u = function(e) {\n                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = (s[e[t + 0]] + s[e[t + 1]] + s[e[t + 2]] + s[e[t + 3]] + \"-\" + s[e[t + 4]] + s[e[t + 5]] + \"-\" + s[e[t + 6]] + s[e[t + 7]] + \"-\" + s[e[t + 8]] + s[e[t + 9]] + \"-\" + s[e[t + 10]] + s[e[t + 11]] + s[e[t + 12]] + s[e[t + 13]] + s[e[t + 14]] + s[e[t + 15]]).toLowerCase();\n                    if (!l(n)) throw TypeError(\"Stringified UUID is invalid\");\n                    return n;\n                };\n                var d, p, v = 0, f = 0;\n                const h = function(e, t, n) {\n                    var i = t && n || 0, r = t || new Array(16), a = (e = e || {}).node || d, l = void 0 !== e.clockseq ? e.clockseq : p;\n                    if (null == a || null == l) {\n                        var s = e.random || (e.rng || o)();\n                        null == a && (a = d = [\n                            1 | s[0],\n                            s[1],\n                            s[2],\n                            s[3],\n                            s[4],\n                            s[5]\n                        ]), null == l && (l = p = 16383 & (s[6] << 8 | s[7]));\n                    }\n                    var c = void 0 !== e.msecs ? e.msecs : Date.now(), h = void 0 !== e.nsecs ? e.nsecs : f + 1, g = c - v + (h - f) / 1e4;\n                    if (g < 0 && void 0 === e.clockseq && (l = l + 1 & 16383), (g < 0 || c > v) && void 0 === e.nsecs && (h = 0), h >= 1e4) throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n                    v = c, f = h, p = l;\n                    var m = (1e4 * (268435455 & (c += 122192928e5)) + h) % 4294967296;\n                    r[i++] = m >>> 24 & 255, r[i++] = m >>> 16 & 255, r[i++] = m >>> 8 & 255, r[i++] = 255 & m;\n                    var y = c / 4294967296 * 1e4 & 268435455;\n                    r[i++] = y >>> 8 & 255, r[i++] = 255 & y, r[i++] = y >>> 24 & 15 | 16, r[i++] = y >>> 16 & 255, r[i++] = l >>> 8 | 128, r[i++] = 255 & l;\n                    for(var b = 0; b < 6; ++b)r[i + b] = a[b];\n                    return t || u(r);\n                }, g = function(e) {\n                    if (!l(e)) throw TypeError(\"Invalid UUID\");\n                    var t, n = new Uint8Array(16);\n                    return n[0] = (t = parseInt(e.slice(0, 8), 16)) >>> 24, n[1] = t >>> 16 & 255, n[2] = t >>> 8 & 255, n[3] = 255 & t, n[4] = (t = parseInt(e.slice(9, 13), 16)) >>> 8, n[5] = 255 & t, n[6] = (t = parseInt(e.slice(14, 18), 16)) >>> 8, n[7] = 255 & t, n[8] = (t = parseInt(e.slice(19, 23), 16)) >>> 8, n[9] = 255 & t, n[10] = (t = parseInt(e.slice(24, 36), 16)) / 1099511627776 & 255, n[11] = t / 4294967296 & 255, n[12] = t >>> 24 & 255, n[13] = t >>> 16 & 255, n[14] = t >>> 8 & 255, n[15] = 255 & t, n;\n                };\n                function m(e, t, n) {\n                    function i(e, i, r, o) {\n                        if (\"string\" == typeof e && (e = function(e) {\n                            e = unescape(encodeURIComponent(e));\n                            for(var t = [], n = 0; n < e.length; ++n)t.push(e.charCodeAt(n));\n                            return t;\n                        }(e)), \"string\" == typeof i && (i = g(i)), 16 !== i.length) throw TypeError(\"Namespace must be array-like (16 iterable integer values, 0-255)\");\n                        var a = new Uint8Array(16 + e.length);\n                        if (a.set(i), a.set(e, i.length), (a = n(a))[6] = 15 & a[6] | t, a[8] = 63 & a[8] | 128, r) {\n                            o = o || 0;\n                            for(var l = 0; l < 16; ++l)r[o + l] = a[l];\n                            return r;\n                        }\n                        return u(a);\n                    }\n                    try {\n                        i.name = e;\n                    } catch (e) {}\n                    return i.DNS = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\", i.URL = \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\", i;\n                }\n                function y(e) {\n                    return 14 + (e + 64 >>> 9 << 4) + 1;\n                }\n                function b(e, t) {\n                    var n = (65535 & e) + (65535 & t);\n                    return (e >> 16) + (t >> 16) + (n >> 16) << 16 | 65535 & n;\n                }\n                function w(e, t, n, i, r, o) {\n                    return b((a = b(b(t, e), b(i, o))) << (l = r) | a >>> 32 - l, n);\n                    var a, l;\n                }\n                function C(e, t, n, i, r, o, a) {\n                    return w(t & n | ~t & i, e, t, r, o, a);\n                }\n                function P(e, t, n, i, r, o, a) {\n                    return w(t & i | n & ~i, e, t, r, o, a);\n                }\n                function k(e, t, n, i, r, o, a) {\n                    return w(t ^ n ^ i, e, t, r, o, a);\n                }\n                function L(e, t, n, i, r, o, a) {\n                    return w(n ^ (t | ~i), e, t, r, o, a);\n                }\n                const B = m(\"v3\", 48, function(e) {\n                    if (\"string\" == typeof e) {\n                        var t = unescape(encodeURIComponent(e));\n                        e = new Uint8Array(t.length);\n                        for(var n = 0; n < t.length; ++n)e[n] = t.charCodeAt(n);\n                    }\n                    return function(e) {\n                        for(var t = [], n = 32 * e.length, i = \"0123456789abcdef\", r = 0; r < n; r += 8){\n                            var o = e[r >> 5] >>> r % 32 & 255, a = parseInt(i.charAt(o >>> 4 & 15) + i.charAt(15 & o), 16);\n                            t.push(a);\n                        }\n                        return t;\n                    }(function(e, t) {\n                        e[t >> 5] |= 128 << t % 32, e[y(t) - 1] = t;\n                        for(var n = 1732584193, i = -271733879, r = -1732584194, o = 271733878, a = 0; a < e.length; a += 16){\n                            var l = n, s = i, c = r, u = o;\n                            n = C(n, i, r, o, e[a], 7, -680876936), o = C(o, n, i, r, e[a + 1], 12, -389564586), r = C(r, o, n, i, e[a + 2], 17, 606105819), i = C(i, r, o, n, e[a + 3], 22, -1044525330), n = C(n, i, r, o, e[a + 4], 7, -176418897), o = C(o, n, i, r, e[a + 5], 12, 1200080426), r = C(r, o, n, i, e[a + 6], 17, -1473231341), i = C(i, r, o, n, e[a + 7], 22, -45705983), n = C(n, i, r, o, e[a + 8], 7, 1770035416), o = C(o, n, i, r, e[a + 9], 12, -1958414417), r = C(r, o, n, i, e[a + 10], 17, -42063), i = C(i, r, o, n, e[a + 11], 22, -1990404162), n = C(n, i, r, o, e[a + 12], 7, 1804603682), o = C(o, n, i, r, e[a + 13], 12, -40341101), r = C(r, o, n, i, e[a + 14], 17, -1502002290), n = P(n, i = C(i, r, o, n, e[a + 15], 22, 1236535329), r, o, e[a + 1], 5, -165796510), o = P(o, n, i, r, e[a + 6], 9, -1069501632), r = P(r, o, n, i, e[a + 11], 14, 643717713), i = P(i, r, o, n, e[a], 20, -373897302), n = P(n, i, r, o, e[a + 5], 5, -701558691), o = P(o, n, i, r, e[a + 10], 9, 38016083), r = P(r, o, n, i, e[a + 15], 14, -660478335), i = P(i, r, o, n, e[a + 4], 20, -405537848), n = P(n, i, r, o, e[a + 9], 5, 568446438), o = P(o, n, i, r, e[a + 14], 9, -1019803690), r = P(r, o, n, i, e[a + 3], 14, -187363961), i = P(i, r, o, n, e[a + 8], 20, 1163531501), n = P(n, i, r, o, e[a + 13], 5, -1444681467), o = P(o, n, i, r, e[a + 2], 9, -51403784), r = P(r, o, n, i, e[a + 7], 14, 1735328473), n = k(n, i = P(i, r, o, n, e[a + 12], 20, -1926607734), r, o, e[a + 5], 4, -378558), o = k(o, n, i, r, e[a + 8], 11, -2022574463), r = k(r, o, n, i, e[a + 11], 16, 1839030562), i = k(i, r, o, n, e[a + 14], 23, -35309556), n = k(n, i, r, o, e[a + 1], 4, -1530992060), o = k(o, n, i, r, e[a + 4], 11, 1272893353), r = k(r, o, n, i, e[a + 7], 16, -155497632), i = k(i, r, o, n, e[a + 10], 23, -1094730640), n = k(n, i, r, o, e[a + 13], 4, 681279174), o = k(o, n, i, r, e[a], 11, -358537222), r = k(r, o, n, i, e[a + 3], 16, -722521979), i = k(i, r, o, n, e[a + 6], 23, 76029189), n = k(n, i, r, o, e[a + 9], 4, -640364487), o = k(o, n, i, r, e[a + 12], 11, -421815835), r = k(r, o, n, i, e[a + 15], 16, 530742520), n = L(n, i = k(i, r, o, n, e[a + 2], 23, -995338651), r, o, e[a], 6, -198630844), o = L(o, n, i, r, e[a + 7], 10, 1126891415), r = L(r, o, n, i, e[a + 14], 15, -1416354905), i = L(i, r, o, n, e[a + 5], 21, -57434055), n = L(n, i, r, o, e[a + 12], 6, 1700485571), o = L(o, n, i, r, e[a + 3], 10, -1894986606), r = L(r, o, n, i, e[a + 10], 15, -1051523), i = L(i, r, o, n, e[a + 1], 21, -2054922799), n = L(n, i, r, o, e[a + 8], 6, 1873313359), o = L(o, n, i, r, e[a + 15], 10, -30611744), r = L(r, o, n, i, e[a + 6], 15, -1560198380), i = L(i, r, o, n, e[a + 13], 21, 1309151649), n = L(n, i, r, o, e[a + 4], 6, -145523070), o = L(o, n, i, r, e[a + 11], 10, -1120210379), r = L(r, o, n, i, e[a + 2], 15, 718787259), i = L(i, r, o, n, e[a + 9], 21, -343485551), n = b(n, l), i = b(i, s), r = b(r, c), o = b(o, u);\n                        }\n                        return [\n                            n,\n                            i,\n                            r,\n                            o\n                        ];\n                    }(function(e) {\n                        if (0 === e.length) return [];\n                        for(var t = 8 * e.length, n = new Uint32Array(y(t)), i = 0; i < t; i += 8)n[i >> 5] |= (255 & e[i / 8]) << i % 32;\n                        return n;\n                    }(e), 8 * e.length));\n                }), S = function(e, t, n) {\n                    var i = (e = e || {}).random || (e.rng || o)();\n                    if (i[6] = 15 & i[6] | 64, i[8] = 63 & i[8] | 128, t) {\n                        n = n || 0;\n                        for(var r = 0; r < 16; ++r)t[n + r] = i[r];\n                        return t;\n                    }\n                    return u(i);\n                };\n                function _(e, t, n, i) {\n                    switch(e){\n                        case 0:\n                            return t & n ^ ~t & i;\n                        case 1:\n                        case 3:\n                            return t ^ n ^ i;\n                        case 2:\n                            return t & n ^ t & i ^ n & i;\n                    }\n                }\n                function T(e, t) {\n                    return e << t | e >>> 32 - t;\n                }\n                const O = m(\"v5\", 80, function(e) {\n                    var t = [\n                        1518500249,\n                        1859775393,\n                        2400959708,\n                        3395469782\n                    ], n = [\n                        1732584193,\n                        4023233417,\n                        2562383102,\n                        271733878,\n                        3285377520\n                    ];\n                    if (\"string\" == typeof e) {\n                        var i = unescape(encodeURIComponent(e));\n                        e = [];\n                        for(var r = 0; r < i.length; ++r)e.push(i.charCodeAt(r));\n                    } else Array.isArray(e) || (e = Array.prototype.slice.call(e));\n                    e.push(128);\n                    for(var o = e.length / 4 + 2, a = Math.ceil(o / 16), l = new Array(a), s = 0; s < a; ++s){\n                        for(var c = new Uint32Array(16), u = 0; u < 16; ++u)c[u] = e[64 * s + 4 * u] << 24 | e[64 * s + 4 * u + 1] << 16 | e[64 * s + 4 * u + 2] << 8 | e[64 * s + 4 * u + 3];\n                        l[s] = c;\n                    }\n                    l[a - 1][14] = 8 * (e.length - 1) / Math.pow(2, 32), l[a - 1][14] = Math.floor(l[a - 1][14]), l[a - 1][15] = 8 * (e.length - 1) & 4294967295;\n                    for(var d = 0; d < a; ++d){\n                        for(var p = new Uint32Array(80), v = 0; v < 16; ++v)p[v] = l[d][v];\n                        for(var f = 16; f < 80; ++f)p[f] = T(p[f - 3] ^ p[f - 8] ^ p[f - 14] ^ p[f - 16], 1);\n                        for(var h = n[0], g = n[1], m = n[2], y = n[3], b = n[4], w = 0; w < 80; ++w){\n                            var C = Math.floor(w / 20), P = T(h, 5) + _(C, g, m, y) + b + t[C] + p[w] >>> 0;\n                            b = y, y = m, m = T(g, 30) >>> 0, g = h, h = P;\n                        }\n                        n[0] = n[0] + h >>> 0, n[1] = n[1] + g >>> 0, n[2] = n[2] + m >>> 0, n[3] = n[3] + y >>> 0, n[4] = n[4] + b >>> 0;\n                    }\n                    return [\n                        n[0] >> 24 & 255,\n                        n[0] >> 16 & 255,\n                        n[0] >> 8 & 255,\n                        255 & n[0],\n                        n[1] >> 24 & 255,\n                        n[1] >> 16 & 255,\n                        n[1] >> 8 & 255,\n                        255 & n[1],\n                        n[2] >> 24 & 255,\n                        n[2] >> 16 & 255,\n                        n[2] >> 8 & 255,\n                        255 & n[2],\n                        n[3] >> 24 & 255,\n                        n[3] >> 16 & 255,\n                        n[3] >> 8 & 255,\n                        255 & n[3],\n                        n[4] >> 24 & 255,\n                        n[4] >> 16 & 255,\n                        n[4] >> 8 & 255,\n                        255 & n[4]\n                    ];\n                }), E = \"00000000-0000-0000-0000-000000000000\", U = function(e) {\n                    if (!l(e)) throw TypeError(\"Invalid UUID\");\n                    return parseInt(e.substr(14, 1), 16);\n                };\n            },\n            147: (e)=>{\n                \"use strict\";\n                e.exports = JSON.parse('{\"name\":\"@contentstack/live-preview-utils\",\"version\":\"1.4.0\",\"types\":\"dist/src/index.d.ts\",\"description\":\"Contentstack provides the Live Preview SDK to establish a communication channel between the various Contentstack SDKs and your website, transmitting  live changes to the preview pane.\",\"main\":\"dist/index.js\",\"files\":[\"dist\"],\"scripts\":{\"build\":\"webpack --config webpack.prod.js\",\"test\":\"jest\",\"test:coverage\":\"jest src --coverage --watchAll --coverageDirectory=\\\\\"coverage\\\\\"\",\"dev\":\"webpack --config webpack.dev.js\",\"prepare\":\"npm run build && husky install\",\"lint\":\"eslint src\",\"lint:fix\":\"eslint --fix\",\"prettier\":\"prettier src --check\",\"prettier:fix\":\"prettier src --write\",\"format\":\"npm run prettier:fix && npm run lint:fix\",\"docs\":\"typedoc --out docs --entryPointStrategy expand ./src\"},\"keywords\":[\"live-preview\"],\"author\":\"Contentstack\",\"license\":\"MIT\",\"devDependencies\":{\"@babel/core\":\"^7.2.2\",\"@babel/preset-env\":\"^7.3.1\",\"@testing-library/jest-dom\":\"^5.14.1\",\"@types/jest\":\"^27.0.1\",\"@types/mustache\":\"^4.2.2\",\"@types/uuid\":\"^8.3.1\",\"@typescript-eslint/eslint-plugin\":\"^4.31.1\",\"@typescript-eslint/parser\":\"^4.31.1\",\"babel-loader\":\"^8.0.5\",\"css-loader\":\"^5.2.2\",\"eslint\":\"^7.32.0\",\"eslint-config-prettier\":\"^8.6.0\",\"husky\":\"^8.0.0\",\"jest\":\"^27.2.0\",\"jest-fetch-mock\":\"^3.0.3\",\"mini-css-extract-plugin\":\"^2.3.0\",\"prettier\":\"^2.8.4\",\"prettier-eslint\":\"^15.0.1\",\"style-loader\":\"^2.0.0\",\"ts-jest\":\"^27.0.5\",\"ts-loader\":\"^9.4.2\",\"typedoc\":\"^0.23.25\",\"typescript\":\"^4.4.3\",\"webpack\":\"^5.53.0\",\"webpack-cli\":\"^4.8.0\",\"webpack-dev-server\":\"^4.7.4\",\"webpack-merge\":\"^5.8.0\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/contentstack/live-preview-sdk.git\"},\"dependencies\":{\"just-camel-case\":\"^4.0.2\",\"morphdom\":\"^2.6.1\",\"mustache\":\"^4.2.0\",\"uuid\":\"^8.3.2\"},\"lint-staged\":{\"src/**/*.{ts,css,md}\":[\"npm run prettier:fix\"]}}');\n            }\n        }, t = {};\n        function n(i) {\n            var r = t[i];\n            if (void 0 !== r) return r.exports;\n            var o = t[i] = {\n                exports: {}\n            };\n            return e[i].call(o.exports, o, o.exports, n), o.exports;\n        }\n        return n.d = (e, t)=>{\n            for(var i in t)n.o(t, i) && !n.o(e, i) && Object.defineProperty(e, i, {\n                enumerable: !0,\n                get: t[i]\n            });\n        }, n.o = (e, t)=>Object.prototype.hasOwnProperty.call(e, t), n.r = (e)=>{\n            \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n                value: \"Module\"\n            }), Object.defineProperty(e, \"__esModule\", {\n                value: !0\n            });\n        }, n(607);\n    })()); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/live-preview-utils/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/utils/dist/index.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/@contentstack/utils/dist/index.es.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nfunction createMetadata(attribute) {\n    return {\n        text: attribute[\"#text\"],\n        itemUid: attribute[\"data-sys-entry-uid\"] || attribute[\"data-sys-asset-uid\"],\n        itemType: attribute.type,\n        styleType: attribute[\"sys-style-type\"],\n        attributes: attribute,\n        contentTypeUid: attribute[\"data-sys-content-type-uid\"]\n    };\n}\nfunction nodeToMetadata(attribute, textNode) {\n    return {\n        text: textNode.text,\n        itemUid: attribute[\"entry-uid\"] || attribute[\"asset-uid\"],\n        itemType: attribute.type,\n        styleType: attribute[\"display-type\"],\n        attributes: attribute,\n        contentTypeUid: attribute[\"content-type-uid\"]\n    };\n}\nfunction attributeToString(attributes) {\n    var result = \"\";\n    var _loop_1 = function(key) {\n        if (Object.prototype.hasOwnProperty.call(attributes, key)) {\n            var element = attributes[key];\n            if (element instanceof Array) {\n                var elementString_1 = \"\";\n                var isFirst_1 = true;\n                element.forEach(function(value) {\n                    if (isFirst_1) {\n                        elementString_1 += \"\".concat(value);\n                        isFirst_1 = false;\n                    } else {\n                        elementString_1 += \", \".concat(value);\n                    }\n                });\n                element = elementString_1;\n            } else if (typeof element === \"object\") {\n                var elementString = \"\";\n                for(var elementKey in element){\n                    if (Object.prototype.hasOwnProperty.call(element, elementKey)) {\n                        var value = element[elementKey];\n                        elementString += \"\".concat(elementKey, \":\").concat(value, \"; \");\n                    }\n                }\n                element = elementString;\n            }\n            result += \" \".concat(key, '=\"').concat(element, '\"');\n        }\n    };\n    for(var key in attributes){\n        _loop_1(key);\n    }\n    return result;\n}\nvar StyleType;\n(function(StyleType) {\n    StyleType[\"BLOCK\"] = \"block\";\n    StyleType[\"INLINE\"] = \"inline\";\n    StyleType[\"LINK\"] = \"link\";\n    StyleType[\"DISPLAY\"] = \"display\";\n    StyleType[\"DOWNLOAD\"] = \"download\";\n})(StyleType || (StyleType = {}));\nvar StyleType$1 = StyleType;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction elementToJson(element) {\n    var obj = {};\n    for(var i = 0; i < element.attributes.length; i++){\n        obj[element.attributes.item(i).name] = element.attributes.item(i).value;\n    }\n    element.childNodes.forEach(function(chileNode) {\n        var node = chileNode;\n        obj = __assign(__assign({}, obj), parseElement(node));\n    });\n    return obj;\n}\nfunction parseElement(node) {\n    var obj = {};\n    if (node.nodeType === 3) {\n        obj[\"#text\"] = node.textContent;\n    } else if (node.nodeType === 1) {\n        obj[node.nodeName.toLowerCase()] = elementToJson(node);\n    }\n    return obj;\n}\nvar frameflag = \"documentfragmentcontainer\";\nString.prototype.forEachEmbeddedItem = function(callbackfn) {\n    var str = \"<\".concat(frameflag, \">\").concat(this.toString(), \"</\").concat(frameflag, \">\");\n    var root = new DOMParser().parseFromString(str, \"text/html\");\n    var embeddedEntries = root.querySelectorAll(\".embedded-entry\");\n    embeddedEntries.forEach(function(element) {\n        callbackfn(element.outerHTML, createMetadata(elementToJson(element)));\n    });\n    var embeddedAsset = root.querySelectorAll(\".embedded-asset\");\n    embeddedAsset.forEach(function(element) {\n        callbackfn(element.outerHTML, createMetadata(elementToJson(element)));\n    });\n};\nvar _a$1;\nvar defaultOptions = (_a$1 = {}, _a$1[StyleType$1.BLOCK] = function(item) {\n    return \"<div><p>\".concat(item.title || item.uid, \"</p><p>Content type: <span>\").concat(item._content_type_uid || (item.system ? item.system.content_type_uid : \"\"), \"</span></p></div>\");\n}, _a$1[StyleType$1.INLINE] = function(item) {\n    return \"<span>\".concat(item.title || item.uid, \"</span>\");\n}, _a$1[StyleType$1.LINK] = function(item, metadata) {\n    return '<a href=\"'.concat(item.url, '\">').concat(metadata.text || item.title || item.uid || (item.system ? item.system.uid : \"\"), \"</a>\");\n}, _a$1[StyleType$1.DISPLAY] = function(item, metadata) {\n    return '<img src=\"'.concat(item.url, '\" alt=\"').concat(metadata.attributes.alt || item.title || item.filename || item.uid || (item.system ? item.system.uid : \"\"), '\" />');\n}, _a$1[StyleType$1.DOWNLOAD] = function(item, metadata) {\n    return '<a href=\"'.concat(item.url, '\">').concat(metadata.text || item.title || item.uid || (item.system ? item.system.content_type_uid : \"\"), \"</a>\");\n}, _a$1);\n// This function will find Embedded object present in string\nfunction findEmbeddedEntry(uid, contentTypeUid, embeddeditems) {\n    if (embeddeditems === void 0) {\n        embeddeditems = [];\n    }\n    return embeddeditems.filter(function(entry) {\n        if (entry.uid && entry.uid === uid && entry._content_type_uid === contentTypeUid || entry.system && entry.system.uid === uid && entry.system.content_type_uid === contentTypeUid) {\n            return entry;\n        }\n    });\n}\nfunction findEmbeddedAsset(uid, embeddedAssets) {\n    if (embeddedAssets === void 0) {\n        embeddedAssets = [];\n    }\n    return embeddedAssets.filter(function(asset) {\n        if (asset.uid && asset.uid === uid || asset.system && asset.system.uid === uid) {\n            return asset;\n        }\n    });\n}\nfunction findGQLEmbeddedItems(metadata, items) {\n    if (metadata.itemType === \"entry\") {\n        return findEmbeddedEntry(metadata.itemUid, metadata.contentTypeUid, items);\n    } else {\n        return findEmbeddedAsset(metadata.itemUid, items);\n    }\n}\nfunction findEmbeddedItems(object, entry) {\n    if (object && object !== undefined && entry && entry !== undefined) {\n        if (entry._embedded_items !== undefined) {\n            var entryEmbedable = entry;\n            var items = Object.values(entryEmbedable._embedded_items || []).reduce(function(accumulator, value) {\n                return accumulator.concat(value);\n            }, []);\n            return findGQLEmbeddedItems(object, items);\n        }\n    }\n    return [];\n}\nfunction findRenderString(item, metadata, renderOptions) {\n    if (!item && item === undefined || !metadata && metadata === undefined) {\n        return \"\";\n    }\n    if (renderOptions && renderOptions[metadata.styleType] !== undefined) {\n        var renderFunction = renderOptions[metadata.styleType];\n        if (metadata.attributes[\"data-sys-content-type-uid\"] !== undefined && typeof renderFunction !== \"function\" && renderFunction[metadata.attributes[\"data-sys-content-type-uid\"]] !== undefined) {\n            return renderFunction[metadata.attributes[\"data-sys-content-type-uid\"]](item, metadata);\n        } else if (metadata.attributes[\"data-sys-content-type-uid\"] !== undefined && typeof renderFunction !== \"function\" && renderFunction.$default !== undefined) {\n            return renderFunction.$default(item, metadata);\n        } else if (metadata.contentTypeUid !== undefined && typeof renderFunction !== \"function\" && renderFunction[metadata.contentTypeUid] !== undefined) {\n            return renderFunction[metadata.contentTypeUid](item, metadata);\n        } else if (metadata.contentTypeUid !== undefined && typeof renderFunction !== \"function\" && renderFunction.$default !== undefined) {\n            return renderFunction.$default(item, metadata);\n        } else if (typeof renderFunction === \"function\") {\n            return renderFunction(item, metadata);\n        }\n    }\n    var defaultRenderFunction = defaultOptions[metadata.styleType];\n    return defaultRenderFunction(item, metadata);\n}\nfunction findRenderContent(keyPaths, entry, render) {\n    getContent(keyPaths.split(\".\"), entry, render);\n}\nfunction getContent(keys, object, render) {\n    if (keys) {\n        var key = keys[0];\n        if (keys.length === 1 && object[key]) {\n            object[key] = render(object[key]);\n        } else if (keys.length > 0) {\n            if (object[key]) {\n                var newKeys = keys.slice(1);\n                if (Array.isArray(object[key])) {\n                    // tslint:disable-next-line: prefer-for-of\n                    for(var _i = 0, _a = object[key]; _i < _a.length; _i++){\n                        var objKey = _a[_i];\n                        getContent(newKeys, objKey, render);\n                    }\n                } else if (typeof object[key] === \"object\") {\n                    getContent(newKeys, object[key], render);\n                }\n            }\n        }\n    }\n}\n/**\r\n *\r\n * @param {EntryEmbedable| EntryEmbedable[]} entry - Objects that contains RTE with embedded objects\r\n * @param {string[]} paths - Key paths for RTE contents in Entry object\r\n * @param {RenderOption?} renderOption -  Optional render options to render content\r\n */ function render(option) {\n    function findContent(path, entry) {\n        findRenderContent(path, entry, function(content) {\n            return renderContent(content, {\n                entry: entry,\n                renderOption: option.renderOption\n            });\n        });\n    }\n    function findAndRender(entry) {\n        if (!option.paths || option.paths.length === 0) {\n            Object.keys(__assign({}, entry._embedded_items)).forEach(function(path) {\n                findContent(path, entry);\n            });\n        } else {\n            option.paths.forEach(function(path) {\n                findContent(path, entry);\n            });\n        }\n    }\n    if (option.entry instanceof Array) {\n        option.entry.forEach(function(entry) {\n            findAndRender(entry);\n        });\n    } else {\n        findAndRender(option.entry);\n    }\n}\n/**\r\n *\r\n * @param {string | string[]} content - RTE content to render\r\n * @param {EntryEmbedable} options.entry - Entry object containing embedded objects\r\n * @param {RenderOption?} options.renderOption - Optional render options to render content\r\n */ function renderContent(content, option) {\n    // return blank if content not present\n    if (!content || content === undefined) {\n        return \"\";\n    }\n    // render content of type string\n    if (typeof content === \"string\") {\n        var contentToReplace_1 = content;\n        content.forEachEmbeddedItem(function(embededObjectTag, object) {\n            contentToReplace_1 = findAndReplaceEmbeddedItem(contentToReplace_1, embededObjectTag, object, option);\n        });\n        return contentToReplace_1;\n    }\n    // render content of type array of string\n    var resultContent = [];\n    content.forEach(function(element) {\n        resultContent.push(renderContent(element, option));\n    });\n    return resultContent;\n}\nfunction findAndReplaceEmbeddedItem(content, embededObjectTag, metadata, option) {\n    var embeddedObjects = findEmbeddedItems(metadata, option.entry);\n    var renderString = findRenderString(embeddedObjects[0], metadata, option.renderOption);\n    return content.replace(embededObjectTag, renderString);\n}\nvar NodeType;\n(function(NodeType) {\n    NodeType[\"DOCUMENT\"] = \"doc\";\n    NodeType[\"PARAGRAPH\"] = \"p\";\n    NodeType[\"LINK\"] = \"a\";\n    NodeType[\"IMAGE\"] = \"img\";\n    NodeType[\"EMBED\"] = \"embed\";\n    NodeType[\"HEADING_1\"] = \"h1\";\n    NodeType[\"HEADING_2\"] = \"h2\";\n    NodeType[\"HEADING_3\"] = \"h3\";\n    NodeType[\"HEADING_4\"] = \"h4\";\n    NodeType[\"HEADING_5\"] = \"h5\";\n    NodeType[\"HEADING_6\"] = \"h6\";\n    NodeType[\"ORDER_LIST\"] = \"ol\";\n    NodeType[\"UNORDER_LIST\"] = \"ul\";\n    NodeType[\"LIST_ITEM\"] = \"li\";\n    NodeType[\"FRAGMENT\"] = \"fragment\";\n    NodeType[\"HR\"] = \"hr\";\n    NodeType[\"TABLE\"] = \"table\";\n    NodeType[\"TABLE_HEADER\"] = \"thead\";\n    NodeType[\"TABLE_BODY\"] = \"tbody\";\n    NodeType[\"TABLE_FOOTER\"] = \"tfoot\";\n    NodeType[\"TABLE_ROW\"] = \"tr\";\n    NodeType[\"TABLE_HEAD\"] = \"th\";\n    NodeType[\"TABLE_DATA\"] = \"td\";\n    NodeType[\"BLOCK_QUOTE\"] = \"blockquote\";\n    NodeType[\"CODE\"] = \"code\";\n    NodeType[\"TEXT\"] = \"text\";\n    NodeType[\"REFERENCE\"] = \"reference\";\n})(NodeType || (NodeType = {}));\nvar NodeType$1 = NodeType;\nvar MarkType;\n(function(MarkType) {\n    MarkType[\"BOLD\"] = \"bold\";\n    MarkType[\"ITALIC\"] = \"italic\";\n    MarkType[\"UNDERLINE\"] = \"underline\";\n    MarkType[\"CLASSNAME_OR_ID\"] = \"classnameOrId\";\n    MarkType[\"STRIKE_THROUGH\"] = \"strikethrough\";\n    MarkType[\"INLINE_CODE\"] = \"inlineCode\";\n    MarkType[\"SUBSCRIPT\"] = \"subscript\";\n    MarkType[\"SUPERSCRIPT\"] = \"superscript\";\n    MarkType[\"BREAK\"] = \"break\";\n})(MarkType || (MarkType = {}));\nvar MarkType$1 = MarkType;\nvar Node = /** @class */ function() {\n    function Node() {}\n    return Node;\n}();\nvar Document = /** @class */ function(_super) {\n    __extends(Document, _super);\n    function Document() {\n        var _this = _super.call(this) || this;\n        _this.type = NodeType$1.DOCUMENT;\n        return _this;\n    }\n    return Document;\n}(Node);\nvar TextNode = /** @class */ function(_super) {\n    __extends(TextNode, _super);\n    function TextNode(text) {\n        var _this = _super.call(this) || this;\n        _this.text = text;\n        return _this;\n    }\n    return TextNode;\n}(Node);\nvar _a;\nvar defaultNodeOption = (_a = {}, _a[NodeType$1.DOCUMENT] = function(node) {\n    return \"\";\n}, _a[NodeType$1.PARAGRAPH] = function(node, next) {\n    return \"<p\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</p>\");\n}, _a[NodeType$1.LINK] = function(node, next) {\n    if (node.attrs.target) {\n        return \"<a\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' href=\"').concat(node.attrs.href || node.attrs.url, '\" target=\"').concat(node.attrs.target, '\">').concat(next(node.children), \"</a>\");\n    }\n    return \"<a\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' href=\"').concat(node.attrs.href || node.attrs.url, '\">').concat(next(node.children), \"</a>\");\n}, _a[NodeType$1.IMAGE] = function(node, next) {\n    return \"<img\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' src=\"').concat(node.attrs.src || node.attrs.url, '\" />').concat(next(node.children));\n}, _a[NodeType$1.EMBED] = function(node, next) {\n    return \"<iframe\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' src=\"').concat(node.attrs.src || node.attrs.url, '\">').concat(next(node.children), \"</iframe>\");\n}, _a[NodeType$1.HEADING_1] = function(node, next) {\n    return \"<h1\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h1>\");\n}, _a[NodeType$1.HEADING_2] = function(node, next) {\n    return \"<h2\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h2>\");\n}, _a[NodeType$1.HEADING_3] = function(node, next) {\n    return \"<h3\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h3>\");\n}, _a[NodeType$1.HEADING_4] = function(node, next) {\n    return \"<h4\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h4>\");\n}, _a[NodeType$1.HEADING_5] = function(node, next) {\n    return \"<h5\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h5>\");\n}, _a[NodeType$1.HEADING_6] = function(node, next) {\n    return \"<h6\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h6>\");\n}, _a[NodeType$1.ORDER_LIST] = function(node, next) {\n    return \"<ol\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</ol>\");\n}, _a[NodeType$1.FRAGMENT] = function(node, next) {\n    return \"<fragment>\".concat(next(node.children), \"</fragment>\");\n}, _a[NodeType$1.UNORDER_LIST] = function(node, next) {\n    return \"<ul\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</ul>\");\n}, _a[NodeType$1.LIST_ITEM] = function(node, next) {\n    return \"<li\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</li>\");\n}, _a[NodeType$1.HR] = function(node, next) {\n    return \"<hr>\";\n}, _a[NodeType$1.TABLE] = function(node, next) {\n    return \"<table\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</table>\");\n}, _a[NodeType$1.TABLE_HEADER] = function(node, next) {\n    return \"<thead\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</thead>\");\n}, _a[NodeType$1.TABLE_BODY] = function(node, next) {\n    return \"<tbody\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</tbody>\");\n}, _a[NodeType$1.TABLE_FOOTER] = function(node, next) {\n    return \"<tfoot\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</tfoot>\");\n}, _a[NodeType$1.TABLE_ROW] = function(node, next) {\n    return \"<tr\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</tr>\");\n}, _a[NodeType$1.TABLE_HEAD] = function(node, next) {\n    return \"<th\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</th>\");\n}, _a[NodeType$1.TABLE_DATA] = function(node, next) {\n    return \"<td\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</td>\");\n}, _a[NodeType$1.BLOCK_QUOTE] = function(node, next) {\n    return \"<blockquote\".concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</blockquote>\");\n}, _a[NodeType$1.CODE] = function(node, next) {\n    return \"<code\".concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</code>\");\n}, _a[\"reference\"] = function(node, next) {\n    if (node.attrs.type === \"asset\") {\n        return \"<img\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' src=\"').concat(node.attrs[\"asset-link\"], '\" />');\n    }\n    return \"\";\n}, _a[\"default\"] = function(node, next) {\n    return next(node.children);\n}, _a[MarkType$1.BOLD] = function(text) {\n    return \"<strong>\".concat(text, \"</strong>\");\n}, _a[MarkType$1.ITALIC] = function(text) {\n    return \"<em>\".concat(text, \"</em>\");\n}, _a[MarkType$1.UNDERLINE] = function(text) {\n    return \"<u>\".concat(text, \"</u>\");\n}, _a[MarkType$1.STRIKE_THROUGH] = function(text) {\n    return \"<strike>\".concat(text, \"</strike>\");\n}, _a[MarkType$1.INLINE_CODE] = function(text) {\n    return \"<span>\".concat(text, \"</span>\");\n}, _a[MarkType$1.SUBSCRIPT] = function(text) {\n    return \"<sub>\".concat(text, \"</sub>\");\n}, _a[MarkType$1.SUPERSCRIPT] = function(text) {\n    return \"<sup>\".concat(text, \"</sup>\");\n}, _a[MarkType$1.BREAK] = function(text) {\n    return \"<br />\".concat(text);\n}, _a[MarkType$1.CLASSNAME_OR_ID] = function(text, classname, id) {\n    return \"<span\".concat(classname ? ' class=\"'.concat(classname, '\"') : \"\").concat(id ? ' id=\"'.concat(id, '\"') : \"\", \">\").concat(text, \"</span>\");\n}, _a);\nfunction enumerate(entries, process) {\n    for(var _i = 0, entries_1 = entries; _i < entries_1.length; _i++){\n        var entry = entries_1[_i];\n        process(entry);\n    }\n}\nfunction enumerateContents(content, renderOption, renderEmbed) {\n    if (!(content instanceof Array) && content.type !== \"doc\") {\n        return content;\n    }\n    if (content instanceof Array) {\n        var result_1 = [];\n        content.forEach(function(doc) {\n            result_1.push(enumerateContents(doc, renderOption, renderEmbed));\n        });\n        return result_1;\n    }\n    var commonRenderOption = __assign(__assign({}, defaultNodeOption), renderOption);\n    return nodeChildrenToHTML(content.children, commonRenderOption, renderEmbed);\n}\nfunction textNodeToHTML(node, renderOption) {\n    var text = node.text;\n    if (node.classname || node.id) {\n        text = renderOption[MarkType$1.CLASSNAME_OR_ID](text, node.classname, node.id);\n    }\n    if (node.break) {\n        text = renderOption[MarkType$1.BREAK](text);\n    }\n    if (node.superscript) {\n        text = renderOption[MarkType$1.SUPERSCRIPT](text);\n    }\n    if (node.subscript) {\n        text = renderOption[MarkType$1.SUBSCRIPT](text);\n    }\n    if (node.inlineCode) {\n        text = renderOption[MarkType$1.INLINE_CODE](text);\n    }\n    if (node.strikethrough) {\n        text = renderOption[MarkType$1.STRIKE_THROUGH](text);\n    }\n    if (node.underline) {\n        text = renderOption[MarkType$1.UNDERLINE](text);\n    }\n    if (node.italic) {\n        text = renderOption[MarkType$1.ITALIC](text);\n    }\n    if (node.bold) {\n        text = renderOption[MarkType$1.BOLD](text);\n    }\n    return text;\n}\nfunction referenceToHTML(node, renderOption, renderEmbed) {\n    if (node.attrs.type === \"entry\" && node.attrs[\"display-type\"] === \"link\") {\n        var entryText = node.children ? nodeChildrenToHTML(node.children, renderOption, renderEmbed) : \"\";\n        if (node.attrs.target) {\n            return \"<a\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' href=\"').concat(node.attrs.href || node.attrs.url, '\" target=\"').concat(node.attrs.target, '\">').concat(entryText, \"</a>\");\n        }\n        return \"<a\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' href=\"').concat(node.attrs.href || node.attrs.url, '\">').concat(entryText, \"</a>\");\n    }\n    function sendToRenderOption(referenceNode) {\n        return renderOption[referenceNode.type](referenceNode, undefined);\n    }\n    if (!renderEmbed && renderOption[node.type] !== undefined) {\n        return sendToRenderOption(node);\n    }\n    if (!renderEmbed) {\n        return \"\";\n    }\n    var metadata = nodeToMetadata(node.attrs, node.children && node.children.length > 0 ? node.children[0] : {});\n    var item = renderEmbed(metadata);\n    if (!item && renderOption[node.type] !== undefined) {\n        return sendToRenderOption(node);\n    }\n    return findRenderString(item, metadata, renderOption);\n}\nfunction nodeChildrenToHTML(nodes, renderOption, renderEmbed) {\n    return nodes.map(function(node) {\n        return nodeToHTML(node, renderOption, renderEmbed);\n    }).join(\"\");\n}\nfunction styleObjectToString(styleObj) {\n    if (!styleObj) return \"\";\n    if (typeof styleObj === \"string\") {\n        return styleObj;\n    }\n    var styleString = \"\";\n    for(var key in styleObj){\n        if (styleObj.hasOwnProperty(key)) {\n            var value = styleObj[key];\n            styleString += \"\".concat(key, \":\").concat(value, \";\");\n        }\n    }\n    return styleString;\n}\nfunction nodeToHTML(node, renderOption, renderEmbed) {\n    var _a;\n    if ((_a = node === null || node === void 0 ? void 0 : node.attrs) === null || _a === void 0 ? void 0 : _a.style) {\n        node.attrs.style = styleObjectToString(node.attrs.style);\n    }\n    if (!node.type) {\n        return textNodeToHTML(node, renderOption);\n    } else if (node.type === \"reference\") {\n        return referenceToHTML(node, renderOption, renderEmbed);\n    } else {\n        var next = function(nodes) {\n            return nodeChildrenToHTML(nodes, renderOption, renderEmbed);\n        };\n        if (renderOption[node.type] !== undefined) {\n            return renderOption[node.type](node, next);\n        } else {\n            return renderOption.default(node, next);\n        }\n    }\n}\nfunction jsonToHTML$1(option) {\n    if (option.entry instanceof Array) {\n        enumerate(option.entry, function(entry) {\n            jsonToHTML$1({\n                entry: entry,\n                paths: option.paths,\n                renderOption: option.renderOption\n            });\n        });\n    } else {\n        enumerateKeys$1({\n            entry: option.entry,\n            paths: option.paths,\n            renderOption: option.renderOption\n        });\n    }\n}\nfunction enumerateKeys$1(option) {\n    for(var _i = 0, _a = option.paths; _i < _a.length; _i++){\n        var key = _a[_i];\n        findRenderContent(key, option.entry, function(content) {\n            return enumerateContents(content, option.renderOption, function(metadata) {\n                return findEmbeddedItems(metadata, option.entry)[0];\n            });\n        });\n    }\n}\nfunction jsonToHTML(option) {\n    if (option.entry instanceof Array) {\n        enumerate(option.entry, function(entry) {\n            jsonToHTML({\n                entry: entry,\n                paths: option.paths,\n                renderOption: option.renderOption\n            });\n        });\n    } else {\n        enumerateKeys({\n            entry: option.entry,\n            paths: option.paths,\n            renderOption: option.renderOption\n        });\n    }\n}\nfunction enumerateKeys(option) {\n    for(var _i = 0, _a = option.paths; _i < _a.length; _i++){\n        var key = _a[_i];\n        findRenderContent(key, option.entry, function(content) {\n            if (content && content.json) {\n                var edges = content.embedded_itemsConnection ? content.embedded_itemsConnection.edges : [];\n                var items_1 = Object.values(edges || []).reduce(function(accumulator, value) {\n                    return accumulator.concat(value.node);\n                }, []);\n                return enumerateContents(content.json, option.renderOption, function(metadata) {\n                    return findGQLEmbeddedItems(metadata, items_1)[0];\n                });\n            }\n            return content;\n        });\n    }\n}\nvar GQL = {\n    jsonToHTML: jsonToHTML\n};\nfunction addTags(entry, contentTypeUid, tagsAsObject, locale) {\n    if (locale === void 0) {\n        locale = \"en-us\";\n    }\n    if (entry) entry.$ = getTag(entry, \"\".concat(contentTypeUid, \".\").concat(entry.uid, \".\").concat(locale), tagsAsObject, locale);\n}\nfunction getTag(content, prefix, tagsAsObject, locale) {\n    var tags = {};\n    Object.entries(content).forEach(function(_a) {\n        var key = _a[0], value = _a[1];\n        if (key === \"$\") return;\n        switch(typeof value){\n            case \"object\":\n                if (Array.isArray(value)) {\n                    value.forEach(function(obj, index) {\n                        var childKey = \"\".concat(key, \"__\").concat(index);\n                        var parentKey = \"\".concat(key, \"__parent\");\n                        /**\r\n                         * Indexes of array are handled here\r\n                         * {\r\n                         *  \"array\": [\"hello\", \"world\"],\r\n                         *  \"$\": {\r\n                         *      \"array\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array\"}\r\n                         *      \"array__0\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array.0\"}\r\n                         *      \"array__1\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array.1\"}\r\n                         *  }\r\n                         * }\r\n                         */ tags[childKey] = getTagsValue(\"\".concat(prefix, \".\").concat(key, \".\").concat(index), tagsAsObject);\n                        tags[parentKey] = getParentTagsValue(\"\".concat(prefix, \".\").concat(key), tagsAsObject);\n                        if (typeof obj !== \"undefined\" && obj !== null && obj._content_type_uid !== undefined && obj.uid !== undefined) {\n                            /**\r\n                             * References are handled here\r\n                             * {\r\n                             *  \"reference\": [{\r\n                             *      \"title\": \"title\",\r\n                             *      \"uid\": \"ref_uid\",\r\n                             *      \"_content_type_uid\": \"ref_content_type_uid\",\r\n                             *     \"$\": {\"title\": {\"data-cslp\": \"ref_content_type_uid.ref_uid.locale.title\"}}\r\n                             *  }]\r\n                             * }\r\n                             */ value[index].$ = getTag(obj, \"\".concat(obj._content_type_uid, \".\").concat(obj.uid, \".\").concat(obj.locale || locale), tagsAsObject, locale);\n                        } else if (typeof obj === \"object\") {\n                            /**\r\n                             * Objects inside Array like modular blocks are handled here\r\n                             * {\r\n                             *  \"array\": [{\r\n                             *    \"title\": \"title\",\r\n                             *    \"$\": {\"title\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array.0.title\"}}\r\n                             *  }]\r\n                             * }\r\n                             */ obj.$ = getTag(obj, \"\".concat(prefix, \".\").concat(key, \".\").concat(index), tagsAsObject, locale);\n                        }\n                    });\n                } else {\n                    if (value) {\n                        /**\r\n                         * Objects are handled here\r\n                         * {\r\n                         *  \"object\": {\r\n                         *      \"title\": \"title\",\r\n                         *      \"$\": {\r\n                         *          \"title\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.object.title\"}\r\n                         *      }\r\n                         *  },\r\n                         * }\r\n                         */ value.$ = getTag(value, \"\".concat(prefix, \".\").concat(key), tagsAsObject, locale);\n                    }\n                }\n                /**\r\n                 * {\r\n                 *  \"object\": {\r\n                 *      \"title\": \"title\",\r\n                 *  },\r\n                 *  \"array\": [\"hello\", \"world\"]\r\n                 *  \"$\": {\r\n                 *      \"object\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.object\"},\r\n                 *      \"array\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array\"}\r\n                 *  }\r\n                 * }\r\n                 */ tags[key] = getTagsValue(\"\".concat(prefix, \".\").concat(key), tagsAsObject);\n                break;\n            default:\n                /**\r\n                 * All primitive values are handled here\r\n                 * {\r\n                 *  \"title\": \"title\",\r\n                 *  \"$\": {title: {\"data-cslp\": \"content_type_uid.entry_uid.locale.title\"}}\r\n                 * }\r\n                 */ tags[key] = getTagsValue(\"\".concat(prefix, \".\").concat(key), tagsAsObject);\n        }\n    });\n    return tags;\n}\nfunction getTagsValue(dataValue, tagsAsObject) {\n    if (tagsAsObject) {\n        return {\n            \"data-cslp\": dataValue\n        };\n    } else {\n        return \"data-cslp=\".concat(dataValue);\n    }\n}\nfunction getParentTagsValue(dataValue, tagsAsObject) {\n    if (tagsAsObject) {\n        return {\n            \"data-cslp-parent-field\": dataValue\n        };\n    } else {\n        return \"data-cslp-parent-field=\".concat(dataValue);\n    }\n}\nexports.Document = Document;\nexports.GQL = GQL;\nexports.MarkType = MarkType$1;\nexports.Node = Node;\nexports.NodeType = NodeType$1;\nexports.StyleType = StyleType$1;\nexports.TextNode = TextNode;\nexports.addEditableTags = addTags;\nexports.attributeToString = attributeToString;\nexports.jsonToHTML = jsonToHTML$1;\nexports.render = render;\nexports.renderContent = renderContent; //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/utils/dist/index.es.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/live-preview-utils/dist/main.css":
/*!*********************************************************************!*\
  !*** ./node_modules/@contentstack/live-preview-utils/dist/main.css ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"220ef6432622\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9saXZlLXByZXZpZXctdXRpbHMvZGlzdC9tYWluLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2xpdmUtcHJldmlldy11dGlscy9kaXN0L21haW4uY3NzPzMxMWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIyMjBlZjY0MzI2MjJcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/live-preview-utils/dist/main.css\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/live-preview-utils/dist/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@contentstack/live-preview-utils/dist/index.js ***!
  \*********************************************************************/
/***/ (function(module) {

eval("!function(e, t) {\n     true ? module.exports = t() : 0;\n}(this, ()=>(()=>{\n        var e = {\n            704: (e)=>{\n                e.exports = function(e, a) {\n                    for(var l = e.split(t), s = l.length, c = new Array(s), u = 0; u < s; u++){\n                        var d = l[u];\n                        if (\"\" !== d) {\n                            var p = n.test(d) && !r.test(d);\n                            p && (d = d.replace(i, function(e, t, n) {\n                                return o(e, d.length - n - e.length == 0);\n                            }));\n                            var v = d[0];\n                            v = u > 0 ? v.toUpperCase() : v.toLowerCase(), c[u] = v + (p ? d.slice(1) : d.slice(1).toLowerCase());\n                        }\n                    }\n                    return c.join(\"\");\n                };\n                var t = /[\\s\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~]+/, n = /^[a-z\\u00E0-\\u00FCA-Z\\u00C0-\\u00DC][\\d|a-z\\u00E0-\\u00FCA-Z\\u00C0-\\u00DC]*$/, i = /([A-Z\\u00C0-\\u00DC]{4,})/g, r = /^[A-Z\\u00C0-\\u00DC]+$/;\n                function o(e, t) {\n                    var n = e.split(\"\"), i = n.shift().toUpperCase(), r = t ? n.pop().toLowerCase() : n.pop();\n                    return i + n.join(\"\").toLowerCase() + r;\n                }\n            },\n            279: (e, t, n)=>{\n                \"use strict\";\n                n.r(t);\n            },\n            492: (e, t, n)=>{\n                \"use strict\";\n                var i;\n                n.r(t), n.d(t, {\n                    default: ()=>p\n                });\n                var r = \"undefined\" == typeof document ? void 0 : document, o = !!r && \"content\" in r.createElement(\"template\"), a = !!r && r.createRange && \"createContextualFragment\" in r.createRange();\n                function l(e, t) {\n                    var n, i, r = e.nodeName, o = t.nodeName;\n                    return r === o || (n = r.charCodeAt(0), i = o.charCodeAt(0), n <= 90 && i >= 97 ? r === o.toUpperCase() : i <= 90 && n >= 97 && o === r.toUpperCase());\n                }\n                function s(e, t, n) {\n                    e[n] !== t[n] && (e[n] = t[n], e[n] ? e.setAttribute(n, \"\") : e.removeAttribute(n));\n                }\n                var c = {\n                    OPTION: function(e, t) {\n                        var n = e.parentNode;\n                        if (n) {\n                            var i = n.nodeName.toUpperCase();\n                            \"OPTGROUP\" === i && (i = (n = n.parentNode) && n.nodeName.toUpperCase()), \"SELECT\" !== i || n.hasAttribute(\"multiple\") || (e.hasAttribute(\"selected\") && !t.selected && (e.setAttribute(\"selected\", \"selected\"), e.removeAttribute(\"selected\")), n.selectedIndex = -1);\n                        }\n                        s(e, t, \"selected\");\n                    },\n                    INPUT: function(e, t) {\n                        s(e, t, \"checked\"), s(e, t, \"disabled\"), e.value !== t.value && (e.value = t.value), t.hasAttribute(\"value\") || e.removeAttribute(\"value\");\n                    },\n                    TEXTAREA: function(e, t) {\n                        var n = t.value;\n                        e.value !== n && (e.value = n);\n                        var i = e.firstChild;\n                        if (i) {\n                            var r = i.nodeValue;\n                            if (r == n || !n && r == e.placeholder) return;\n                            i.nodeValue = n;\n                        }\n                    },\n                    SELECT: function(e, t) {\n                        if (!t.hasAttribute(\"multiple\")) {\n                            for(var n, i, r = -1, o = 0, a = e.firstChild; a;)if (\"OPTGROUP\" === (i = a.nodeName && a.nodeName.toUpperCase())) a = (n = a).firstChild;\n                            else {\n                                if (\"OPTION\" === i) {\n                                    if (a.hasAttribute(\"selected\")) {\n                                        r = o;\n                                        break;\n                                    }\n                                    o++;\n                                }\n                                !(a = a.nextSibling) && n && (a = n.nextSibling, n = null);\n                            }\n                            e.selectedIndex = r;\n                        }\n                    }\n                };\n                function u() {}\n                function d(e) {\n                    if (e) return e.getAttribute && e.getAttribute(\"id\") || e.id;\n                }\n                const p = function(e, t, n) {\n                    if (n || (n = {}), \"string\" == typeof t) if (\"#document\" === e.nodeName || \"HTML\" === e.nodeName || \"BODY\" === e.nodeName) {\n                        var s = t;\n                        (t = r.createElement(\"html\")).innerHTML = s;\n                    } else p = (p = t).trim(), t = o ? function(e) {\n                        var t = r.createElement(\"template\");\n                        return t.innerHTML = e, t.content.childNodes[0];\n                    }(p) : a ? function(e) {\n                        return i || (i = r.createRange()).selectNode(r.body), i.createContextualFragment(e).childNodes[0];\n                    }(p) : function(e) {\n                        var t = r.createElement(\"body\");\n                        return t.innerHTML = e, t.childNodes[0];\n                    }(p);\n                    var p, v = n.getNodeKey || d, f = n.onBeforeNodeAdded || u, h = n.onNodeAdded || u, g = n.onBeforeElUpdated || u, m = n.onElUpdated || u, y = n.onBeforeNodeDiscarded || u, b = n.onNodeDiscarded || u, w = n.onBeforeElChildrenUpdated || u, C = !0 === n.childrenOnly, P = Object.create(null), k = [];\n                    function L(e) {\n                        k.push(e);\n                    }\n                    function B(e, t) {\n                        if (1 === e.nodeType) for(var n = e.firstChild; n;){\n                            var i = void 0;\n                            t && (i = v(n)) ? L(i) : (b(n), n.firstChild && B(n, t)), n = n.nextSibling;\n                        }\n                    }\n                    function S(e, t, n) {\n                        !1 !== y(e) && (t && t.removeChild(e), b(e), B(e, n));\n                    }\n                    function _(e) {\n                        h(e);\n                        for(var t = e.firstChild; t;){\n                            var n = t.nextSibling, i = v(t);\n                            if (i) {\n                                var r = P[i];\n                                r && l(t, r) ? (t.parentNode.replaceChild(r, t), T(r, t)) : _(t);\n                            } else _(t);\n                            t = n;\n                        }\n                    }\n                    function T(e, t, n) {\n                        var i = v(t);\n                        if (i && delete P[i], !n) {\n                            if (!1 === g(e, t)) return;\n                            if (function(e, t) {\n                                var n, i, r, o, a = t.attributes;\n                                if (11 !== t.nodeType && 11 !== e.nodeType) {\n                                    for(var l = a.length - 1; l >= 0; l--)i = (n = a[l]).name, r = n.namespaceURI, o = n.value, r ? (i = n.localName || i, e.getAttributeNS(r, i) !== o && (\"xmlns\" === n.prefix && (i = n.name), e.setAttributeNS(r, i, o))) : e.getAttribute(i) !== o && e.setAttribute(i, o);\n                                    for(var s = e.attributes, c = s.length - 1; c >= 0; c--)i = (n = s[c]).name, (r = n.namespaceURI) ? (i = n.localName || i, t.hasAttributeNS(r, i) || e.removeAttributeNS(r, i)) : t.hasAttribute(i) || e.removeAttribute(i);\n                                }\n                            }(e, t), m(e), !1 === w(e, t)) return;\n                        }\n                        \"TEXTAREA\" !== e.nodeName ? function(e, t) {\n                            var n, i, o, a, s, u = t.firstChild, d = e.firstChild;\n                            e: for(; u;){\n                                for(a = u.nextSibling, n = v(u); d;){\n                                    if (o = d.nextSibling, u.isSameNode && u.isSameNode(d)) {\n                                        u = a, d = o;\n                                        continue e;\n                                    }\n                                    i = v(d);\n                                    var p = d.nodeType, h = void 0;\n                                    if (p === u.nodeType && (1 === p ? (n ? n !== i && ((s = P[n]) ? o === s ? h = !1 : (e.insertBefore(s, d), i ? L(i) : S(d, e, !0), d = s) : h = !1) : i && (h = !1), (h = !1 !== h && l(d, u)) && T(d, u)) : 3 !== p && 8 != p || (h = !0, d.nodeValue !== u.nodeValue && (d.nodeValue = u.nodeValue))), h) {\n                                        u = a, d = o;\n                                        continue e;\n                                    }\n                                    i ? L(i) : S(d, e, !0), d = o;\n                                }\n                                if (n && (s = P[n]) && l(s, u)) e.appendChild(s), T(s, u);\n                                else {\n                                    var g = f(u);\n                                    !1 !== g && (g && (u = g), u.actualize && (u = u.actualize(e.ownerDocument || r)), e.appendChild(u), _(u));\n                                }\n                                u = a, d = o;\n                            }\n                            !function(e, t, n) {\n                                for(; t;){\n                                    var i = t.nextSibling;\n                                    (n = v(t)) ? L(n) : S(t, e, !0), t = i;\n                                }\n                            }(e, d, i);\n                            var m = c[e.nodeName];\n                            m && m(e, t);\n                        }(e, t) : c.TEXTAREA(e, t);\n                    }\n                    !function e(t) {\n                        if (1 === t.nodeType || 11 === t.nodeType) for(var n = t.firstChild; n;){\n                            var i = v(n);\n                            i && (P[i] = n), e(n), n = n.nextSibling;\n                        }\n                    }(e);\n                    var O, E, U = e, x = U.nodeType, A = t.nodeType;\n                    if (!C) {\n                        if (1 === x) 1 === A ? l(e, t) || (b(e), U = function(e, t) {\n                            for(var n = e.firstChild; n;){\n                                var i = n.nextSibling;\n                                t.appendChild(n), n = i;\n                            }\n                            return t;\n                        }(e, (O = t.nodeName, (E = t.namespaceURI) && \"http://www.w3.org/1999/xhtml\" !== E ? r.createElementNS(E, O) : r.createElement(O)))) : U = t;\n                        else if (3 === x || 8 === x) {\n                            if (A === x) return U.nodeValue !== t.nodeValue && (U.nodeValue = t.nodeValue), U;\n                            U = t;\n                        }\n                    }\n                    if (U === t) b(e);\n                    else {\n                        if (t.isSameNode && t.isSameNode(U)) return;\n                        if (T(U, t, C), k) for(var D = 0, M = k.length; D < M; D++){\n                            var I = P[k[D]];\n                            I && S(I, I.parentNode, !1);\n                        }\n                    }\n                    return !C && U !== e && e.parentNode && (U.actualize && (U = U.actualize(e.ownerDocument || r)), e.parentNode.replaceChild(U, e)), U;\n                };\n            },\n            135: function(e, t, n) {\n                \"use strict\";\n                var i = this && this.__awaiter || function(e, t, n, i) {\n                    return new (n || (n = Promise))(function(r, o) {\n                        function a(e) {\n                            try {\n                                s(i.next(e));\n                            } catch (e) {\n                                o(e);\n                            }\n                        }\n                        function l(e) {\n                            try {\n                                s(i.throw(e));\n                            } catch (e) {\n                                o(e);\n                            }\n                        }\n                        function s(e) {\n                            var t;\n                            e.done ? r(e.value) : (t = e.value, t instanceof n ? t : new n(function(e) {\n                                e(t);\n                            })).then(a, l);\n                        }\n                        s((i = i.apply(e, t || [])).next());\n                    });\n                }, r = this && this.__generator || function(e, t) {\n                    var n, i, r, o, a = {\n                        label: 0,\n                        sent: function() {\n                            if (1 & r[0]) throw r[1];\n                            return r[1];\n                        },\n                        trys: [],\n                        ops: []\n                    };\n                    return o = {\n                        next: l(0),\n                        throw: l(1),\n                        return: l(2)\n                    }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function() {\n                        return this;\n                    }), o;\n                    function l(l) {\n                        return function(s) {\n                            return function(l) {\n                                if (n) throw new TypeError(\"Generator is already executing.\");\n                                for(; o && (o = 0, l[0] && (a = 0)), a;)try {\n                                    if (n = 1, i && (r = 2 & l[0] ? i.return : l[0] ? i.throw || ((r = i.return) && r.call(i), 0) : i.next) && !(r = r.call(i, l[1])).done) return r;\n                                    switch(i = 0, r && (l = [\n                                        2 & l[0],\n                                        r.value\n                                    ]), l[0]){\n                                        case 0:\n                                        case 1:\n                                            r = l;\n                                            break;\n                                        case 4:\n                                            return a.label++, {\n                                                value: l[1],\n                                                done: !1\n                                            };\n                                        case 5:\n                                            a.label++, i = l[1], l = [\n                                                0\n                                            ];\n                                            continue;\n                                        case 7:\n                                            l = a.ops.pop(), a.trys.pop();\n                                            continue;\n                                        default:\n                                            if (!((r = (r = a.trys).length > 0 && r[r.length - 1]) || 6 !== l[0] && 2 !== l[0])) {\n                                                a = 0;\n                                                continue;\n                                            }\n                                            if (3 === l[0] && (!r || l[1] > r[0] && l[1] < r[3])) {\n                                                a.label = l[1];\n                                                break;\n                                            }\n                                            if (6 === l[0] && a.label < r[1]) {\n                                                a.label = r[1], r = l;\n                                                break;\n                                            }\n                                            if (r && a.label < r[2]) {\n                                                a.label = r[2], a.ops.push(l);\n                                                break;\n                                            }\n                                            r[2] && a.ops.pop(), a.trys.pop();\n                                            continue;\n                                    }\n                                    l = t.call(e, a);\n                                } catch (e) {\n                                    l = [\n                                        6,\n                                        e\n                                    ], i = 0;\n                                } finally{\n                                    n = r = 0;\n                                }\n                                if (5 & l[0]) throw l[1];\n                                return {\n                                    value: l[0] ? l[1] : void 0,\n                                    done: !0\n                                };\n                            }([\n                                l,\n                                s\n                            ]);\n                        };\n                    }\n                }, o = this && this.__importDefault || function(e) {\n                    return e && e.__esModule ? e : {\n                        default: e\n                    };\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.ContentstackLivePreview = void 0;\n                var a = n(614), l = o(n(704)), s = o(n(147)), c = o(n(922)), u = n(334), d = n(895), p = function() {\n                    function e() {}\n                    return e.init = function(t) {\n                        if (void 0 === t && (t = u.userInitData), \"undefined\" != \"undefined\") return e.livePreview ? (d.PublicLogger.warn(\"You have already initialized the Live Preview SDK. So, any subsequent initialization returns the existing SDK instance.\"), Promise.resolve(e.livePreview)) : (e.livePreview = new c.default(t), e.livePreview.setOnChangeCallback(e.publish), e.livePreview.setConfigFromParams(this.configs.params), this.configs.params = {}, Promise.resolve(e.livePreview));\n                        e.userConfig = t;\n                    }, Object.defineProperty(e, \"hash\", {\n                        get: function() {\n                            var e;\n                            return this.livePreview ? this.livePreview.hash : null !== (e = new URLSearchParams(this.configs.params).get(\"live_preview\")) && void 0 !== e ? e : \"\";\n                        },\n                        enumerable: !1,\n                        configurable: !0\n                    }), e.setConfigFromParams = function(e) {\n                        void 0 === e && (e = {}), this.livePreview ? this.livePreview.setConfigFromParams(e) : this.configs.params = e;\n                    }, e.publish = function() {\n                        Object.values(e.subscribers).forEach(function(e) {\n                            e();\n                        });\n                    }, e.subscribe = function(t) {\n                        var n = (0, a.v4)();\n                        return e.subscribers[n] = t, n;\n                    }, e.onEntryChange = function(t, n) {\n                        var i = (n || {}).skipInitialRender, r = void 0 !== i && i;\n                        e.userConfig && (e.livePreview = new c.default(e.userConfig), e.livePreview.setOnChangeCallback(e.publish), e.livePreview.setConfigFromParams(this.configs.params), this.configs.params = {}, e.userConfig = null);\n                        var o = e.subscribe(t);\n                        return r || t(), o;\n                    }, e.onLiveEdit = function(t) {\n                        return e.onEntryChange(t, {\n                            skipInitialRender: !0\n                        });\n                    }, e.unsubscribeOnEntryChange = function(t) {\n                        \"string\" == typeof t ? (e.subscribers[t] || d.PublicLogger.warn(\"No subscriber found with the given id.\"), delete e.subscribers[t]) : \"function\" == typeof t && (Object.entries(e.subscribers).some(function(n) {\n                            var i = n[0];\n                            return n[1] === t && (delete e.subscribers[i], !0);\n                        }) || d.PublicLogger.warn(\"No subscriber found with the given callback.\"));\n                    }, e.getGatsbyDataFormat = function(e, t) {\n                        return i(this, void 0, void 0, function() {\n                            return r(this, function(n) {\n                                return \"function\" == typeof e.find ? [\n                                    2,\n                                    e.toJSON().find().then(function(n) {\n                                        return n.map(function(n) {\n                                            return n.map(function(n) {\n                                                var i;\n                                                return (i = {})[(0, l.default)(\"\".concat(t, \"_\").concat(e.content_type_uid))] = n, i;\n                                            });\n                                        });\n                                    }).catch(function(e) {\n                                        console.error(e);\n                                    })\n                                ] : \"function\" == typeof e.fetch ? [\n                                    2,\n                                    e.toJSON().fetch().then(function(n) {\n                                        var i;\n                                        return (i = {})[(0, l.default)(\"\".concat(t, \"_\").concat(e.content_type_uid))] = n, i;\n                                    }).catch(function(e) {\n                                        console.error(e);\n                                    })\n                                ] : [\n                                    2\n                                ];\n                            });\n                        });\n                    }, e.getSdkVersion = function() {\n                        return s.default.version;\n                    }, e.livePreview = null, e.userConfig = null, e.subscribers = {}, e.configs = {\n                        params: {}\n                    }, e;\n                }();\n                t.ContentstackLivePreview = p, t.default = p, e.exports = p;\n            },\n            607: function(e, t, n) {\n                \"use strict\";\n                var i = this && this.__importDefault || function(e) {\n                    return e && e.__esModule ? e : {\n                        default: e\n                    };\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.ContentstackLivePreview = void 0;\n                var r = i(n(135));\n                n(279), t.ContentstackLivePreview = r.default, t.default = t.ContentstackLivePreview, e.exports = t.ContentstackLivePreview;\n            },\n            922: function(e, t, n) {\n                \"use strict\";\n                var i = this && this.__assign || function() {\n                    return i = Object.assign || function(e) {\n                        for(var t, n = 1, i = arguments.length; n < i; n++)for(var r in t = arguments[n])Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);\n                        return e;\n                    }, i.apply(this, arguments);\n                }, r = this && this.__importDefault || function(e) {\n                    return e && e.__esModule ? e : {\n                        default: e\n                    };\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                });\n                var o = n(928), a = n(895), l = n(383), s = n(334), c = r(n(147)), u = n(63), d = function() {\n                    function e(e) {\n                        void 0 === e && (e = s.userInitData);\n                        var t = this;\n                        this.config = {\n                            ssr: !0,\n                            enable: !0,\n                            runScriptsOnUpdate: !1,\n                            cleanCslpOnProduction: !0,\n                            hash: \"\",\n                            editButton: {\n                                enable: !0,\n                                exclude: [],\n                                position: \"top\",\n                                includeByQueryParameter: !0\n                            },\n                            stackDetails: {\n                                apiKey: \"\",\n                                environment: \"\",\n                                contentTypeUid: \"\",\n                                entryUid: \"\"\n                            },\n                            clientUrlParams: {\n                                protocol: \"https\",\n                                host: \"app.contentstack.com\",\n                                port: 443,\n                                url: \"https://app.contentstack.com:443\"\n                            },\n                            stackSdk: {\n                                live_preview: {},\n                                headers: {\n                                    api_key: \"\"\n                                },\n                                environment: \"\"\n                            },\n                            onChange: function() {}\n                        }, this.tooltip = null, this.currentElementBesideTooltip = null, this.tooltipChild = {\n                            singular: null,\n                            multiple: null\n                        }, this.tooltipCurrentChild = \"singular\", this.createCslpTooltip = function() {\n                            if (!document.getElementById(\"cslp-tooltip\") && t.config.editButton.enable) {\n                                var e = document.createElement(\"button\");\n                                e.classList.add(\"cslp-tooltip\"), e.setAttribute(\"data-test-id\", \"cs-cslp-tooltip\"), e.id = \"cslp-tooltip\", window.document.body.insertAdjacentElement(\"beforeend\", e), t.tooltipChild.singular = (0, o.createSingularEditButton)(t.scrollHandler), t.tooltipChild.multiple = (0, o.createMultipleEditButton)(t.scrollHandler, t.linkClickHandler), e.innerHTML = \"\", e.appendChild(t.tooltipChild.singular), t.tooltip = e;\n                            }\n                            t.updateTooltipPosition();\n                        }, (0, l.handleInitData)(e, this.config), this.addEditStyleOnHover = this.addEditStyleOnHover.bind(this), this.generateRedirectUrl = this.generateRedirectUrl.bind(this), this.scrollHandler = this.scrollHandler.bind(this), this.linkClickHandler = this.linkClickHandler.bind(this), this.handleUserChange = this.handleUserChange.bind(this), this.setOnChangeCallback = this.setOnChangeCallback.bind(this), this.resolveIncomingMessage = this.resolveIncomingMessage.bind(this), this.createCslpTooltip = this.createCslpTooltip.bind(this), this.requestDataSync = this.requestDataSync.bind(this), this.updateTooltipPosition = this.updateTooltipPosition.bind(this), this.removeDataCslp = this.removeDataCslp.bind(this), e.debug && a.PublicLogger.debug(\"Contentstack Live Preview Debugging mode: config --\", this.config), this.config.enable ? (void 0 !== typeof document && \"complete\" === document.readyState ? this.requestDataSync() : window.addEventListener(\"load\", this.requestDataSync), window.addEventListener(\"message\", this.resolveIncomingMessage), window.addEventListener(\"scroll\", this.updateTooltipPosition), this.config.editButton.enable && window.addEventListener(\"mouseover\", this.addEditStyleOnHover), this.config.ssr && (window.addEventListener(\"load\", function(e) {\n                            document.querySelectorAll(\"a\").forEach(function(e) {\n                                var t = document.location.origin;\n                                if (e.href && e.href.includes(t)) {\n                                    var n = (0, o.addLivePreviewQueryTags)(e.href);\n                                    e.href = n;\n                                }\n                            });\n                        }), window.addEventListener(\"click\", function(e) {\n                            var t = e.target, n = t.href, i = document.location.origin;\n                            if (n && n.includes(i) && !n.includes(\"live_preview\")) {\n                                var r = (0, o.addLivePreviewQueryTags)(t.href);\n                                e.target.href = r || t.href;\n                            }\n                        }))) : this.config.cleanCslpOnProduction && this.removeDataCslp();\n                    }\n                    return e.prototype.addEditStyleOnHover = function(e) {\n                        for(var t, n, i, r = !0, o = 0, a = e.composedPath(); o < a.length; o++){\n                            var l = a[o];\n                            if (\"BODY\" === l.nodeName) break;\n                            if (\"function\" == typeof (null == l ? void 0 : l.getAttribute)) {\n                                var s = l.getAttribute(\"data-cslp\");\n                                r && s ? (this.currentElementBesideTooltip && this.currentElementBesideTooltip.classList.remove(\"cslp-edit-mode\"), l.classList.add(\"cslp-edit-mode\"), this.currentElementBesideTooltip = l, this.updateTooltipPosition() && (null === (t = this.tooltip) || void 0 === t || t.setAttribute(\"current-data-cslp\", s), null === (n = this.tooltip) || void 0 === n || n.setAttribute(\"current-href\", null !== (i = l.getAttribute(\"href\")) && void 0 !== i ? i : \"\")), r = !1) : r || l.classList.remove(\"cslp-edit-mode\");\n                            }\n                        }\n                    }, e.prototype.generateRedirectUrl = function(e, t, n, i) {\n                        if (void 0 === t && (t = \"en-us\"), !this.config.stackDetails.apiKey) throw \"To use edit tags, you must provide the stack API key. Specify the API key while initializing the Live Preview SDK.\\n\\n                ContentstackLivePreview.init({\\n                    ...,\\n                    stackDetails: {\\n                        apiKey: 'your-api-key'\\n                    },\\n                    ...\\n                })\";\n                        if (!this.config.stackDetails.environment) throw \"To use edit tags, you must provide the preview environment. Specify the preview environment while initializing the Live Preview SDK.\\n\\n                ContentstackLivePreview.init({\\n                    ...,\\n                    stackDetails: {\\n                        environment: 'Your-environment'\\n                    },\\n                    ...\\n                })\";\n                        var r = String(this.config.clientUrlParams.protocol), o = String(this.config.clientUrlParams.host), a = String(this.config.clientUrlParams.port), l = String(this.config.stackDetails.environment), s = \"!/stack/\".concat(this.config.stackDetails.apiKey, \"/content-type/\").concat(e, \"/\").concat(null != t ? t : \"en-us\", \"/entry/\").concat(n, \"/edit\"), c = new URL(\"\".concat(r, \"://\").concat(o));\n                        return c.port = a, c.hash = s, c.searchParams.append(\"preview-field\", i), c.searchParams.append(\"preview-locale\", null != t ? t : \"en-us\"), c.searchParams.append(\"preview-environment\", l), \"\".concat(c.origin, \"/\").concat(c.hash).concat(c.search);\n                    }, e.prototype.scrollHandler = function() {\n                        if (this.tooltip) {\n                            var e = this.tooltip.getAttribute(\"current-data-cslp\");\n                            if (e) {\n                                var t = e.split(\".\"), n = t[0], i = t[1], r = t[2], o = t.slice(3);\n                                if (window.location !== window.parent.location) window.parent.postMessage({\n                                    from: \"live-preview\",\n                                    type: \"scroll\",\n                                    data: {\n                                        field: o.join(\".\"),\n                                        content_type_uid: n,\n                                        entry_uid: i,\n                                        locale: r\n                                    }\n                                }, \"*\");\n                                else try {\n                                    var l = this.generateRedirectUrl(n, r, i, o.join(\".\"));\n                                    window.open(l, \"_blank\");\n                                } catch (e) {\n                                    a.PublicLogger.error(e);\n                                }\n                            }\n                        }\n                    }, e.prototype.linkClickHandler = function() {\n                        if (this.tooltip) {\n                            var e = this.tooltip.getAttribute(\"current-href\");\n                            e && window.location.assign(e);\n                        }\n                    }, e.prototype.handleUserChange = function(e) {\n                        this.config.stackSdk.live_preview = i(i(i({}, this.config.stackSdk.live_preview), e), {\n                            live_preview: e.hash\n                        }), this.config.onChange();\n                    }, e.prototype.setOnChangeCallback = function(e) {\n                        this.config.onChange = e;\n                    }, Object.defineProperty(e.prototype, \"hash\", {\n                        get: function() {\n                            return this.config.hash;\n                        },\n                        enumerable: !1,\n                        configurable: !0\n                    }), e.prototype.setConfigFromParams = function(e) {\n                        if (void 0 === e && (e = {}), \"object\" != typeof e) throw new TypeError(\"Live preview SDK: query param must be an object\");\n                        var t = new URLSearchParams(e).get(\"live_preview\");\n                        t && (this.config.hash = t);\n                    }, e.prototype.resolveIncomingMessage = function(e) {\n                        var t = this;\n                        if (\"object\" == typeof e.data && \"live-preview\" === e.data.from) switch(e.data.type){\n                            case \"client-data-send\":\n                                var n = this.config.stackDetails, i = n.contentTypeUid, r = n.entryUid, o = e.data.data.hash;\n                                if (this.setConfigFromParams({\n                                    live_preview: o\n                                }), this.config.ssr) {\n                                    var a = new URL(window.location.href);\n                                    a.searchParams.append(\"live_preview\", o), a.searchParams.append(\"content_type_uid\", i), a.searchParams.append(\"entry_uid\", r), fetch(a.toString(), {\n                                        method: \"GET\"\n                                    }).then(function(e) {\n                                        return e.text();\n                                    }).then(function(e) {\n                                        (0, u.updateDocumentBody)(document, e, {\n                                            onPostOperation: t.createCslpTooltip,\n                                            shouldReRunScripts: t.config.runScriptsOnUpdate\n                                        });\n                                    });\n                                } else this.handleUserChange({\n                                    content_type_uid: i,\n                                    entry_uid: r,\n                                    hash: o\n                                });\n                                break;\n                            case \"init-ack\":\n                                var l = e.data.data;\n                                i = l.contentTypeUid, r = l.entryUid, this.config.stackDetails.contentTypeUid = i, this.config.stackDetails.entryUid = r;\n                                break;\n                            case \"history\":\n                                switch(e.data.data.type){\n                                    case \"forward\":\n                                        window.history.forward();\n                                        break;\n                                    case \"backward\":\n                                        window.history.back();\n                                        break;\n                                    case \"reload\":\n                                        window.history.go();\n                                }\n                                break;\n                            case \"document-body-post-scripts-loaded\":\n                                var s = e.data.data.body;\n                                (0, u.replaceDocumentBody)(s, this.createCslpTooltip);\n                        }\n                    }, e.prototype.requestDataSync = function() {\n                        this.handleUserChange({\n                            live_preview: \"init\"\n                        }), this.createCslpTooltip(), window.parent.postMessage({\n                            from: \"live-preview\",\n                            type: \"init\",\n                            data: {\n                                config: {\n                                    shouldReload: this.config.ssr,\n                                    href: window.location.href,\n                                    sdkVersion: c.default.version\n                                }\n                            }\n                        }, \"*\"), this.config.ssr || setInterval(function() {\n                            window.parent.postMessage({\n                                from: \"live-preview\",\n                                type: \"check-entry-page\",\n                                data: {\n                                    href: window.location.href\n                                }\n                            }, \"*\");\n                        }, 1500);\n                    }, e.prototype.updateTooltipPosition = function() {\n                        var e;\n                        if (!this.currentElementBesideTooltip || !this.tooltip) return !1;\n                        var t = this.currentElementBesideTooltip.getBoundingClientRect(), n = null === (e = this.tooltip.parentElement) || void 0 === e ? void 0 : e.getBoundingClientRect();\n                        if (t && n) {\n                            var i = (0, o.getEditButtonPosition)(this.currentElementBesideTooltip, this.config.editButton.position), r = i.upperBoundOfTooltip, a = i.leftBoundOfTooltip;\n                            return r < 0 && (r = t.top < 0 ? t.top : 0), this.tooltip.style.top = r + \"px\", this.tooltip.style.zIndex = this.currentElementBesideTooltip.style.zIndex || \"200\", this.tooltip.style.left = a + \"px\", this.tooltipChild.singular && this.tooltipChild.multiple && (this.currentElementBesideTooltip.hasAttribute(\"href\") ? \"multiple\" !== this.tooltipCurrentChild && (this.tooltip.innerHTML = \"\", this.tooltip.appendChild(this.tooltipChild.multiple), this.tooltipCurrentChild = \"multiple\") : \"singular\" !== this.tooltipCurrentChild && (this.tooltip.innerHTML = \"\", this.tooltip.appendChild(this.tooltipChild.singular), this.tooltipCurrentChild = \"singular\")), !0;\n                        }\n                        return !1;\n                    }, e.prototype.removeDataCslp = function() {\n                        document.querySelectorAll(\"[data-cslp]\").forEach(function(e) {\n                            e.removeAttribute(\"data-cslp\"), e.removeAttribute(\"data-cslp-button-position\");\n                        });\n                    }, e;\n                }();\n                t.default = d;\n            },\n            334: (e, t)=>{\n                \"use strict\";\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.userInitData = void 0, t.userInitData = {\n                    ssr: !0,\n                    enable: !0,\n                    cleanCslpOnProduction: !0,\n                    editButton: {\n                        enable: !0,\n                        exclude: [],\n                        position: \"top\",\n                        includeByQueryParameter: !0\n                    },\n                    stackDetails: {\n                        apiKey: \"\",\n                        environment: \"\"\n                    },\n                    clientUrlParams: {\n                        protocol: \"https\",\n                        host: \"app.contentstack.com\",\n                        port: 443\n                    },\n                    stackSdk: {\n                        live_preview: {},\n                        headers: {\n                            api_key: \"\"\n                        },\n                        environment: \"\"\n                    },\n                    runScriptsOnUpdate: !1\n                };\n            },\n            383: (e, t, n)=>{\n                \"use strict\";\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.handleUserConfig = t.handleInitData = void 0;\n                var i = n(928), r = n(895), o = function(e, t) {\n                    var n, i, r;\n                    if (e.clientUrlParams.host = null !== (n = t.host) && void 0 !== n ? n : e.clientUrlParams.host, e.clientUrlParams.protocol = null !== (i = t.protocol) && void 0 !== i ? i : e.clientUrlParams.protocol, e.clientUrlParams.port = null !== (r = t.port) && void 0 !== r ? r : e.clientUrlParams.port, void 0 !== t.protocol && void 0 === t.port) switch(t.protocol){\n                        case \"http\":\n                            e.clientUrlParams.port = 80;\n                            break;\n                        case \"https\":\n                            e.clientUrlParams.port = 443;\n                    }\n                    var o = e.clientUrlParams.host;\n                    o.endsWith(\"/\") && (o = o.slice(0, -1), e.clientUrlParams.host = o), e.clientUrlParams.url = \"\".concat(e.clientUrlParams.protocol, \"://\").concat(e.clientUrlParams.host, \":\").concat(e.clientUrlParams.port);\n                };\n                function a(e) {\n                    return Object.prototype.hasOwnProperty.call(e, \"cachePolicy\");\n                }\n                t.handleInitData = function(e, t) {\n                    var n, l, s, c, u, d, p, v, f, h, g, m, y, b, w, C, P, k, L, B, S, _, T, O, E, U, x, A, D, M, I, N, j, R, H, V, K, F, Z, q, Q, z, W, G, Y, $, J, X, ee, te, ne, ie, re, oe, ae, le, se, ce;\n                    if (a(e)) {\n                        r.PublicLogger.warn(\"Deprecated: Do not pass the Stack object directly to the Live Preview SDK. Pass it using the config.stackSDK config object.\");\n                        var ue = (null == e ? void 0 : e.live_preview) || {};\n                        t.ssr = !1, t.runScriptsOnUpdate = null !== (n = ue.runScriptsOnUpdate) && void 0 !== n ? n : t.runScriptsOnUpdate, t.enable = null !== (l = ue.enable) && void 0 !== l ? l : t.enable, t.cleanCslpOnProduction = null !== (s = ue.cleanCslpOnProduction) && void 0 !== s ? s : t.cleanCslpOnProduction, t.editButton = {\n                            enable: (0, i.shouldRenderEditButton)(null !== (c = ue.editButton) && void 0 !== c ? c : t.editButton),\n                            exclude: Array.isArray(null === (u = ue.editButton) || void 0 === u ? void 0 : u.exclude) && (null === (d = ue.editButton) || void 0 === d ? void 0 : d.exclude) ? null === (p = ue.editButton) || void 0 === p ? void 0 : p.exclude : null !== (v = t.editButton.exclude) && void 0 !== v ? v : [],\n                            position: null !== (g = null !== (h = null === (f = ue.editButton) || void 0 === f ? void 0 : f.position) && void 0 !== h ? h : t.editButton.position) && void 0 !== g ? g : \"top\",\n                            includeByQueryParameter: null === (b = null !== (y = null === (m = ue.editButton) || void 0 === m ? void 0 : m.includeByQueryParameter) && void 0 !== y ? y : t.editButton.includeByQueryParameter) || void 0 === b || b\n                        }, t.stackSdk = e, Object.prototype.hasOwnProperty.call(e.headers, \"api_key\") && e.headers.api_key && (t.stackDetails.apiKey = e.headers.api_key), Object.prototype.hasOwnProperty.call(e, \"environment\") && (t.stackDetails.environment = e.environment), o(t, null !== (w = ue.clientUrlParams) && void 0 !== w ? w : t.clientUrlParams);\n                    } else if (!a(e)) {\n                        var de = e.stackSdk || t.stackSdk;\n                        t.enable = null !== (k = null !== (C = e.enable) && void 0 !== C ? C : null === (P = de.live_preview) || void 0 === P ? void 0 : P.enable) && void 0 !== k ? k : t.enable, t.ssr = null === (_ = null !== (S = null !== (L = e.ssr) && void 0 !== L ? L : null === (B = de.live_preview) || void 0 === B ? void 0 : B.ssr) && void 0 !== S ? S : \"object\" != typeof e.stackSdk) || void 0 === _ || _, t.runScriptsOnUpdate = null !== (E = null !== (T = e.runScriptsOnUpdate) && void 0 !== T ? T : null === (O = de.live_preview) || void 0 === O ? void 0 : O.runScriptsOnUpdate) && void 0 !== E ? E : t.runScriptsOnUpdate, t.stackSdk = de, t.cleanCslpOnProduction = null !== (A = null !== (U = e.cleanCslpOnProduction) && void 0 !== U ? U : null === (x = de.live_preview) || void 0 === x ? void 0 : x.cleanCslpOnProduction) && void 0 !== A ? A : t.cleanCslpOnProduction, t.editButton = {\n                            enable: (0, i.shouldRenderEditButton)(null !== (I = null !== (D = e.editButton) && void 0 !== D ? D : null === (M = de.live_preview) || void 0 === M ? void 0 : M.editButton) && void 0 !== I ? I : t.editButton),\n                            exclude: Array.isArray(null === (N = e.editButton) || void 0 === N ? void 0 : N.exclude) && (null === (j = e.editButton) || void 0 === j ? void 0 : j.exclude) ? null === (R = e.editButton) || void 0 === R ? void 0 : R.exclude : Array.isArray(null === (H = de.live_preview) || void 0 === H ? void 0 : H.exclude) && (null === (V = de.live_preview) || void 0 === V ? void 0 : V.exclude) ? null === (K = de.live_preview) || void 0 === K ? void 0 : K.exclude : null !== (F = t.editButton.exclude) && void 0 !== F ? F : [],\n                            position: null !== (W = null !== (z = null !== (q = null === (Z = e.editButton) || void 0 === Z ? void 0 : Z.position) && void 0 !== q ? q : null === (Q = de.live_preview) || void 0 === Q ? void 0 : Q.position) && void 0 !== z ? z : t.editButton.position) && void 0 !== W ? W : \"top\",\n                            includeByQueryParameter: null === (X = null !== (J = null !== (Y = null === (G = e.editButton) || void 0 === G ? void 0 : G.includeByQueryParameter) && void 0 !== Y ? Y : null === ($ = de.live_preview) || void 0 === $ ? void 0 : $.includeByQueryParameter) && void 0 !== J ? J : t.editButton.includeByQueryParameter) || void 0 === X || X\n                        }, t.stackDetails.apiKey = null !== (ie = null !== (te = null === (ee = e.stackDetails) || void 0 === ee ? void 0 : ee.apiKey) && void 0 !== te ? te : null === (ne = de.headers) || void 0 === ne ? void 0 : ne.api_key) && void 0 !== ie ? ie : t.stackDetails.apiKey, t.stackDetails.environment = null !== (ae = null !== (oe = null === (re = e.stackDetails) || void 0 === re ? void 0 : re.environment) && void 0 !== oe ? oe : de.environment) && void 0 !== ae ? ae : t.stackDetails.environment, o(t, null !== (ce = null !== (le = e.clientUrlParams) && void 0 !== le ? le : null === (se = de.live_preview) || void 0 === se ? void 0 : se.clientUrlParams) && void 0 !== ce ? ce : t.clientUrlParams);\n                    }\n                }, t.handleUserConfig = {\n                    clientUrlParams: o\n                };\n            },\n            928: (e, t, n)=>{\n                \"use strict\";\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.getEditButtonPosition = t.shouldRenderEditButton = t.addLivePreviewQueryTags = t.createMultipleEditButton = t.createSingularEditButton = t.tooltipMultipleInnerHtml = t.tooltipSingularInnerHtml = t.hasWindow = void 0;\n                var i = n(895);\n                function r() {\n                    return window.location !== window.parent.location;\n                }\n                t.hasWindow = function() {\n                    return \"undefined\" != \"undefined\";\n                }, t.tooltipSingularInnerHtml = '<div class=\"singular edit-button\">\\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\\n    </svg>Edit\\n  </div>', t.tooltipMultipleInnerHtml = '<div class=\"edit-button\" title=\"edit\">\\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\\n    </svg>\\n  </div>\\n  <div title=\"click element\" class=\"external-link-button\">\\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M2.66654 2.66758H13.3332V13.3342H6.66654V16.0009H13.3332C14.0405 16.0009 14.7187 15.72 15.2188 15.2199C15.7189 14.7198 15.9999 14.0415 15.9999 13.3342V2.66758C15.9999 1.96034 15.7189 1.28206 15.2188 0.781964C14.7187 0.281867 14.0405 0.000915527 13.3332 0.000915527H2.66654C1.9593 0.000915527 1.28102 0.281867 0.780927 0.781964C0.280829 1.28206 -0.00012207 1.96034 -0.00012207 2.66758V9.33425H2.66654V2.66758Z\" fill=\"#718096\" />\\n      <path d=\"M6.94263 7.05734L0.999958 13L2.88529 14.8853L8.82796 8.94267L10.8853 11V5.00001H4.88529L6.94263 7.05734Z\" fill=\"#718096\" />\\n    </svg>\\n  </div>', t.createSingularEditButton = function(e) {\n                    var t = document.createElement(\"div\");\n                    return t.classList.add(\"cslp-tooltip-child\", \"singular\"), t.setAttribute(\"data-test-id\", \"cslp-singular-edit-button\"), t.innerHTML = '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\\n    </svg>Edit', t.addEventListener(\"click\", e), t;\n                }, t.createMultipleEditButton = function(e, t) {\n                    var n = document.createElement(\"div\");\n                    n.classList.add(\"cslp-tooltip-child\"), n.setAttribute(\"data-title\", \"Edit\"), n.setAttribute(\"data-test-id\", \"cslp-multiple-edit-button\"), n.innerHTML = ' <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\\n    </svg>', n.addEventListener(\"click\", e);\n                    var i = document.createElement(\"div\");\n                    i.classList.add(\"cslp-tooltip-child\"), i.setAttribute(\"data-title\", \"Go to link\"), i.setAttribute(\"data-test-id\", \"cslp-multiple-external-link-button\"), i.innerHTML = ' <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n      <path d=\"M2.66654 2.66758H13.3332V13.3342H6.66654V16.0009H13.3332C14.0405 16.0009 14.7187 15.72 15.2188 15.2199C15.7189 14.7198 15.9999 14.0415 15.9999 13.3342V2.66758C15.9999 1.96034 15.7189 1.28206 15.2188 0.781964C14.7187 0.281867 14.0405 0.000915527 13.3332 0.000915527H2.66654C1.9593 0.000915527 1.28102 0.281867 0.780927 0.781964C0.280829 1.28206 -0.00012207 1.96034 -0.00012207 2.66758V9.33425H2.66654V2.66758Z\" fill=\"#718096\" />\\n      <path d=\"M6.94263 7.05734L0.999958 13L2.88529 14.8853L8.82796 8.94267L10.8853 11V5.00001H4.88529L6.94263 7.05734Z\" fill=\"#718096\" />\\n    </svg>', i.addEventListener(\"click\", t);\n                    var r = document.createDocumentFragment();\n                    r.appendChild(n), r.appendChild(i);\n                    var o = document.createElement(\"div\");\n                    return o.appendChild(r), o.classList.add(\"multiple\"), o;\n                }, t.addLivePreviewQueryTags = function(e) {\n                    try {\n                        var t = new URL(document.location.href), n = new URL(e), r = t.searchParams.get(\"live_preview\"), o = t.searchParams.get(\"content_type_uid\"), a = t.searchParams.get(\"entry_uid\");\n                        return r && o && a && (n.searchParams.set(\"live_preview\", r), n.searchParams.set(\"content_type_uid\", o), n.searchParams.set(\"entry_uid\", a)), n.href;\n                    } catch (t) {\n                        return i.PublicLogger.error(\"Error while adding live preview to URL\"), e;\n                    }\n                }, t.shouldRenderEditButton = function(e) {\n                    var t, n;\n                    if (!e.enable) return void 0 === e.enable && i.PublicLogger.error(\"enable key is required inside editButton object\"), !1;\n                    try {\n                        var o = new URL(window.location.href).searchParams.get(\"cslp-buttons\");\n                        if (null !== o && !1 !== e.includeByQueryParameter) return \"false\" !== o;\n                    } catch (e) {\n                        i.PublicLogger.error(e);\n                    }\n                    return !(r() && (null === (t = e.exclude) || void 0 === t ? void 0 : t.find(function(e) {\n                        return \"insideLivePreviewPortal\" === e;\n                    })) || !r() && (null === (n = e.exclude) || void 0 === n ? void 0 : n.find(function(e) {\n                        return \"outsideLivePreviewPortal\" === e;\n                    })));\n                }, t.getEditButtonPosition = function(e, t) {\n                    if (!e) return {\n                        upperBoundOfTooltip: 0,\n                        leftBoundOfTooltip: 0\n                    };\n                    var n = e.getAttribute(\"data-cslp-button-position\");\n                    return function(e, t) {\n                        var n = {\n                            upperBoundOfTooltip: 0,\n                            leftBoundOfTooltip: 0\n                        }, r = e.getBoundingClientRect();\n                        try {\n                            var o = {\n                                width: 72,\n                                halfWidth: 36,\n                                height: 40,\n                                basicMargin: 5,\n                                widthWithMargin: 77\n                            };\n                            switch(t){\n                                case \"top-center\":\n                                    n.upperBoundOfTooltip = r.top - o.height, n.leftBoundOfTooltip = r.width / 2 - o.halfWidth + r.left;\n                                    break;\n                                case \"top-right\":\n                                    n.upperBoundOfTooltip = r.top - o.height, n.leftBoundOfTooltip = r.right - o.width;\n                                    break;\n                                case \"right\":\n                                    n.upperBoundOfTooltip = r.top - o.basicMargin, n.leftBoundOfTooltip = r.right + o.basicMargin;\n                                    break;\n                                case \"bottom\":\n                                case \"bottom-left\":\n                                    n.upperBoundOfTooltip = r.bottom + o.basicMargin, n.leftBoundOfTooltip = r.left - o.basicMargin;\n                                    break;\n                                case \"bottom-center\":\n                                    n.upperBoundOfTooltip = r.bottom + o.basicMargin, n.leftBoundOfTooltip = r.width / 2 - o.halfWidth + r.left;\n                                    break;\n                                case \"bottom-right\":\n                                    n.upperBoundOfTooltip = r.bottom + o.basicMargin, n.leftBoundOfTooltip = r.right - o.width;\n                                    break;\n                                case \"left\":\n                                    n.upperBoundOfTooltip = r.top - o.basicMargin, n.leftBoundOfTooltip = r.left - o.widthWithMargin;\n                                    break;\n                                default:\n                                    n.upperBoundOfTooltip = r.top - o.height, n.leftBoundOfTooltip = r.left - o.basicMargin;\n                            }\n                            return n;\n                        } catch (e) {\n                            return i.PublicLogger.error(e), n;\n                        }\n                    }(e, n || t || \"top\");\n                };\n            },\n            895: function(e, t) {\n                \"use strict\";\n                var n = this && this.__spreadArray || function(e, t, n) {\n                    if (n || 2 === arguments.length) for(var i, r = 0, o = t.length; r < o; r++)!i && r in t || (i || (i = Array.prototype.slice.call(t, 0, r)), i[r] = t[r]);\n                    return e.concat(i || Array.prototype.slice.call(t));\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.PublicLogger = void 0;\n                var i = function() {\n                    function e() {}\n                    return e.logEvent = function(e, t) {\n                        e.apply(void 0, n([\n                            \"Live_Preview_SDK:\"\n                        ], t, !1));\n                    }, e.error = function() {\n                        for(var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t];\n                        this.logEvent(console.error, e);\n                    }, e.warn = function() {\n                        for(var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t];\n                        this.logEvent(console.warn, e);\n                    }, e.debug = function() {\n                        for(var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t];\n                        this.logEvent(console.debug, e);\n                    }, e;\n                }();\n                t.PublicLogger = i;\n            },\n            63: function(e, t, n) {\n                \"use strict\";\n                var i = this && this.__awaiter || function(e, t, n, i) {\n                    return new (n || (n = Promise))(function(r, o) {\n                        function a(e) {\n                            try {\n                                s(i.next(e));\n                            } catch (e) {\n                                o(e);\n                            }\n                        }\n                        function l(e) {\n                            try {\n                                s(i.throw(e));\n                            } catch (e) {\n                                o(e);\n                            }\n                        }\n                        function s(e) {\n                            var t;\n                            e.done ? r(e.value) : (t = e.value, t instanceof n ? t : new n(function(e) {\n                                e(t);\n                            })).then(a, l);\n                        }\n                        s((i = i.apply(e, t || [])).next());\n                    });\n                }, r = this && this.__generator || function(e, t) {\n                    var n, i, r, o, a = {\n                        label: 0,\n                        sent: function() {\n                            if (1 & r[0]) throw r[1];\n                            return r[1];\n                        },\n                        trys: [],\n                        ops: []\n                    };\n                    return o = {\n                        next: l(0),\n                        throw: l(1),\n                        return: l(2)\n                    }, \"function\" == typeof Symbol && (o[Symbol.iterator] = function() {\n                        return this;\n                    }), o;\n                    function l(l) {\n                        return function(s) {\n                            return function(l) {\n                                if (n) throw new TypeError(\"Generator is already executing.\");\n                                for(; o && (o = 0, l[0] && (a = 0)), a;)try {\n                                    if (n = 1, i && (r = 2 & l[0] ? i.return : l[0] ? i.throw || ((r = i.return) && r.call(i), 0) : i.next) && !(r = r.call(i, l[1])).done) return r;\n                                    switch(i = 0, r && (l = [\n                                        2 & l[0],\n                                        r.value\n                                    ]), l[0]){\n                                        case 0:\n                                        case 1:\n                                            r = l;\n                                            break;\n                                        case 4:\n                                            return a.label++, {\n                                                value: l[1],\n                                                done: !1\n                                            };\n                                        case 5:\n                                            a.label++, i = l[1], l = [\n                                                0\n                                            ];\n                                            continue;\n                                        case 7:\n                                            l = a.ops.pop(), a.trys.pop();\n                                            continue;\n                                        default:\n                                            if (!((r = (r = a.trys).length > 0 && r[r.length - 1]) || 6 !== l[0] && 2 !== l[0])) {\n                                                a = 0;\n                                                continue;\n                                            }\n                                            if (3 === l[0] && (!r || l[1] > r[0] && l[1] < r[3])) {\n                                                a.label = l[1];\n                                                break;\n                                            }\n                                            if (6 === l[0] && a.label < r[1]) {\n                                                a.label = r[1], r = l;\n                                                break;\n                                            }\n                                            if (r && a.label < r[2]) {\n                                                a.label = r[2], a.ops.push(l);\n                                                break;\n                                            }\n                                            r[2] && a.ops.pop(), a.trys.pop();\n                                            continue;\n                                    }\n                                    l = t.call(e, a);\n                                } catch (e) {\n                                    l = [\n                                        6,\n                                        e\n                                    ], i = 0;\n                                } finally{\n                                    n = r = 0;\n                                }\n                                if (5 & l[0]) throw l[1];\n                                return {\n                                    value: l[0] ? l[1] : void 0,\n                                    done: !0\n                                };\n                            }([\n                                l,\n                                s\n                            ]);\n                        };\n                    }\n                }, o = this && this.__importDefault || function(e) {\n                    return e && e.__esModule ? e : {\n                        default: e\n                    };\n                };\n                Object.defineProperty(t, \"__esModule\", {\n                    value: !0\n                }), t.replaceDocumentBody = t.updateDocumentBody = t.rerunScriptsInDocument = void 0;\n                var a = o(n(492));\n                function l() {\n                    var e = document.querySelectorAll(\"script\"), t = e.length, n = 0;\n                    function i() {\n                        n++, 0 == --t && window.parent.postMessage({\n                            from: \"live-preview\",\n                            type: \"document-body-post-scripts-loaded\",\n                            data: {\n                                body: document.body.outerHTML\n                            }\n                        }, \"*\"), r();\n                    }\n                    function r() {\n                        if (n < e.length) {\n                            var t = e[n], r = t.parentNode, o = document.createElement(\"script\");\n                            t.src ? (o.onerror = i, o.onload = i, o.src = t.src) : (o.text = t.text, i()), null == r || r.replaceChild(o, t);\n                        }\n                    }\n                    e.length && r();\n                }\n                function s(e, t) {\n                    var n = (new DOMParser).parseFromString(e, \"text/html\");\n                    (0, a.default)(document.body, n.body), t && t();\n                }\n                t.rerunScriptsInDocument = l, t.updateDocumentBody = function(e, t, n) {\n                    return i(this, void 0, void 0, function() {\n                        var i, o, a, c, u;\n                        return r(this, function(r) {\n                            return i = n.shouldReRunScripts, o = n.onPostOperation, i ? (e.querySelectorAll(\"iframe#contentstack-live-preview-iframe\").forEach(function(e) {\n                                e.remove();\n                            }), (a = e.createElement(\"iframe\")).style.display = \"none\", a.id = \"contentstack-live-preview-iframe\", c = /(<\\s*\\/\\s*script\\s*>)|(`)/gm, u = t.replace(c, function(e, t, n) {\n                                return n ? \"\\\\`\" : \"<\\\\/script>\";\n                            }), a.srcdoc = \"\\n        <head>\\n        <script>\\n            function prepareIframeForScriptRerun() {\\n                const responseHTML = `\".concat(u, '`;\\n\\n                const html = document.getElementsByTagName(\"html\").item(0);\\n\\n                const rerunScriptsInDocument = ').concat(l, \"\\n\\n                if (html) {\\n                    html.innerHTML = responseHTML;\\n                    rerunScriptsInDocument();\\n                }\\n            }\\n            prepareIframeForScriptRerun()\\n        </script>\\n        </head>\"), e.body.appendChild(a)) : s(t, o), [\n                                2\n                            ];\n                        });\n                    });\n                }, t.replaceDocumentBody = s;\n            },\n            614: (e, t, n)=>{\n                \"use strict\";\n                var i;\n                n.r(t), n.d(t, {\n                    NIL: ()=>E,\n                    parse: ()=>g,\n                    stringify: ()=>u,\n                    v1: ()=>h,\n                    v3: ()=>B,\n                    v4: ()=>S,\n                    v5: ()=>O,\n                    validate: ()=>l,\n                    version: ()=>U\n                });\n                var r = new Uint8Array(16);\n                function o() {\n                    if (!i && !(i = \"undefined\" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || \"undefined\" != typeof msCrypto && \"function\" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto))) throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n                    return i(r);\n                }\n                const a = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i, l = function(e) {\n                    return \"string\" == typeof e && a.test(e);\n                };\n                for(var s = [], c = 0; c < 256; ++c)s.push((c + 256).toString(16).substr(1));\n                const u = function(e) {\n                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = (s[e[t + 0]] + s[e[t + 1]] + s[e[t + 2]] + s[e[t + 3]] + \"-\" + s[e[t + 4]] + s[e[t + 5]] + \"-\" + s[e[t + 6]] + s[e[t + 7]] + \"-\" + s[e[t + 8]] + s[e[t + 9]] + \"-\" + s[e[t + 10]] + s[e[t + 11]] + s[e[t + 12]] + s[e[t + 13]] + s[e[t + 14]] + s[e[t + 15]]).toLowerCase();\n                    if (!l(n)) throw TypeError(\"Stringified UUID is invalid\");\n                    return n;\n                };\n                var d, p, v = 0, f = 0;\n                const h = function(e, t, n) {\n                    var i = t && n || 0, r = t || new Array(16), a = (e = e || {}).node || d, l = void 0 !== e.clockseq ? e.clockseq : p;\n                    if (null == a || null == l) {\n                        var s = e.random || (e.rng || o)();\n                        null == a && (a = d = [\n                            1 | s[0],\n                            s[1],\n                            s[2],\n                            s[3],\n                            s[4],\n                            s[5]\n                        ]), null == l && (l = p = 16383 & (s[6] << 8 | s[7]));\n                    }\n                    var c = void 0 !== e.msecs ? e.msecs : Date.now(), h = void 0 !== e.nsecs ? e.nsecs : f + 1, g = c - v + (h - f) / 1e4;\n                    if (g < 0 && void 0 === e.clockseq && (l = l + 1 & 16383), (g < 0 || c > v) && void 0 === e.nsecs && (h = 0), h >= 1e4) throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n                    v = c, f = h, p = l;\n                    var m = (1e4 * (268435455 & (c += 122192928e5)) + h) % 4294967296;\n                    r[i++] = m >>> 24 & 255, r[i++] = m >>> 16 & 255, r[i++] = m >>> 8 & 255, r[i++] = 255 & m;\n                    var y = c / 4294967296 * 1e4 & 268435455;\n                    r[i++] = y >>> 8 & 255, r[i++] = 255 & y, r[i++] = y >>> 24 & 15 | 16, r[i++] = y >>> 16 & 255, r[i++] = l >>> 8 | 128, r[i++] = 255 & l;\n                    for(var b = 0; b < 6; ++b)r[i + b] = a[b];\n                    return t || u(r);\n                }, g = function(e) {\n                    if (!l(e)) throw TypeError(\"Invalid UUID\");\n                    var t, n = new Uint8Array(16);\n                    return n[0] = (t = parseInt(e.slice(0, 8), 16)) >>> 24, n[1] = t >>> 16 & 255, n[2] = t >>> 8 & 255, n[3] = 255 & t, n[4] = (t = parseInt(e.slice(9, 13), 16)) >>> 8, n[5] = 255 & t, n[6] = (t = parseInt(e.slice(14, 18), 16)) >>> 8, n[7] = 255 & t, n[8] = (t = parseInt(e.slice(19, 23), 16)) >>> 8, n[9] = 255 & t, n[10] = (t = parseInt(e.slice(24, 36), 16)) / 1099511627776 & 255, n[11] = t / 4294967296 & 255, n[12] = t >>> 24 & 255, n[13] = t >>> 16 & 255, n[14] = t >>> 8 & 255, n[15] = 255 & t, n;\n                };\n                function m(e, t, n) {\n                    function i(e, i, r, o) {\n                        if (\"string\" == typeof e && (e = function(e) {\n                            e = unescape(encodeURIComponent(e));\n                            for(var t = [], n = 0; n < e.length; ++n)t.push(e.charCodeAt(n));\n                            return t;\n                        }(e)), \"string\" == typeof i && (i = g(i)), 16 !== i.length) throw TypeError(\"Namespace must be array-like (16 iterable integer values, 0-255)\");\n                        var a = new Uint8Array(16 + e.length);\n                        if (a.set(i), a.set(e, i.length), (a = n(a))[6] = 15 & a[6] | t, a[8] = 63 & a[8] | 128, r) {\n                            o = o || 0;\n                            for(var l = 0; l < 16; ++l)r[o + l] = a[l];\n                            return r;\n                        }\n                        return u(a);\n                    }\n                    try {\n                        i.name = e;\n                    } catch (e) {}\n                    return i.DNS = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\", i.URL = \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\", i;\n                }\n                function y(e) {\n                    return 14 + (e + 64 >>> 9 << 4) + 1;\n                }\n                function b(e, t) {\n                    var n = (65535 & e) + (65535 & t);\n                    return (e >> 16) + (t >> 16) + (n >> 16) << 16 | 65535 & n;\n                }\n                function w(e, t, n, i, r, o) {\n                    return b((a = b(b(t, e), b(i, o))) << (l = r) | a >>> 32 - l, n);\n                    var a, l;\n                }\n                function C(e, t, n, i, r, o, a) {\n                    return w(t & n | ~t & i, e, t, r, o, a);\n                }\n                function P(e, t, n, i, r, o, a) {\n                    return w(t & i | n & ~i, e, t, r, o, a);\n                }\n                function k(e, t, n, i, r, o, a) {\n                    return w(t ^ n ^ i, e, t, r, o, a);\n                }\n                function L(e, t, n, i, r, o, a) {\n                    return w(n ^ (t | ~i), e, t, r, o, a);\n                }\n                const B = m(\"v3\", 48, function(e) {\n                    if (\"string\" == typeof e) {\n                        var t = unescape(encodeURIComponent(e));\n                        e = new Uint8Array(t.length);\n                        for(var n = 0; n < t.length; ++n)e[n] = t.charCodeAt(n);\n                    }\n                    return function(e) {\n                        for(var t = [], n = 32 * e.length, i = \"0123456789abcdef\", r = 0; r < n; r += 8){\n                            var o = e[r >> 5] >>> r % 32 & 255, a = parseInt(i.charAt(o >>> 4 & 15) + i.charAt(15 & o), 16);\n                            t.push(a);\n                        }\n                        return t;\n                    }(function(e, t) {\n                        e[t >> 5] |= 128 << t % 32, e[y(t) - 1] = t;\n                        for(var n = 1732584193, i = -271733879, r = -1732584194, o = 271733878, a = 0; a < e.length; a += 16){\n                            var l = n, s = i, c = r, u = o;\n                            n = C(n, i, r, o, e[a], 7, -680876936), o = C(o, n, i, r, e[a + 1], 12, -389564586), r = C(r, o, n, i, e[a + 2], 17, 606105819), i = C(i, r, o, n, e[a + 3], 22, -1044525330), n = C(n, i, r, o, e[a + 4], 7, -176418897), o = C(o, n, i, r, e[a + 5], 12, 1200080426), r = C(r, o, n, i, e[a + 6], 17, -1473231341), i = C(i, r, o, n, e[a + 7], 22, -45705983), n = C(n, i, r, o, e[a + 8], 7, 1770035416), o = C(o, n, i, r, e[a + 9], 12, -1958414417), r = C(r, o, n, i, e[a + 10], 17, -42063), i = C(i, r, o, n, e[a + 11], 22, -1990404162), n = C(n, i, r, o, e[a + 12], 7, 1804603682), o = C(o, n, i, r, e[a + 13], 12, -40341101), r = C(r, o, n, i, e[a + 14], 17, -1502002290), n = P(n, i = C(i, r, o, n, e[a + 15], 22, 1236535329), r, o, e[a + 1], 5, -165796510), o = P(o, n, i, r, e[a + 6], 9, -1069501632), r = P(r, o, n, i, e[a + 11], 14, 643717713), i = P(i, r, o, n, e[a], 20, -373897302), n = P(n, i, r, o, e[a + 5], 5, -701558691), o = P(o, n, i, r, e[a + 10], 9, 38016083), r = P(r, o, n, i, e[a + 15], 14, -660478335), i = P(i, r, o, n, e[a + 4], 20, -405537848), n = P(n, i, r, o, e[a + 9], 5, 568446438), o = P(o, n, i, r, e[a + 14], 9, -1019803690), r = P(r, o, n, i, e[a + 3], 14, -187363961), i = P(i, r, o, n, e[a + 8], 20, 1163531501), n = P(n, i, r, o, e[a + 13], 5, -1444681467), o = P(o, n, i, r, e[a + 2], 9, -51403784), r = P(r, o, n, i, e[a + 7], 14, 1735328473), n = k(n, i = P(i, r, o, n, e[a + 12], 20, -1926607734), r, o, e[a + 5], 4, -378558), o = k(o, n, i, r, e[a + 8], 11, -2022574463), r = k(r, o, n, i, e[a + 11], 16, 1839030562), i = k(i, r, o, n, e[a + 14], 23, -35309556), n = k(n, i, r, o, e[a + 1], 4, -1530992060), o = k(o, n, i, r, e[a + 4], 11, 1272893353), r = k(r, o, n, i, e[a + 7], 16, -155497632), i = k(i, r, o, n, e[a + 10], 23, -1094730640), n = k(n, i, r, o, e[a + 13], 4, 681279174), o = k(o, n, i, r, e[a], 11, -358537222), r = k(r, o, n, i, e[a + 3], 16, -722521979), i = k(i, r, o, n, e[a + 6], 23, 76029189), n = k(n, i, r, o, e[a + 9], 4, -640364487), o = k(o, n, i, r, e[a + 12], 11, -421815835), r = k(r, o, n, i, e[a + 15], 16, 530742520), n = L(n, i = k(i, r, o, n, e[a + 2], 23, -995338651), r, o, e[a], 6, -198630844), o = L(o, n, i, r, e[a + 7], 10, 1126891415), r = L(r, o, n, i, e[a + 14], 15, -1416354905), i = L(i, r, o, n, e[a + 5], 21, -57434055), n = L(n, i, r, o, e[a + 12], 6, 1700485571), o = L(o, n, i, r, e[a + 3], 10, -1894986606), r = L(r, o, n, i, e[a + 10], 15, -1051523), i = L(i, r, o, n, e[a + 1], 21, -2054922799), n = L(n, i, r, o, e[a + 8], 6, 1873313359), o = L(o, n, i, r, e[a + 15], 10, -30611744), r = L(r, o, n, i, e[a + 6], 15, -1560198380), i = L(i, r, o, n, e[a + 13], 21, 1309151649), n = L(n, i, r, o, e[a + 4], 6, -145523070), o = L(o, n, i, r, e[a + 11], 10, -1120210379), r = L(r, o, n, i, e[a + 2], 15, 718787259), i = L(i, r, o, n, e[a + 9], 21, -343485551), n = b(n, l), i = b(i, s), r = b(r, c), o = b(o, u);\n                        }\n                        return [\n                            n,\n                            i,\n                            r,\n                            o\n                        ];\n                    }(function(e) {\n                        if (0 === e.length) return [];\n                        for(var t = 8 * e.length, n = new Uint32Array(y(t)), i = 0; i < t; i += 8)n[i >> 5] |= (255 & e[i / 8]) << i % 32;\n                        return n;\n                    }(e), 8 * e.length));\n                }), S = function(e, t, n) {\n                    var i = (e = e || {}).random || (e.rng || o)();\n                    if (i[6] = 15 & i[6] | 64, i[8] = 63 & i[8] | 128, t) {\n                        n = n || 0;\n                        for(var r = 0; r < 16; ++r)t[n + r] = i[r];\n                        return t;\n                    }\n                    return u(i);\n                };\n                function _(e, t, n, i) {\n                    switch(e){\n                        case 0:\n                            return t & n ^ ~t & i;\n                        case 1:\n                        case 3:\n                            return t ^ n ^ i;\n                        case 2:\n                            return t & n ^ t & i ^ n & i;\n                    }\n                }\n                function T(e, t) {\n                    return e << t | e >>> 32 - t;\n                }\n                const O = m(\"v5\", 80, function(e) {\n                    var t = [\n                        1518500249,\n                        1859775393,\n                        2400959708,\n                        3395469782\n                    ], n = [\n                        1732584193,\n                        4023233417,\n                        2562383102,\n                        271733878,\n                        3285377520\n                    ];\n                    if (\"string\" == typeof e) {\n                        var i = unescape(encodeURIComponent(e));\n                        e = [];\n                        for(var r = 0; r < i.length; ++r)e.push(i.charCodeAt(r));\n                    } else Array.isArray(e) || (e = Array.prototype.slice.call(e));\n                    e.push(128);\n                    for(var o = e.length / 4 + 2, a = Math.ceil(o / 16), l = new Array(a), s = 0; s < a; ++s){\n                        for(var c = new Uint32Array(16), u = 0; u < 16; ++u)c[u] = e[64 * s + 4 * u] << 24 | e[64 * s + 4 * u + 1] << 16 | e[64 * s + 4 * u + 2] << 8 | e[64 * s + 4 * u + 3];\n                        l[s] = c;\n                    }\n                    l[a - 1][14] = 8 * (e.length - 1) / Math.pow(2, 32), l[a - 1][14] = Math.floor(l[a - 1][14]), l[a - 1][15] = 8 * (e.length - 1) & 4294967295;\n                    for(var d = 0; d < a; ++d){\n                        for(var p = new Uint32Array(80), v = 0; v < 16; ++v)p[v] = l[d][v];\n                        for(var f = 16; f < 80; ++f)p[f] = T(p[f - 3] ^ p[f - 8] ^ p[f - 14] ^ p[f - 16], 1);\n                        for(var h = n[0], g = n[1], m = n[2], y = n[3], b = n[4], w = 0; w < 80; ++w){\n                            var C = Math.floor(w / 20), P = T(h, 5) + _(C, g, m, y) + b + t[C] + p[w] >>> 0;\n                            b = y, y = m, m = T(g, 30) >>> 0, g = h, h = P;\n                        }\n                        n[0] = n[0] + h >>> 0, n[1] = n[1] + g >>> 0, n[2] = n[2] + m >>> 0, n[3] = n[3] + y >>> 0, n[4] = n[4] + b >>> 0;\n                    }\n                    return [\n                        n[0] >> 24 & 255,\n                        n[0] >> 16 & 255,\n                        n[0] >> 8 & 255,\n                        255 & n[0],\n                        n[1] >> 24 & 255,\n                        n[1] >> 16 & 255,\n                        n[1] >> 8 & 255,\n                        255 & n[1],\n                        n[2] >> 24 & 255,\n                        n[2] >> 16 & 255,\n                        n[2] >> 8 & 255,\n                        255 & n[2],\n                        n[3] >> 24 & 255,\n                        n[3] >> 16 & 255,\n                        n[3] >> 8 & 255,\n                        255 & n[3],\n                        n[4] >> 24 & 255,\n                        n[4] >> 16 & 255,\n                        n[4] >> 8 & 255,\n                        255 & n[4]\n                    ];\n                }), E = \"00000000-0000-0000-0000-000000000000\", U = function(e) {\n                    if (!l(e)) throw TypeError(\"Invalid UUID\");\n                    return parseInt(e.substr(14, 1), 16);\n                };\n            },\n            147: (e)=>{\n                \"use strict\";\n                e.exports = JSON.parse('{\"name\":\"@contentstack/live-preview-utils\",\"version\":\"1.4.0\",\"types\":\"dist/src/index.d.ts\",\"description\":\"Contentstack provides the Live Preview SDK to establish a communication channel between the various Contentstack SDKs and your website, transmitting  live changes to the preview pane.\",\"main\":\"dist/index.js\",\"files\":[\"dist\"],\"scripts\":{\"build\":\"webpack --config webpack.prod.js\",\"test\":\"jest\",\"test:coverage\":\"jest src --coverage --watchAll --coverageDirectory=\\\\\"coverage\\\\\"\",\"dev\":\"webpack --config webpack.dev.js\",\"prepare\":\"npm run build && husky install\",\"lint\":\"eslint src\",\"lint:fix\":\"eslint --fix\",\"prettier\":\"prettier src --check\",\"prettier:fix\":\"prettier src --write\",\"format\":\"npm run prettier:fix && npm run lint:fix\",\"docs\":\"typedoc --out docs --entryPointStrategy expand ./src\"},\"keywords\":[\"live-preview\"],\"author\":\"Contentstack\",\"license\":\"MIT\",\"devDependencies\":{\"@babel/core\":\"^7.2.2\",\"@babel/preset-env\":\"^7.3.1\",\"@testing-library/jest-dom\":\"^5.14.1\",\"@types/jest\":\"^27.0.1\",\"@types/mustache\":\"^4.2.2\",\"@types/uuid\":\"^8.3.1\",\"@typescript-eslint/eslint-plugin\":\"^4.31.1\",\"@typescript-eslint/parser\":\"^4.31.1\",\"babel-loader\":\"^8.0.5\",\"css-loader\":\"^5.2.2\",\"eslint\":\"^7.32.0\",\"eslint-config-prettier\":\"^8.6.0\",\"husky\":\"^8.0.0\",\"jest\":\"^27.2.0\",\"jest-fetch-mock\":\"^3.0.3\",\"mini-css-extract-plugin\":\"^2.3.0\",\"prettier\":\"^2.8.4\",\"prettier-eslint\":\"^15.0.1\",\"style-loader\":\"^2.0.0\",\"ts-jest\":\"^27.0.5\",\"ts-loader\":\"^9.4.2\",\"typedoc\":\"^0.23.25\",\"typescript\":\"^4.4.3\",\"webpack\":\"^5.53.0\",\"webpack-cli\":\"^4.8.0\",\"webpack-dev-server\":\"^4.7.4\",\"webpack-merge\":\"^5.8.0\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/contentstack/live-preview-sdk.git\"},\"dependencies\":{\"just-camel-case\":\"^4.0.2\",\"morphdom\":\"^2.6.1\",\"mustache\":\"^4.2.0\",\"uuid\":\"^8.3.2\"},\"lint-staged\":{\"src/**/*.{ts,css,md}\":[\"npm run prettier:fix\"]}}');\n            }\n        }, t = {};\n        function n(i) {\n            var r = t[i];\n            if (void 0 !== r) return r.exports;\n            var o = t[i] = {\n                exports: {}\n            };\n            return e[i].call(o.exports, o, o.exports, n), o.exports;\n        }\n        return n.d = (e, t)=>{\n            for(var i in t)n.o(t, i) && !n.o(e, i) && Object.defineProperty(e, i, {\n                enumerable: !0,\n                get: t[i]\n            });\n        }, n.o = (e, t)=>Object.prototype.hasOwnProperty.call(e, t), n.r = (e)=>{\n            \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n                value: \"Module\"\n            }), Object.defineProperty(e, \"__esModule\", {\n                value: !0\n            });\n        }, n(607);\n    })()); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/live-preview-utils/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/utils/dist/index.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/@contentstack/utils/dist/index.es.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nfunction createMetadata(attribute) {\n    return {\n        text: attribute[\"#text\"],\n        itemUid: attribute[\"data-sys-entry-uid\"] || attribute[\"data-sys-asset-uid\"],\n        itemType: attribute.type,\n        styleType: attribute[\"sys-style-type\"],\n        attributes: attribute,\n        contentTypeUid: attribute[\"data-sys-content-type-uid\"]\n    };\n}\nfunction nodeToMetadata(attribute, textNode) {\n    return {\n        text: textNode.text,\n        itemUid: attribute[\"entry-uid\"] || attribute[\"asset-uid\"],\n        itemType: attribute.type,\n        styleType: attribute[\"display-type\"],\n        attributes: attribute,\n        contentTypeUid: attribute[\"content-type-uid\"]\n    };\n}\nfunction attributeToString(attributes) {\n    var result = \"\";\n    var _loop_1 = function(key) {\n        if (Object.prototype.hasOwnProperty.call(attributes, key)) {\n            var element = attributes[key];\n            if (element instanceof Array) {\n                var elementString_1 = \"\";\n                var isFirst_1 = true;\n                element.forEach(function(value) {\n                    if (isFirst_1) {\n                        elementString_1 += \"\".concat(value);\n                        isFirst_1 = false;\n                    } else {\n                        elementString_1 += \", \".concat(value);\n                    }\n                });\n                element = elementString_1;\n            } else if (typeof element === \"object\") {\n                var elementString = \"\";\n                for(var elementKey in element){\n                    if (Object.prototype.hasOwnProperty.call(element, elementKey)) {\n                        var value = element[elementKey];\n                        elementString += \"\".concat(elementKey, \":\").concat(value, \"; \");\n                    }\n                }\n                element = elementString;\n            }\n            result += \" \".concat(key, '=\"').concat(element, '\"');\n        }\n    };\n    for(var key in attributes){\n        _loop_1(key);\n    }\n    return result;\n}\nvar StyleType;\n(function(StyleType) {\n    StyleType[\"BLOCK\"] = \"block\";\n    StyleType[\"INLINE\"] = \"inline\";\n    StyleType[\"LINK\"] = \"link\";\n    StyleType[\"DISPLAY\"] = \"display\";\n    StyleType[\"DOWNLOAD\"] = \"download\";\n})(StyleType || (StyleType = {}));\nvar StyleType$1 = StyleType;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction elementToJson(element) {\n    var obj = {};\n    for(var i = 0; i < element.attributes.length; i++){\n        obj[element.attributes.item(i).name] = element.attributes.item(i).value;\n    }\n    element.childNodes.forEach(function(chileNode) {\n        var node = chileNode;\n        obj = __assign(__assign({}, obj), parseElement(node));\n    });\n    return obj;\n}\nfunction parseElement(node) {\n    var obj = {};\n    if (node.nodeType === 3) {\n        obj[\"#text\"] = node.textContent;\n    } else if (node.nodeType === 1) {\n        obj[node.nodeName.toLowerCase()] = elementToJson(node);\n    }\n    return obj;\n}\nvar frameflag = \"documentfragmentcontainer\";\nString.prototype.forEachEmbeddedItem = function(callbackfn) {\n    var str = \"<\".concat(frameflag, \">\").concat(this.toString(), \"</\").concat(frameflag, \">\");\n    var root = new DOMParser().parseFromString(str, \"text/html\");\n    var embeddedEntries = root.querySelectorAll(\".embedded-entry\");\n    embeddedEntries.forEach(function(element) {\n        callbackfn(element.outerHTML, createMetadata(elementToJson(element)));\n    });\n    var embeddedAsset = root.querySelectorAll(\".embedded-asset\");\n    embeddedAsset.forEach(function(element) {\n        callbackfn(element.outerHTML, createMetadata(elementToJson(element)));\n    });\n};\nvar _a$1;\nvar defaultOptions = (_a$1 = {}, _a$1[StyleType$1.BLOCK] = function(item) {\n    return \"<div><p>\".concat(item.title || item.uid, \"</p><p>Content type: <span>\").concat(item._content_type_uid || (item.system ? item.system.content_type_uid : \"\"), \"</span></p></div>\");\n}, _a$1[StyleType$1.INLINE] = function(item) {\n    return \"<span>\".concat(item.title || item.uid, \"</span>\");\n}, _a$1[StyleType$1.LINK] = function(item, metadata) {\n    return '<a href=\"'.concat(item.url, '\">').concat(metadata.text || item.title || item.uid || (item.system ? item.system.uid : \"\"), \"</a>\");\n}, _a$1[StyleType$1.DISPLAY] = function(item, metadata) {\n    return '<img src=\"'.concat(item.url, '\" alt=\"').concat(metadata.attributes.alt || item.title || item.filename || item.uid || (item.system ? item.system.uid : \"\"), '\" />');\n}, _a$1[StyleType$1.DOWNLOAD] = function(item, metadata) {\n    return '<a href=\"'.concat(item.url, '\">').concat(metadata.text || item.title || item.uid || (item.system ? item.system.content_type_uid : \"\"), \"</a>\");\n}, _a$1);\n// This function will find Embedded object present in string\nfunction findEmbeddedEntry(uid, contentTypeUid, embeddeditems) {\n    if (embeddeditems === void 0) {\n        embeddeditems = [];\n    }\n    return embeddeditems.filter(function(entry) {\n        if (entry.uid && entry.uid === uid && entry._content_type_uid === contentTypeUid || entry.system && entry.system.uid === uid && entry.system.content_type_uid === contentTypeUid) {\n            return entry;\n        }\n    });\n}\nfunction findEmbeddedAsset(uid, embeddedAssets) {\n    if (embeddedAssets === void 0) {\n        embeddedAssets = [];\n    }\n    return embeddedAssets.filter(function(asset) {\n        if (asset.uid && asset.uid === uid || asset.system && asset.system.uid === uid) {\n            return asset;\n        }\n    });\n}\nfunction findGQLEmbeddedItems(metadata, items) {\n    if (metadata.itemType === \"entry\") {\n        return findEmbeddedEntry(metadata.itemUid, metadata.contentTypeUid, items);\n    } else {\n        return findEmbeddedAsset(metadata.itemUid, items);\n    }\n}\nfunction findEmbeddedItems(object, entry) {\n    if (object && object !== undefined && entry && entry !== undefined) {\n        if (entry._embedded_items !== undefined) {\n            var entryEmbedable = entry;\n            var items = Object.values(entryEmbedable._embedded_items || []).reduce(function(accumulator, value) {\n                return accumulator.concat(value);\n            }, []);\n            return findGQLEmbeddedItems(object, items);\n        }\n    }\n    return [];\n}\nfunction findRenderString(item, metadata, renderOptions) {\n    if (!item && item === undefined || !metadata && metadata === undefined) {\n        return \"\";\n    }\n    if (renderOptions && renderOptions[metadata.styleType] !== undefined) {\n        var renderFunction = renderOptions[metadata.styleType];\n        if (metadata.attributes[\"data-sys-content-type-uid\"] !== undefined && typeof renderFunction !== \"function\" && renderFunction[metadata.attributes[\"data-sys-content-type-uid\"]] !== undefined) {\n            return renderFunction[metadata.attributes[\"data-sys-content-type-uid\"]](item, metadata);\n        } else if (metadata.attributes[\"data-sys-content-type-uid\"] !== undefined && typeof renderFunction !== \"function\" && renderFunction.$default !== undefined) {\n            return renderFunction.$default(item, metadata);\n        } else if (metadata.contentTypeUid !== undefined && typeof renderFunction !== \"function\" && renderFunction[metadata.contentTypeUid] !== undefined) {\n            return renderFunction[metadata.contentTypeUid](item, metadata);\n        } else if (metadata.contentTypeUid !== undefined && typeof renderFunction !== \"function\" && renderFunction.$default !== undefined) {\n            return renderFunction.$default(item, metadata);\n        } else if (typeof renderFunction === \"function\") {\n            return renderFunction(item, metadata);\n        }\n    }\n    var defaultRenderFunction = defaultOptions[metadata.styleType];\n    return defaultRenderFunction(item, metadata);\n}\nfunction findRenderContent(keyPaths, entry, render) {\n    getContent(keyPaths.split(\".\"), entry, render);\n}\nfunction getContent(keys, object, render) {\n    if (keys) {\n        var key = keys[0];\n        if (keys.length === 1 && object[key]) {\n            object[key] = render(object[key]);\n        } else if (keys.length > 0) {\n            if (object[key]) {\n                var newKeys = keys.slice(1);\n                if (Array.isArray(object[key])) {\n                    // tslint:disable-next-line: prefer-for-of\n                    for(var _i = 0, _a = object[key]; _i < _a.length; _i++){\n                        var objKey = _a[_i];\n                        getContent(newKeys, objKey, render);\n                    }\n                } else if (typeof object[key] === \"object\") {\n                    getContent(newKeys, object[key], render);\n                }\n            }\n        }\n    }\n}\n/**\r\n *\r\n * @param {EntryEmbedable| EntryEmbedable[]} entry - Objects that contains RTE with embedded objects\r\n * @param {string[]} paths - Key paths for RTE contents in Entry object\r\n * @param {RenderOption?} renderOption -  Optional render options to render content\r\n */ function render(option) {\n    function findContent(path, entry) {\n        findRenderContent(path, entry, function(content) {\n            return renderContent(content, {\n                entry: entry,\n                renderOption: option.renderOption\n            });\n        });\n    }\n    function findAndRender(entry) {\n        if (!option.paths || option.paths.length === 0) {\n            Object.keys(__assign({}, entry._embedded_items)).forEach(function(path) {\n                findContent(path, entry);\n            });\n        } else {\n            option.paths.forEach(function(path) {\n                findContent(path, entry);\n            });\n        }\n    }\n    if (option.entry instanceof Array) {\n        option.entry.forEach(function(entry) {\n            findAndRender(entry);\n        });\n    } else {\n        findAndRender(option.entry);\n    }\n}\n/**\r\n *\r\n * @param {string | string[]} content - RTE content to render\r\n * @param {EntryEmbedable} options.entry - Entry object containing embedded objects\r\n * @param {RenderOption?} options.renderOption - Optional render options to render content\r\n */ function renderContent(content, option) {\n    // return blank if content not present\n    if (!content || content === undefined) {\n        return \"\";\n    }\n    // render content of type string\n    if (typeof content === \"string\") {\n        var contentToReplace_1 = content;\n        content.forEachEmbeddedItem(function(embededObjectTag, object) {\n            contentToReplace_1 = findAndReplaceEmbeddedItem(contentToReplace_1, embededObjectTag, object, option);\n        });\n        return contentToReplace_1;\n    }\n    // render content of type array of string\n    var resultContent = [];\n    content.forEach(function(element) {\n        resultContent.push(renderContent(element, option));\n    });\n    return resultContent;\n}\nfunction findAndReplaceEmbeddedItem(content, embededObjectTag, metadata, option) {\n    var embeddedObjects = findEmbeddedItems(metadata, option.entry);\n    var renderString = findRenderString(embeddedObjects[0], metadata, option.renderOption);\n    return content.replace(embededObjectTag, renderString);\n}\nvar NodeType;\n(function(NodeType) {\n    NodeType[\"DOCUMENT\"] = \"doc\";\n    NodeType[\"PARAGRAPH\"] = \"p\";\n    NodeType[\"LINK\"] = \"a\";\n    NodeType[\"IMAGE\"] = \"img\";\n    NodeType[\"EMBED\"] = \"embed\";\n    NodeType[\"HEADING_1\"] = \"h1\";\n    NodeType[\"HEADING_2\"] = \"h2\";\n    NodeType[\"HEADING_3\"] = \"h3\";\n    NodeType[\"HEADING_4\"] = \"h4\";\n    NodeType[\"HEADING_5\"] = \"h5\";\n    NodeType[\"HEADING_6\"] = \"h6\";\n    NodeType[\"ORDER_LIST\"] = \"ol\";\n    NodeType[\"UNORDER_LIST\"] = \"ul\";\n    NodeType[\"LIST_ITEM\"] = \"li\";\n    NodeType[\"FRAGMENT\"] = \"fragment\";\n    NodeType[\"HR\"] = \"hr\";\n    NodeType[\"TABLE\"] = \"table\";\n    NodeType[\"TABLE_HEADER\"] = \"thead\";\n    NodeType[\"TABLE_BODY\"] = \"tbody\";\n    NodeType[\"TABLE_FOOTER\"] = \"tfoot\";\n    NodeType[\"TABLE_ROW\"] = \"tr\";\n    NodeType[\"TABLE_HEAD\"] = \"th\";\n    NodeType[\"TABLE_DATA\"] = \"td\";\n    NodeType[\"BLOCK_QUOTE\"] = \"blockquote\";\n    NodeType[\"CODE\"] = \"code\";\n    NodeType[\"TEXT\"] = \"text\";\n    NodeType[\"REFERENCE\"] = \"reference\";\n})(NodeType || (NodeType = {}));\nvar NodeType$1 = NodeType;\nvar MarkType;\n(function(MarkType) {\n    MarkType[\"BOLD\"] = \"bold\";\n    MarkType[\"ITALIC\"] = \"italic\";\n    MarkType[\"UNDERLINE\"] = \"underline\";\n    MarkType[\"CLASSNAME_OR_ID\"] = \"classnameOrId\";\n    MarkType[\"STRIKE_THROUGH\"] = \"strikethrough\";\n    MarkType[\"INLINE_CODE\"] = \"inlineCode\";\n    MarkType[\"SUBSCRIPT\"] = \"subscript\";\n    MarkType[\"SUPERSCRIPT\"] = \"superscript\";\n    MarkType[\"BREAK\"] = \"break\";\n})(MarkType || (MarkType = {}));\nvar MarkType$1 = MarkType;\nvar Node = /** @class */ function() {\n    function Node() {}\n    return Node;\n}();\nvar Document = /** @class */ function(_super) {\n    __extends(Document, _super);\n    function Document() {\n        var _this = _super.call(this) || this;\n        _this.type = NodeType$1.DOCUMENT;\n        return _this;\n    }\n    return Document;\n}(Node);\nvar TextNode = /** @class */ function(_super) {\n    __extends(TextNode, _super);\n    function TextNode(text) {\n        var _this = _super.call(this) || this;\n        _this.text = text;\n        return _this;\n    }\n    return TextNode;\n}(Node);\nvar _a;\nvar defaultNodeOption = (_a = {}, _a[NodeType$1.DOCUMENT] = function(node) {\n    return \"\";\n}, _a[NodeType$1.PARAGRAPH] = function(node, next) {\n    return \"<p\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</p>\");\n}, _a[NodeType$1.LINK] = function(node, next) {\n    if (node.attrs.target) {\n        return \"<a\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' href=\"').concat(node.attrs.href || node.attrs.url, '\" target=\"').concat(node.attrs.target, '\">').concat(next(node.children), \"</a>\");\n    }\n    return \"<a\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' href=\"').concat(node.attrs.href || node.attrs.url, '\">').concat(next(node.children), \"</a>\");\n}, _a[NodeType$1.IMAGE] = function(node, next) {\n    return \"<img\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' src=\"').concat(node.attrs.src || node.attrs.url, '\" />').concat(next(node.children));\n}, _a[NodeType$1.EMBED] = function(node, next) {\n    return \"<iframe\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' src=\"').concat(node.attrs.src || node.attrs.url, '\">').concat(next(node.children), \"</iframe>\");\n}, _a[NodeType$1.HEADING_1] = function(node, next) {\n    return \"<h1\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h1>\");\n}, _a[NodeType$1.HEADING_2] = function(node, next) {\n    return \"<h2\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h2>\");\n}, _a[NodeType$1.HEADING_3] = function(node, next) {\n    return \"<h3\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h3>\");\n}, _a[NodeType$1.HEADING_4] = function(node, next) {\n    return \"<h4\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h4>\");\n}, _a[NodeType$1.HEADING_5] = function(node, next) {\n    return \"<h5\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h5>\");\n}, _a[NodeType$1.HEADING_6] = function(node, next) {\n    return \"<h6\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</h6>\");\n}, _a[NodeType$1.ORDER_LIST] = function(node, next) {\n    return \"<ol\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</ol>\");\n}, _a[NodeType$1.FRAGMENT] = function(node, next) {\n    return \"<fragment>\".concat(next(node.children), \"</fragment>\");\n}, _a[NodeType$1.UNORDER_LIST] = function(node, next) {\n    return \"<ul\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</ul>\");\n}, _a[NodeType$1.LIST_ITEM] = function(node, next) {\n    return \"<li\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</li>\");\n}, _a[NodeType$1.HR] = function(node, next) {\n    return \"<hr>\";\n}, _a[NodeType$1.TABLE] = function(node, next) {\n    return \"<table\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</table>\");\n}, _a[NodeType$1.TABLE_HEADER] = function(node, next) {\n    return \"<thead\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</thead>\");\n}, _a[NodeType$1.TABLE_BODY] = function(node, next) {\n    return \"<tbody\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</tbody>\");\n}, _a[NodeType$1.TABLE_FOOTER] = function(node, next) {\n    return \"<tfoot\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</tfoot>\");\n}, _a[NodeType$1.TABLE_ROW] = function(node, next) {\n    return \"<tr\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</tr>\");\n}, _a[NodeType$1.TABLE_HEAD] = function(node, next) {\n    return \"<th\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</th>\");\n}, _a[NodeType$1.TABLE_DATA] = function(node, next) {\n    return \"<td\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</td>\");\n}, _a[NodeType$1.BLOCK_QUOTE] = function(node, next) {\n    return \"<blockquote\".concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</blockquote>\");\n}, _a[NodeType$1.CODE] = function(node, next) {\n    return \"<code\".concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", \">\").concat(next(node.children), \"</code>\");\n}, _a[\"reference\"] = function(node, next) {\n    if (node.attrs.type === \"asset\") {\n        return \"<img\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' src=\"').concat(node.attrs[\"asset-link\"], '\" />');\n    }\n    return \"\";\n}, _a[\"default\"] = function(node, next) {\n    return next(node.children);\n}, _a[MarkType$1.BOLD] = function(text) {\n    return \"<strong>\".concat(text, \"</strong>\");\n}, _a[MarkType$1.ITALIC] = function(text) {\n    return \"<em>\".concat(text, \"</em>\");\n}, _a[MarkType$1.UNDERLINE] = function(text) {\n    return \"<u>\".concat(text, \"</u>\");\n}, _a[MarkType$1.STRIKE_THROUGH] = function(text) {\n    return \"<strike>\".concat(text, \"</strike>\");\n}, _a[MarkType$1.INLINE_CODE] = function(text) {\n    return \"<span>\".concat(text, \"</span>\");\n}, _a[MarkType$1.SUBSCRIPT] = function(text) {\n    return \"<sub>\".concat(text, \"</sub>\");\n}, _a[MarkType$1.SUPERSCRIPT] = function(text) {\n    return \"<sup>\".concat(text, \"</sup>\");\n}, _a[MarkType$1.BREAK] = function(text) {\n    return \"<br />\".concat(text);\n}, _a[MarkType$1.CLASSNAME_OR_ID] = function(text, classname, id) {\n    return \"<span\".concat(classname ? ' class=\"'.concat(classname, '\"') : \"\").concat(id ? ' id=\"'.concat(id, '\"') : \"\", \">\").concat(text, \"</span>\");\n}, _a);\nfunction enumerate(entries, process) {\n    for(var _i = 0, entries_1 = entries; _i < entries_1.length; _i++){\n        var entry = entries_1[_i];\n        process(entry);\n    }\n}\nfunction enumerateContents(content, renderOption, renderEmbed) {\n    if (!(content instanceof Array) && content.type !== \"doc\") {\n        return content;\n    }\n    if (content instanceof Array) {\n        var result_1 = [];\n        content.forEach(function(doc) {\n            result_1.push(enumerateContents(doc, renderOption, renderEmbed));\n        });\n        return result_1;\n    }\n    var commonRenderOption = __assign(__assign({}, defaultNodeOption), renderOption);\n    return nodeChildrenToHTML(content.children, commonRenderOption, renderEmbed);\n}\nfunction textNodeToHTML(node, renderOption) {\n    var text = node.text;\n    if (node.classname || node.id) {\n        text = renderOption[MarkType$1.CLASSNAME_OR_ID](text, node.classname, node.id);\n    }\n    if (node.break) {\n        text = renderOption[MarkType$1.BREAK](text);\n    }\n    if (node.superscript) {\n        text = renderOption[MarkType$1.SUPERSCRIPT](text);\n    }\n    if (node.subscript) {\n        text = renderOption[MarkType$1.SUBSCRIPT](text);\n    }\n    if (node.inlineCode) {\n        text = renderOption[MarkType$1.INLINE_CODE](text);\n    }\n    if (node.strikethrough) {\n        text = renderOption[MarkType$1.STRIKE_THROUGH](text);\n    }\n    if (node.underline) {\n        text = renderOption[MarkType$1.UNDERLINE](text);\n    }\n    if (node.italic) {\n        text = renderOption[MarkType$1.ITALIC](text);\n    }\n    if (node.bold) {\n        text = renderOption[MarkType$1.BOLD](text);\n    }\n    return text;\n}\nfunction referenceToHTML(node, renderOption, renderEmbed) {\n    if (node.attrs.type === \"entry\" && node.attrs[\"display-type\"] === \"link\") {\n        var entryText = node.children ? nodeChildrenToHTML(node.children, renderOption, renderEmbed) : \"\";\n        if (node.attrs.target) {\n            return \"<a\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' href=\"').concat(node.attrs.href || node.attrs.url, '\" target=\"').concat(node.attrs.target, '\">').concat(entryText, \"</a>\");\n        }\n        return \"<a\".concat(node.attrs.style ? ' style=\"'.concat(node.attrs.style, '\"') : \"\").concat(node.attrs.class ? ' class=\"'.concat(node.attrs.class, '\"') : \"\").concat(node.attrs.id ? ' id=\"'.concat(node.attrs.id, '\"') : \"\", ' href=\"').concat(node.attrs.href || node.attrs.url, '\">').concat(entryText, \"</a>\");\n    }\n    function sendToRenderOption(referenceNode) {\n        return renderOption[referenceNode.type](referenceNode, undefined);\n    }\n    if (!renderEmbed && renderOption[node.type] !== undefined) {\n        return sendToRenderOption(node);\n    }\n    if (!renderEmbed) {\n        return \"\";\n    }\n    var metadata = nodeToMetadata(node.attrs, node.children && node.children.length > 0 ? node.children[0] : {});\n    var item = renderEmbed(metadata);\n    if (!item && renderOption[node.type] !== undefined) {\n        return sendToRenderOption(node);\n    }\n    return findRenderString(item, metadata, renderOption);\n}\nfunction nodeChildrenToHTML(nodes, renderOption, renderEmbed) {\n    return nodes.map(function(node) {\n        return nodeToHTML(node, renderOption, renderEmbed);\n    }).join(\"\");\n}\nfunction styleObjectToString(styleObj) {\n    if (!styleObj) return \"\";\n    if (typeof styleObj === \"string\") {\n        return styleObj;\n    }\n    var styleString = \"\";\n    for(var key in styleObj){\n        if (styleObj.hasOwnProperty(key)) {\n            var value = styleObj[key];\n            styleString += \"\".concat(key, \":\").concat(value, \";\");\n        }\n    }\n    return styleString;\n}\nfunction nodeToHTML(node, renderOption, renderEmbed) {\n    var _a;\n    if ((_a = node === null || node === void 0 ? void 0 : node.attrs) === null || _a === void 0 ? void 0 : _a.style) {\n        node.attrs.style = styleObjectToString(node.attrs.style);\n    }\n    if (!node.type) {\n        return textNodeToHTML(node, renderOption);\n    } else if (node.type === \"reference\") {\n        return referenceToHTML(node, renderOption, renderEmbed);\n    } else {\n        var next = function(nodes) {\n            return nodeChildrenToHTML(nodes, renderOption, renderEmbed);\n        };\n        if (renderOption[node.type] !== undefined) {\n            return renderOption[node.type](node, next);\n        } else {\n            return renderOption.default(node, next);\n        }\n    }\n}\nfunction jsonToHTML$1(option) {\n    if (option.entry instanceof Array) {\n        enumerate(option.entry, function(entry) {\n            jsonToHTML$1({\n                entry: entry,\n                paths: option.paths,\n                renderOption: option.renderOption\n            });\n        });\n    } else {\n        enumerateKeys$1({\n            entry: option.entry,\n            paths: option.paths,\n            renderOption: option.renderOption\n        });\n    }\n}\nfunction enumerateKeys$1(option) {\n    for(var _i = 0, _a = option.paths; _i < _a.length; _i++){\n        var key = _a[_i];\n        findRenderContent(key, option.entry, function(content) {\n            return enumerateContents(content, option.renderOption, function(metadata) {\n                return findEmbeddedItems(metadata, option.entry)[0];\n            });\n        });\n    }\n}\nfunction jsonToHTML(option) {\n    if (option.entry instanceof Array) {\n        enumerate(option.entry, function(entry) {\n            jsonToHTML({\n                entry: entry,\n                paths: option.paths,\n                renderOption: option.renderOption\n            });\n        });\n    } else {\n        enumerateKeys({\n            entry: option.entry,\n            paths: option.paths,\n            renderOption: option.renderOption\n        });\n    }\n}\nfunction enumerateKeys(option) {\n    for(var _i = 0, _a = option.paths; _i < _a.length; _i++){\n        var key = _a[_i];\n        findRenderContent(key, option.entry, function(content) {\n            if (content && content.json) {\n                var edges = content.embedded_itemsConnection ? content.embedded_itemsConnection.edges : [];\n                var items_1 = Object.values(edges || []).reduce(function(accumulator, value) {\n                    return accumulator.concat(value.node);\n                }, []);\n                return enumerateContents(content.json, option.renderOption, function(metadata) {\n                    return findGQLEmbeddedItems(metadata, items_1)[0];\n                });\n            }\n            return content;\n        });\n    }\n}\nvar GQL = {\n    jsonToHTML: jsonToHTML\n};\nfunction addTags(entry, contentTypeUid, tagsAsObject, locale) {\n    if (locale === void 0) {\n        locale = \"en-us\";\n    }\n    if (entry) entry.$ = getTag(entry, \"\".concat(contentTypeUid, \".\").concat(entry.uid, \".\").concat(locale), tagsAsObject, locale);\n}\nfunction getTag(content, prefix, tagsAsObject, locale) {\n    var tags = {};\n    Object.entries(content).forEach(function(_a) {\n        var key = _a[0], value = _a[1];\n        if (key === \"$\") return;\n        switch(typeof value){\n            case \"object\":\n                if (Array.isArray(value)) {\n                    value.forEach(function(obj, index) {\n                        var childKey = \"\".concat(key, \"__\").concat(index);\n                        var parentKey = \"\".concat(key, \"__parent\");\n                        /**\r\n                         * Indexes of array are handled here\r\n                         * {\r\n                         *  \"array\": [\"hello\", \"world\"],\r\n                         *  \"$\": {\r\n                         *      \"array\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array\"}\r\n                         *      \"array__0\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array.0\"}\r\n                         *      \"array__1\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array.1\"}\r\n                         *  }\r\n                         * }\r\n                         */ tags[childKey] = getTagsValue(\"\".concat(prefix, \".\").concat(key, \".\").concat(index), tagsAsObject);\n                        tags[parentKey] = getParentTagsValue(\"\".concat(prefix, \".\").concat(key), tagsAsObject);\n                        if (typeof obj !== \"undefined\" && obj !== null && obj._content_type_uid !== undefined && obj.uid !== undefined) {\n                            /**\r\n                             * References are handled here\r\n                             * {\r\n                             *  \"reference\": [{\r\n                             *      \"title\": \"title\",\r\n                             *      \"uid\": \"ref_uid\",\r\n                             *      \"_content_type_uid\": \"ref_content_type_uid\",\r\n                             *     \"$\": {\"title\": {\"data-cslp\": \"ref_content_type_uid.ref_uid.locale.title\"}}\r\n                             *  }]\r\n                             * }\r\n                             */ value[index].$ = getTag(obj, \"\".concat(obj._content_type_uid, \".\").concat(obj.uid, \".\").concat(obj.locale || locale), tagsAsObject, locale);\n                        } else if (typeof obj === \"object\") {\n                            /**\r\n                             * Objects inside Array like modular blocks are handled here\r\n                             * {\r\n                             *  \"array\": [{\r\n                             *    \"title\": \"title\",\r\n                             *    \"$\": {\"title\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array.0.title\"}}\r\n                             *  }]\r\n                             * }\r\n                             */ obj.$ = getTag(obj, \"\".concat(prefix, \".\").concat(key, \".\").concat(index), tagsAsObject, locale);\n                        }\n                    });\n                } else {\n                    if (value) {\n                        /**\r\n                         * Objects are handled here\r\n                         * {\r\n                         *  \"object\": {\r\n                         *      \"title\": \"title\",\r\n                         *      \"$\": {\r\n                         *          \"title\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.object.title\"}\r\n                         *      }\r\n                         *  },\r\n                         * }\r\n                         */ value.$ = getTag(value, \"\".concat(prefix, \".\").concat(key), tagsAsObject, locale);\n                    }\n                }\n                /**\r\n                 * {\r\n                 *  \"object\": {\r\n                 *      \"title\": \"title\",\r\n                 *  },\r\n                 *  \"array\": [\"hello\", \"world\"]\r\n                 *  \"$\": {\r\n                 *      \"object\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.object\"},\r\n                 *      \"array\": {\"data-cslp\": \"content_type_uid.entry_uid.locale.array\"}\r\n                 *  }\r\n                 * }\r\n                 */ tags[key] = getTagsValue(\"\".concat(prefix, \".\").concat(key), tagsAsObject);\n                break;\n            default:\n                /**\r\n                 * All primitive values are handled here\r\n                 * {\r\n                 *  \"title\": \"title\",\r\n                 *  \"$\": {title: {\"data-cslp\": \"content_type_uid.entry_uid.locale.title\"}}\r\n                 * }\r\n                 */ tags[key] = getTagsValue(\"\".concat(prefix, \".\").concat(key), tagsAsObject);\n        }\n    });\n    return tags;\n}\nfunction getTagsValue(dataValue, tagsAsObject) {\n    if (tagsAsObject) {\n        return {\n            \"data-cslp\": dataValue\n        };\n    } else {\n        return \"data-cslp=\".concat(dataValue);\n    }\n}\nfunction getParentTagsValue(dataValue, tagsAsObject) {\n    if (tagsAsObject) {\n        return {\n            \"data-cslp-parent-field\": dataValue\n        };\n    } else {\n        return \"data-cslp-parent-field=\".concat(dataValue);\n    }\n}\nexports.Document = Document;\nexports.GQL = GQL;\nexports.MarkType = MarkType$1;\nexports.Node = Node;\nexports.NodeType = NodeType$1;\nexports.StyleType = StyleType$1;\nexports.TextNode = TextNode;\nexports.addEditableTags = addTags;\nexports.attributeToString = attributeToString;\nexports.jsonToHTML = jsonToHTML$1;\nexports.render = render;\nexports.renderContent = renderContent; //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/utils/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/contentstack-core */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-core.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/types */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/contentstack-error */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-error.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/request */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/request.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/retryPolicy/delivery-sdk-handlers */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/retryPolicy/delivery-sdk-handlers.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyw4R0FBeUIsR0FBR0g7QUFDekRFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsc0ZBQWEsR0FBR0g7QUFDN0NFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsZ0hBQTBCLEdBQUdIO0FBQzFERSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLDBGQUFlLEdBQUdIO0FBQy9DRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLDhJQUF5QyxHQUFHSCxVQUN6RSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9pbmRleC5qcz9kNjk2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2xpYi9jb250ZW50c3RhY2stY29yZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvdHlwZXNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbGliL2NvbnRlbnRzdGFjay1lcnJvclwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvcmVxdWVzdFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvcmV0cnlQb2xpY3kvZGVsaXZlcnktc2RrLWhhbmRsZXJzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-core.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-core.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.httpClient = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst lodash_1 = __webpack_require__(/*! lodash */ \"(ssr)/./node_modules/lodash/lodash.js\");\nconst param_serializer_1 = __webpack_require__(/*! ./param-serializer */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/param-serializer.js\");\nconst axios_1 = tslib_1.__importDefault(__webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/dist/node/axios.cjs\"));\nfunction httpClient(options) {\n    const defaultConfig = {\n        insecure: false,\n        retryOnError: true,\n        headers: {},\n        basePath: \"\",\n        proxy: false,\n        httpAgent: false,\n        httpsAgent: false,\n        timeout: 30000,\n        logHandler: (level, data)=>{\n            if (level === \"error\" && data) {\n                const title = [\n                    data.name,\n                    data.message\n                ].filter((a)=>a).join(\" - \");\n                console.error(`[error] ${title}`);\n                return;\n            }\n            console.log(`[${level}] ${data}`);\n        },\n        retryCondition: (error)=>{\n            if (error.response && error.response.status === 429) {\n                return true;\n            }\n            return false;\n        },\n        versioningStrategy: \"path\"\n    };\n    const config = Object.assign(Object.assign({}, defaultConfig), (0, lodash_1.cloneDeep)(options));\n    if (config.apiKey && config.headers) {\n        config.headers.api_key = config.apiKey;\n    }\n    if (config.accessToken && config.headers) {\n        config.headers.access_token = config.accessToken;\n    }\n    const protocol = config.insecure ? \"http\" : \"https\";\n    const hostname = config.defaultHostname;\n    const port = config.port || 443;\n    const version = config.version || \"v3\";\n    const baseURL = config.endpoint || `${protocol}://${hostname}:${port}${config.basePath}/${version}`;\n    const instance = axios_1.default.create(Object.assign(Object.assign({\n        // Axios\n        baseURL\n    }, config), {\n        paramsSerializer: {\n            serialize: param_serializer_1.serialize\n        }\n    }));\n    instance.httpClientParams = options;\n    if (config.onError) {\n        instance.interceptors.response.use((response)=>response, config.onError);\n    }\n    return instance;\n}\nexports.httpClient = httpClient; //# sourceMappingURL=contentstack-core.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvY29udGVudHN0YWNrLWNvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtCQUFrQixHQUFHLEtBQUs7QUFDMUIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsV0FBV0QsbUJBQU9BLENBQUMscURBQVE7QUFDakMsTUFBTUUscUJBQXFCRixtQkFBT0EsQ0FBQyx3R0FBb0I7QUFDdkQsTUFBTUcsVUFBVUosUUFBUUssZUFBZSxDQUFDSixtQkFBT0EsQ0FBQyw2REFBTztBQUN2RCxTQUFTRixXQUFXTyxPQUFPO0lBQ3ZCLE1BQU1DLGdCQUFnQjtRQUNsQkMsVUFBVTtRQUNWQyxjQUFjO1FBQ2RDLFNBQVMsQ0FBQztRQUNWQyxVQUFVO1FBQ1ZDLE9BQU87UUFDUEMsV0FBVztRQUNYQyxZQUFZO1FBQ1pDLFNBQVM7UUFDVEMsWUFBWSxDQUFDQyxPQUFPQztZQUNoQixJQUFJRCxVQUFVLFdBQVdDLE1BQU07Z0JBQzNCLE1BQU1DLFFBQVE7b0JBQUNELEtBQUtFLElBQUk7b0JBQUVGLEtBQUtHLE9BQU87aUJBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUNDLElBQU1BLEdBQUdDLElBQUksQ0FBQztnQkFDOURDLFFBQVFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsRUFBRVAsTUFBTSxDQUFDO2dCQUNoQztZQUNKO1lBQ0FNLFFBQVFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRVYsTUFBTSxFQUFFLEVBQUVDLEtBQUssQ0FBQztRQUNwQztRQUNBVSxnQkFBZ0IsQ0FBQ0Y7WUFDYixJQUFJQSxNQUFNRyxRQUFRLElBQUlILE1BQU1HLFFBQVEsQ0FBQ0MsTUFBTSxLQUFLLEtBQUs7Z0JBQ2pELE9BQU87WUFDWDtZQUNBLE9BQU87UUFDWDtRQUNBQyxvQkFBb0I7SUFDeEI7SUFDQSxNQUFNQyxTQUFTckMsT0FBT3NDLE1BQU0sQ0FBQ3RDLE9BQU9zQyxNQUFNLENBQUMsQ0FBQyxHQUFHMUIsZ0JBQWdCLENBQUMsR0FBR0wsU0FBU2dDLFNBQVMsRUFBRTVCO0lBQ3ZGLElBQUkwQixPQUFPRyxNQUFNLElBQUlILE9BQU90QixPQUFPLEVBQUU7UUFDakNzQixPQUFPdEIsT0FBTyxDQUFDMEIsT0FBTyxHQUFHSixPQUFPRyxNQUFNO0lBQzFDO0lBQ0EsSUFBSUgsT0FBT0ssV0FBVyxJQUFJTCxPQUFPdEIsT0FBTyxFQUFFO1FBQ3RDc0IsT0FBT3RCLE9BQU8sQ0FBQzRCLFlBQVksR0FBR04sT0FBT0ssV0FBVztJQUNwRDtJQUNBLE1BQU1FLFdBQVdQLE9BQU94QixRQUFRLEdBQUcsU0FBUztJQUM1QyxNQUFNZ0MsV0FBV1IsT0FBT1MsZUFBZTtJQUN2QyxNQUFNQyxPQUFPVixPQUFPVSxJQUFJLElBQUk7SUFDNUIsTUFBTUMsVUFBVVgsT0FBT1csT0FBTyxJQUFJO0lBQ2xDLE1BQU1DLFVBQVVaLE9BQU9hLFFBQVEsSUFBSSxDQUFDLEVBQUVOLFNBQVMsR0FBRyxFQUFFQyxTQUFTLENBQUMsRUFBRUUsS0FBSyxFQUFFVixPQUFPckIsUUFBUSxDQUFDLENBQUMsRUFBRWdDLFFBQVEsQ0FBQztJQUNuRyxNQUFNRyxXQUFXMUMsUUFBUTJDLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDckQsT0FBT3NDLE1BQU0sQ0FBQ3RDLE9BQU9zQyxNQUFNLENBQUM7UUFDaEUsUUFBUTtRQUNSVztJQUFRLEdBQUdaLFNBQVM7UUFBRWlCLGtCQUFrQjtZQUNwQ0MsV0FBVy9DLG1CQUFtQitDLFNBQVM7UUFDM0M7SUFBRTtJQUNOSixTQUFTSyxnQkFBZ0IsR0FBRzdDO0lBQzVCLElBQUkwQixPQUFPb0IsT0FBTyxFQUFFO1FBQ2hCTixTQUFTTyxZQUFZLENBQUN4QixRQUFRLENBQUN5QixHQUFHLENBQUMsQ0FBQ3pCLFdBQWFBLFVBQVVHLE9BQU9vQixPQUFPO0lBQzdFO0lBQ0EsT0FBT047QUFDWDtBQUNBakQsa0JBQWtCLEdBQUdFLFlBQ3JCLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2NvcmUvZGlzdC9janMvc3JjL2xpYi9jb250ZW50c3RhY2stY29yZS5qcz9iMzNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5odHRwQ2xpZW50ID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGxvZGFzaF8xID0gcmVxdWlyZShcImxvZGFzaFwiKTtcbmNvbnN0IHBhcmFtX3NlcmlhbGl6ZXJfMSA9IHJlcXVpcmUoXCIuL3BhcmFtLXNlcmlhbGl6ZXJcIik7XG5jb25zdCBheGlvc18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImF4aW9zXCIpKTtcbmZ1bmN0aW9uIGh0dHBDbGllbnQob3B0aW9ucykge1xuICAgIGNvbnN0IGRlZmF1bHRDb25maWcgPSB7XG4gICAgICAgIGluc2VjdXJlOiBmYWxzZSxcbiAgICAgICAgcmV0cnlPbkVycm9yOiB0cnVlLFxuICAgICAgICBoZWFkZXJzOiB7fSxcbiAgICAgICAgYmFzZVBhdGg6ICcnLFxuICAgICAgICBwcm94eTogZmFsc2UsXG4gICAgICAgIGh0dHBBZ2VudDogZmFsc2UsXG4gICAgICAgIGh0dHBzQWdlbnQ6IGZhbHNlLFxuICAgICAgICB0aW1lb3V0OiAzMDAwMCxcbiAgICAgICAgbG9nSGFuZGxlcjogKGxldmVsLCBkYXRhKSA9PiB7XG4gICAgICAgICAgICBpZiAobGV2ZWwgPT09ICdlcnJvcicgJiYgZGF0YSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gW2RhdGEubmFtZSwgZGF0YS5tZXNzYWdlXS5maWx0ZXIoKGEpID0+IGEpLmpvaW4oJyAtICcpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFtlcnJvcl0gJHt0aXRsZX1gKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgWyR7bGV2ZWx9XSAke2RhdGF9YCk7XG4gICAgICAgIH0sXG4gICAgICAgIHJldHJ5Q29uZGl0aW9uOiAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGlmIChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5zdGF0dXMgPT09IDQyOSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9LFxuICAgICAgICB2ZXJzaW9uaW5nU3RyYXRlZ3k6ICdwYXRoJyxcbiAgICB9O1xuICAgIGNvbnN0IGNvbmZpZyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdENvbmZpZyksICgwLCBsb2Rhc2hfMS5jbG9uZURlZXApKG9wdGlvbnMpKTtcbiAgICBpZiAoY29uZmlnLmFwaUtleSAmJiBjb25maWcuaGVhZGVycykge1xuICAgICAgICBjb25maWcuaGVhZGVycy5hcGlfa2V5ID0gY29uZmlnLmFwaUtleTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZy5hY2Nlc3NUb2tlbiAmJiBjb25maWcuaGVhZGVycykge1xuICAgICAgICBjb25maWcuaGVhZGVycy5hY2Nlc3NfdG9rZW4gPSBjb25maWcuYWNjZXNzVG9rZW47XG4gICAgfVxuICAgIGNvbnN0IHByb3RvY29sID0gY29uZmlnLmluc2VjdXJlID8gJ2h0dHAnIDogJ2h0dHBzJztcbiAgICBjb25zdCBob3N0bmFtZSA9IGNvbmZpZy5kZWZhdWx0SG9zdG5hbWU7XG4gICAgY29uc3QgcG9ydCA9IGNvbmZpZy5wb3J0IHx8IDQ0MztcbiAgICBjb25zdCB2ZXJzaW9uID0gY29uZmlnLnZlcnNpb24gfHwgJ3YzJztcbiAgICBjb25zdCBiYXNlVVJMID0gY29uZmlnLmVuZHBvaW50IHx8IGAke3Byb3RvY29sfTovLyR7aG9zdG5hbWV9OiR7cG9ydH0ke2NvbmZpZy5iYXNlUGF0aH0vJHt2ZXJzaW9ufWA7XG4gICAgY29uc3QgaW5zdGFuY2UgPSBheGlvc18xLmRlZmF1bHQuY3JlYXRlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IFxuICAgICAgICAvLyBBeGlvc1xuICAgICAgICBiYXNlVVJMIH0sIGNvbmZpZyksIHsgcGFyYW1zU2VyaWFsaXplcjoge1xuICAgICAgICAgICAgc2VyaWFsaXplOiBwYXJhbV9zZXJpYWxpemVyXzEuc2VyaWFsaXplLFxuICAgICAgICB9IH0pKTtcbiAgICBpbnN0YW5jZS5odHRwQ2xpZW50UGFyYW1zID0gb3B0aW9ucztcbiAgICBpZiAoY29uZmlnLm9uRXJyb3IpIHtcbiAgICAgICAgaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgocmVzcG9uc2UpID0+IHJlc3BvbnNlLCBjb25maWcub25FcnJvcik7XG4gICAgfVxuICAgIHJldHVybiBpbnN0YW5jZTtcbn1cbmV4cG9ydHMuaHR0cENsaWVudCA9IGh0dHBDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250ZW50c3RhY2stY29yZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJodHRwQ2xpZW50IiwidHNsaWJfMSIsInJlcXVpcmUiLCJsb2Rhc2hfMSIsInBhcmFtX3NlcmlhbGl6ZXJfMSIsImF4aW9zXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJvcHRpb25zIiwiZGVmYXVsdENvbmZpZyIsImluc2VjdXJlIiwicmV0cnlPbkVycm9yIiwiaGVhZGVycyIsImJhc2VQYXRoIiwicHJveHkiLCJodHRwQWdlbnQiLCJodHRwc0FnZW50IiwidGltZW91dCIsImxvZ0hhbmRsZXIiLCJsZXZlbCIsImRhdGEiLCJ0aXRsZSIsIm5hbWUiLCJtZXNzYWdlIiwiZmlsdGVyIiwiYSIsImpvaW4iLCJjb25zb2xlIiwiZXJyb3IiLCJsb2ciLCJyZXRyeUNvbmRpdGlvbiIsInJlc3BvbnNlIiwic3RhdHVzIiwidmVyc2lvbmluZ1N0cmF0ZWd5IiwiY29uZmlnIiwiYXNzaWduIiwiY2xvbmVEZWVwIiwiYXBpS2V5IiwiYXBpX2tleSIsImFjY2Vzc1Rva2VuIiwiYWNjZXNzX3Rva2VuIiwicHJvdG9jb2wiLCJob3N0bmFtZSIsImRlZmF1bHRIb3N0bmFtZSIsInBvcnQiLCJ2ZXJzaW9uIiwiYmFzZVVSTCIsImVuZHBvaW50IiwiaW5zdGFuY2UiLCJkZWZhdWx0IiwiY3JlYXRlIiwicGFyYW1zU2VyaWFsaXplciIsInNlcmlhbGl6ZSIsImh0dHBDbGllbnRQYXJhbXMiLCJvbkVycm9yIiwiaW50ZXJjZXB0b3JzIiwidXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-core.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-error.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-error.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.error = void 0;\nfunction error(errorResponse) {\n    const config = errorResponse.config;\n    const response = errorResponse.response;\n    if (!config || !response) {\n        const errorObj = new Error();\n        Object.assign(errorObj, errorResponse);\n        errorObj.message = JSON.stringify(errorResponse);\n        throw errorObj;\n    }\n    const data = response.data;\n    const errorDetails = {\n        status: response.status,\n        statusText: response.statusText\n    };\n    if (config.headers && config.headers.authtoken) {\n        const token = `...${config.headers.authtoken.substr(-5)}`;\n        config.headers.authtoken = token;\n    }\n    if (config.headers && config.headers.authorization) {\n        const token = `...${config.headers.authorization.substr(-5)}`;\n        config.headers.authorization = token;\n    }\n    errorDetails.request = {\n        url: config.url,\n        method: config.method,\n        data: config.data,\n        headers: config.headers\n    };\n    if (data) {\n        errorDetails.errorMessage = data.error_message || data.message || \"\";\n        errorDetails.errorCode = data.error_code || 0;\n        errorDetails.errors = data.errors || {};\n        errorDetails.error = data.error || \"\";\n    }\n    const errorObj = new Error();\n    Object.assign(errorObj, errorDetails);\n    errorObj.message = JSON.stringify(errorDetails);\n    return errorObj;\n}\nexports.error = error; //# sourceMappingURL=contentstack-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvY29udGVudHN0YWNrLWVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxhQUFhLEdBQUcsS0FBSztBQUNyQixTQUFTRSxNQUFNQyxhQUFhO0lBQ3hCLE1BQU1DLFNBQVNELGNBQWNDLE1BQU07SUFDbkMsTUFBTUMsV0FBV0YsY0FBY0UsUUFBUTtJQUN2QyxJQUFJLENBQUNELFVBQVUsQ0FBQ0MsVUFBVTtRQUN0QixNQUFNQyxXQUFXLElBQUlDO1FBQ3JCVCxPQUFPVSxNQUFNLENBQUNGLFVBQVVIO1FBQ3hCRyxTQUFTRyxPQUFPLEdBQUdDLEtBQUtDLFNBQVMsQ0FBQ1I7UUFDbEMsTUFBTUc7SUFDVjtJQUNBLE1BQU1NLE9BQU9QLFNBQVNPLElBQUk7SUFDMUIsTUFBTUMsZUFBZTtRQUNqQkMsUUFBUVQsU0FBU1MsTUFBTTtRQUN2QkMsWUFBWVYsU0FBU1UsVUFBVTtJQUNuQztJQUNBLElBQUlYLE9BQU9ZLE9BQU8sSUFBSVosT0FBT1ksT0FBTyxDQUFDQyxTQUFTLEVBQUU7UUFDNUMsTUFBTUMsUUFBUSxDQUFDLEdBQUcsRUFBRWQsT0FBT1ksT0FBTyxDQUFDQyxTQUFTLENBQUNFLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQztRQUN6RGYsT0FBT1ksT0FBTyxDQUFDQyxTQUFTLEdBQUdDO0lBQy9CO0lBQ0EsSUFBSWQsT0FBT1ksT0FBTyxJQUFJWixPQUFPWSxPQUFPLENBQUNJLGFBQWEsRUFBRTtRQUNoRCxNQUFNRixRQUFRLENBQUMsR0FBRyxFQUFFZCxPQUFPWSxPQUFPLENBQUNJLGFBQWEsQ0FBQ0QsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDO1FBQzdEZixPQUFPWSxPQUFPLENBQUNJLGFBQWEsR0FBR0Y7SUFDbkM7SUFDQUwsYUFBYVEsT0FBTyxHQUFHO1FBQ25CQyxLQUFLbEIsT0FBT2tCLEdBQUc7UUFDZkMsUUFBUW5CLE9BQU9tQixNQUFNO1FBQ3JCWCxNQUFNUixPQUFPUSxJQUFJO1FBQ2pCSSxTQUFTWixPQUFPWSxPQUFPO0lBQzNCO0lBQ0EsSUFBSUosTUFBTTtRQUNOQyxhQUFhVyxZQUFZLEdBQUdaLEtBQUthLGFBQWEsSUFBSWIsS0FBS0gsT0FBTyxJQUFJO1FBQ2xFSSxhQUFhYSxTQUFTLEdBQUdkLEtBQUtlLFVBQVUsSUFBSTtRQUM1Q2QsYUFBYWUsTUFBTSxHQUFHaEIsS0FBS2dCLE1BQU0sSUFBSSxDQUFDO1FBQ3RDZixhQUFhWCxLQUFLLEdBQUdVLEtBQUtWLEtBQUssSUFBSTtJQUN2QztJQUNBLE1BQU1JLFdBQVcsSUFBSUM7SUFDckJULE9BQU9VLE1BQU0sQ0FBQ0YsVUFBVU87SUFDeEJQLFNBQVNHLE9BQU8sR0FBR0MsS0FBS0MsU0FBUyxDQUFDRTtJQUNsQyxPQUFPUDtBQUNYO0FBQ0FOLGFBQWEsR0FBR0UsT0FDaEIsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svY29yZS9kaXN0L2Nqcy9zcmMvbGliL2NvbnRlbnRzdGFjay1lcnJvci5qcz9iZWI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5lcnJvciA9IHZvaWQgMDtcbmZ1bmN0aW9uIGVycm9yKGVycm9yUmVzcG9uc2UpIHtcbiAgICBjb25zdCBjb25maWcgPSBlcnJvclJlc3BvbnNlLmNvbmZpZztcbiAgICBjb25zdCByZXNwb25zZSA9IGVycm9yUmVzcG9uc2UucmVzcG9uc2U7XG4gICAgaWYgKCFjb25maWcgfHwgIXJlc3BvbnNlKSB7XG4gICAgICAgIGNvbnN0IGVycm9yT2JqID0gbmV3IEVycm9yKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oZXJyb3JPYmosIGVycm9yUmVzcG9uc2UpO1xuICAgICAgICBlcnJvck9iai5tZXNzYWdlID0gSlNPTi5zdHJpbmdpZnkoZXJyb3JSZXNwb25zZSk7XG4gICAgICAgIHRocm93IGVycm9yT2JqO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gcmVzcG9uc2UuZGF0YTtcbiAgICBjb25zdCBlcnJvckRldGFpbHMgPSB7XG4gICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXNwb25zZS5zdGF0dXNUZXh0LFxuICAgIH07XG4gICAgaWYgKGNvbmZpZy5oZWFkZXJzICYmIGNvbmZpZy5oZWFkZXJzLmF1dGh0b2tlbikge1xuICAgICAgICBjb25zdCB0b2tlbiA9IGAuLi4ke2NvbmZpZy5oZWFkZXJzLmF1dGh0b2tlbi5zdWJzdHIoLTUpfWA7XG4gICAgICAgIGNvbmZpZy5oZWFkZXJzLmF1dGh0b2tlbiA9IHRva2VuO1xuICAgIH1cbiAgICBpZiAoY29uZmlnLmhlYWRlcnMgJiYgY29uZmlnLmhlYWRlcnMuYXV0aG9yaXphdGlvbikge1xuICAgICAgICBjb25zdCB0b2tlbiA9IGAuLi4ke2NvbmZpZy5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3Vic3RyKC01KX1gO1xuICAgICAgICBjb25maWcuaGVhZGVycy5hdXRob3JpemF0aW9uID0gdG9rZW47XG4gICAgfVxuICAgIGVycm9yRGV0YWlscy5yZXF1ZXN0ID0ge1xuICAgICAgICB1cmw6IGNvbmZpZy51cmwsXG4gICAgICAgIG1ldGhvZDogY29uZmlnLm1ldGhvZCxcbiAgICAgICAgZGF0YTogY29uZmlnLmRhdGEsXG4gICAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxuICAgIH07XG4gICAgaWYgKGRhdGEpIHtcbiAgICAgICAgZXJyb3JEZXRhaWxzLmVycm9yTWVzc2FnZSA9IGRhdGEuZXJyb3JfbWVzc2FnZSB8fCBkYXRhLm1lc3NhZ2UgfHwgJyc7XG4gICAgICAgIGVycm9yRGV0YWlscy5lcnJvckNvZGUgPSBkYXRhLmVycm9yX2NvZGUgfHwgMDtcbiAgICAgICAgZXJyb3JEZXRhaWxzLmVycm9ycyA9IGRhdGEuZXJyb3JzIHx8IHt9O1xuICAgICAgICBlcnJvckRldGFpbHMuZXJyb3IgPSBkYXRhLmVycm9yIHx8ICcnO1xuICAgIH1cbiAgICBjb25zdCBlcnJvck9iaiA9IG5ldyBFcnJvcigpO1xuICAgIE9iamVjdC5hc3NpZ24oZXJyb3JPYmosIGVycm9yRGV0YWlscyk7XG4gICAgZXJyb3JPYmoubWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KGVycm9yRGV0YWlscyk7XG4gICAgcmV0dXJuIGVycm9yT2JqO1xufVxuZXhwb3J0cy5lcnJvciA9IGVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGVudHN0YWNrLWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVycm9yIiwiZXJyb3JSZXNwb25zZSIsImNvbmZpZyIsInJlc3BvbnNlIiwiZXJyb3JPYmoiLCJFcnJvciIsImFzc2lnbiIsIm1lc3NhZ2UiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsImVycm9yRGV0YWlscyIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJoZWFkZXJzIiwiYXV0aHRva2VuIiwidG9rZW4iLCJzdWJzdHIiLCJhdXRob3JpemF0aW9uIiwicmVxdWVzdCIsInVybCIsIm1ldGhvZCIsImVycm9yTWVzc2FnZSIsImVycm9yX21lc3NhZ2UiLCJlcnJvckNvZGUiLCJlcnJvcl9jb2RlIiwiZXJyb3JzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/param-serializer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/param-serializer.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.serialize = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst Qs = tslib_1.__importStar(__webpack_require__(/*! qs */ \"(ssr)/./node_modules/qs/lib/index.js\"));\nfunction serialize(params) {\n    const query = params.query;\n    delete params.query;\n    let qs = Qs.stringify(params, {\n        arrayFormat: \"brackets\"\n    });\n    if (query) {\n        qs = qs + `&query=${encodeURI(JSON.stringify(query))}`;\n    }\n    params.query = query;\n    return qs;\n}\nexports.serialize = serialize; //# sourceMappingURL=param-serializer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvcGFyYW0tc2VyaWFsaXplci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCLEdBQUcsS0FBSztBQUN6QixNQUFNRyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQixNQUFNQyxLQUFLRixRQUFRRyxZQUFZLENBQUNGLG1CQUFPQSxDQUFDLGdEQUFJO0FBQzVDLFNBQVNGLFVBQVVLLE1BQU07SUFDckIsTUFBTUMsUUFBUUQsT0FBT0MsS0FBSztJQUMxQixPQUFPRCxPQUFPQyxLQUFLO0lBQ25CLElBQUlDLEtBQUtKLEdBQUdLLFNBQVMsQ0FBQ0gsUUFBUTtRQUFFSSxhQUFhO0lBQVc7SUFDeEQsSUFBSUgsT0FBTztRQUNQQyxLQUFLQSxLQUFLLENBQUMsT0FBTyxFQUFFRyxVQUFVQyxLQUFLSCxTQUFTLENBQUNGLFFBQVEsQ0FBQztJQUMxRDtJQUNBRCxPQUFPQyxLQUFLLEdBQUdBO0lBQ2YsT0FBT0M7QUFDWDtBQUNBVCxpQkFBaUIsR0FBR0UsV0FDcEIsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svY29yZS9kaXN0L2Nqcy9zcmMvbGliL3BhcmFtLXNlcmlhbGl6ZXIuanM/YWQyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2VyaWFsaXplID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IFFzID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcInFzXCIpKTtcbmZ1bmN0aW9uIHNlcmlhbGl6ZShwYXJhbXMpIHtcbiAgICBjb25zdCBxdWVyeSA9IHBhcmFtcy5xdWVyeTtcbiAgICBkZWxldGUgcGFyYW1zLnF1ZXJ5O1xuICAgIGxldCBxcyA9IFFzLnN0cmluZ2lmeShwYXJhbXMsIHsgYXJyYXlGb3JtYXQ6ICdicmFja2V0cycgfSk7XG4gICAgaWYgKHF1ZXJ5KSB7XG4gICAgICAgIHFzID0gcXMgKyBgJnF1ZXJ5PSR7ZW5jb2RlVVJJKEpTT04uc3RyaW5naWZ5KHF1ZXJ5KSl9YDtcbiAgICB9XG4gICAgcGFyYW1zLnF1ZXJ5ID0gcXVlcnk7XG4gICAgcmV0dXJuIHFzO1xufVxuZXhwb3J0cy5zZXJpYWxpemUgPSBzZXJpYWxpemU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJhbS1zZXJpYWxpemVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInNlcmlhbGl6ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiUXMiLCJfX2ltcG9ydFN0YXIiLCJwYXJhbXMiLCJxdWVyeSIsInFzIiwic3RyaW5naWZ5IiwiYXJyYXlGb3JtYXQiLCJlbmNvZGVVUkkiLCJKU09OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/param-serializer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/request.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/request.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getData = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nfunction getData(instance, url, data) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        try {\n            const response = yield instance.get(url, {\n                params: data\n            });\n            if (response.data) {\n                return response.data;\n            } else {\n                throw Error(JSON.stringify(response));\n            }\n        } catch (err) {\n            throw err;\n        }\n    });\n}\nexports.getData = getData; //# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHLEtBQUs7QUFDdkIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsU0FBU0YsUUFBUUcsUUFBUSxFQUFFQyxHQUFHLEVBQUVDLElBQUk7SUFDaEMsT0FBT0osUUFBUUssU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQzNDLElBQUk7WUFDQSxNQUFNQyxXQUFXLE1BQU1KLFNBQVNLLEdBQUcsQ0FBQ0osS0FBSztnQkFBRUssUUFBUUo7WUFBSztZQUN4RCxJQUFJRSxTQUFTRixJQUFJLEVBQUU7Z0JBQ2YsT0FBT0UsU0FBU0YsSUFBSTtZQUN4QixPQUNLO2dCQUNELE1BQU1LLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ0w7WUFDL0I7UUFDSixFQUNBLE9BQU9NLEtBQUs7WUFDUixNQUFNQTtRQUNWO0lBQ0o7QUFDSjtBQUNBZixlQUFlLEdBQUdFLFNBQ2xCLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2NvcmUvZGlzdC9janMvc3JjL2xpYi9yZXF1ZXN0LmpzPzQ1ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldERhdGEgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuZnVuY3Rpb24gZ2V0RGF0YShpbnN0YW5jZSwgdXJsLCBkYXRhKSB7XG4gICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBpbnN0YW5jZS5nZXQodXJsLCB7IHBhcmFtczogZGF0YSB9KTtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihKU09OLnN0cmluZ2lmeShyZXNwb25zZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5nZXREYXRhID0gZ2V0RGF0YTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0RGF0YSIsInRzbGliXzEiLCJyZXF1aXJlIiwiaW5zdGFuY2UiLCJ1cmwiLCJkYXRhIiwiX19hd2FpdGVyIiwicmVzcG9uc2UiLCJnZXQiLCJwYXJhbXMiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/retryPolicy/delivery-sdk-handlers.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/retryPolicy/delivery-sdk-handlers.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.retryResponseErrorHandler = exports.retryResponseHandler = exports.retryRequestHandler = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst axios_1 = tslib_1.__importDefault(__webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/dist/node/axios.cjs\"));\nconst defaultConfig = {\n    maxRequests: 5,\n    retryLimit: 5,\n    retryDelay: 300\n};\nconst retryRequestHandler = (req)=>{\n    req.retryCount = req.retryCount || 0;\n    return req;\n};\nexports.retryRequestHandler = retryRequestHandler;\nconst retryResponseHandler = (response)=>response;\nexports.retryResponseHandler = retryResponseHandler;\nconst retryResponseErrorHandler = (error, config)=>tslib_1.__awaiter(void 0, void 0, void 0, function*() {\n        let retryCount = error.config.retryCount;\n        // let retryErrorType = null;\n        config = Object.assign(Object.assign({}, defaultConfig), config);\n        if (!error.config.retryOnError || retryCount > config.retryLimit) {\n            return Promise.reject(error);\n        }\n        const response = error.response;\n        if (!response) {\n            if (error.code === \"ECONNABORTED\") {\n                error.response = Object.assign(Object.assign({}, error.response), {\n                    status: 408,\n                    statusText: `timeout of ${config.timeout}ms exceeded`\n                });\n                return Promise.resolve(error.response);\n            } else {\n                return Promise.reject(error);\n            }\n        } else if (response.status == 429 || response.status == 401) {\n            retryCount++;\n            // retryErrorType = `Error with status: ${response.status}`;\n            if (retryCount > config.retryLimit) {\n                return Promise.reject(error);\n            }\n            yield new Promise((resolve)=>setTimeout(resolve, 1000));\n            error.config.retryCount = retryCount;\n            return (0, axios_1.default)(error.request);\n        }\n        if (config.retryCondition && config.retryCondition(error)) {\n            // retryErrorType = error.response ? `Error with status: ${response.status}` : `Error Code:${error.code}`;\n            retryCount++;\n            return retry(error, config, retryCount, config.retryDelay);\n        }\n    });\nexports.retryResponseErrorHandler = retryResponseErrorHandler;\nconst retry = (error, config, retryCount, retryDelay)=>{\n    let delayTime = retryDelay;\n    if (retryCount > config.retryLimit) {\n        return Promise.reject(error);\n    }\n    delayTime = config.retryDelay;\n    error.config.retryCount = retryCount;\n    return new Promise(function(resolve) {\n        return setTimeout(function() {\n            return resolve((0, axios_1.default)(error.request));\n        }, delayTime);\n    });\n}; //# sourceMappingURL=delivery-sdk-handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvcmV0cnlQb2xpY3kvZGVsaXZlcnktc2RrLWhhbmRsZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQ0FBaUMsR0FBR0EsNEJBQTRCLEdBQUdBLDJCQUEyQixHQUFHLEtBQUs7QUFDdEcsTUFBTUssVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsVUFBVUYsUUFBUUcsZUFBZSxDQUFDRixtQkFBT0EsQ0FBQyw2REFBTztBQUN2RCxNQUFNRyxnQkFBZ0I7SUFDbEJDLGFBQWE7SUFDYkMsWUFBWTtJQUNaQyxZQUFZO0FBQ2hCO0FBQ0EsTUFBTVIsc0JBQXNCLENBQUNTO0lBQ3pCQSxJQUFJQyxVQUFVLEdBQUdELElBQUlDLFVBQVUsSUFBSTtJQUNuQyxPQUFPRDtBQUNYO0FBQ0FiLDJCQUEyQixHQUFHSTtBQUM5QixNQUFNRCx1QkFBdUIsQ0FBQ1ksV0FBYUE7QUFDM0NmLDRCQUE0QixHQUFHRztBQUMvQixNQUFNRCw0QkFBNEIsQ0FBQ2MsT0FBT0MsU0FBV1osUUFBUWEsU0FBUyxDQUFDLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQzNGLElBQUlKLGFBQWFFLE1BQU1DLE1BQU0sQ0FBQ0gsVUFBVTtRQUN4Qyw2QkFBNkI7UUFDN0JHLFNBQVNuQixPQUFPcUIsTUFBTSxDQUFDckIsT0FBT3FCLE1BQU0sQ0FBQyxDQUFDLEdBQUdWLGdCQUFnQlE7UUFDekQsSUFBSSxDQUFDRCxNQUFNQyxNQUFNLENBQUNHLFlBQVksSUFBSU4sYUFBYUcsT0FBT04sVUFBVSxFQUFFO1lBQzlELE9BQU9VLFFBQVFDLE1BQU0sQ0FBQ047UUFDMUI7UUFDQSxNQUFNRCxXQUFXQyxNQUFNRCxRQUFRO1FBQy9CLElBQUksQ0FBQ0EsVUFBVTtZQUNYLElBQUlDLE1BQU1PLElBQUksS0FBSyxnQkFBZ0I7Z0JBQy9CUCxNQUFNRCxRQUFRLEdBQUdqQixPQUFPcUIsTUFBTSxDQUFDckIsT0FBT3FCLE1BQU0sQ0FBQyxDQUFDLEdBQUdILE1BQU1ELFFBQVEsR0FBRztvQkFBRVMsUUFBUTtvQkFBS0MsWUFBWSxDQUFDLFdBQVcsRUFBRVIsT0FBT1MsT0FBTyxDQUFDLFdBQVcsQ0FBQztnQkFBQztnQkFDdkksT0FBT0wsUUFBUU0sT0FBTyxDQUFDWCxNQUFNRCxRQUFRO1lBQ3pDLE9BQ0s7Z0JBQ0QsT0FBT00sUUFBUUMsTUFBTSxDQUFDTjtZQUMxQjtRQUNKLE9BQ0ssSUFBSUQsU0FBU1MsTUFBTSxJQUFJLE9BQU9ULFNBQVNTLE1BQU0sSUFBSSxLQUFLO1lBQ3ZEVjtZQUNBLDREQUE0RDtZQUM1RCxJQUFJQSxhQUFhRyxPQUFPTixVQUFVLEVBQUU7Z0JBQ2hDLE9BQU9VLFFBQVFDLE1BQU0sQ0FBQ047WUFDMUI7WUFDQSxNQUFNLElBQUlLLFFBQVEsQ0FBQ00sVUFBWUMsV0FBV0QsU0FBUztZQUNuRFgsTUFBTUMsTUFBTSxDQUFDSCxVQUFVLEdBQUdBO1lBQzFCLE9BQU8sQ0FBQyxHQUFHUCxRQUFRc0IsT0FBTyxFQUFFYixNQUFNYyxPQUFPO1FBQzdDO1FBQ0EsSUFBSWIsT0FBT2MsY0FBYyxJQUFJZCxPQUFPYyxjQUFjLENBQUNmLFFBQVE7WUFDdkQsMEdBQTBHO1lBQzFHRjtZQUNBLE9BQU9rQixNQUFNaEIsT0FBT0MsUUFBUUgsWUFBWUcsT0FBT0wsVUFBVTtRQUM3RDtJQUNKO0FBQ0FaLGlDQUFpQyxHQUFHRTtBQUNwQyxNQUFNOEIsUUFBUSxDQUFDaEIsT0FBT0MsUUFBUUgsWUFBWUY7SUFDdEMsSUFBSXFCLFlBQVlyQjtJQUNoQixJQUFJRSxhQUFhRyxPQUFPTixVQUFVLEVBQUU7UUFDaEMsT0FBT1UsUUFBUUMsTUFBTSxDQUFDTjtJQUMxQjtJQUNBaUIsWUFBWWhCLE9BQU9MLFVBQVU7SUFDN0JJLE1BQU1DLE1BQU0sQ0FBQ0gsVUFBVSxHQUFHQTtJQUMxQixPQUFPLElBQUlPLFFBQVEsU0FBVU0sT0FBTztRQUNoQyxPQUFPQyxXQUFXO1lBQ2QsT0FBT0QsUUFBUSxDQUFDLEdBQUdwQixRQUFRc0IsT0FBTyxFQUFFYixNQUFNYyxPQUFPO1FBQ3JELEdBQUdHO0lBQ1A7QUFDSixHQUNBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2NvcmUvZGlzdC9janMvc3JjL2xpYi9yZXRyeVBvbGljeS9kZWxpdmVyeS1zZGstaGFuZGxlcnMuanM/ZGFlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmV0cnlSZXNwb25zZUVycm9ySGFuZGxlciA9IGV4cG9ydHMucmV0cnlSZXNwb25zZUhhbmRsZXIgPSBleHBvcnRzLnJldHJ5UmVxdWVzdEhhbmRsZXIgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgYXhpb3NfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJheGlvc1wiKSk7XG5jb25zdCBkZWZhdWx0Q29uZmlnID0ge1xuICAgIG1heFJlcXVlc3RzOiA1LFxuICAgIHJldHJ5TGltaXQ6IDUsXG4gICAgcmV0cnlEZWxheTogMzAwLFxufTtcbmNvbnN0IHJldHJ5UmVxdWVzdEhhbmRsZXIgPSAocmVxKSA9PiB7XG4gICAgcmVxLnJldHJ5Q291bnQgPSByZXEucmV0cnlDb3VudCB8fCAwO1xuICAgIHJldHVybiByZXE7XG59O1xuZXhwb3J0cy5yZXRyeVJlcXVlc3RIYW5kbGVyID0gcmV0cnlSZXF1ZXN0SGFuZGxlcjtcbmNvbnN0IHJldHJ5UmVzcG9uc2VIYW5kbGVyID0gKHJlc3BvbnNlKSA9PiByZXNwb25zZTtcbmV4cG9ydHMucmV0cnlSZXNwb25zZUhhbmRsZXIgPSByZXRyeVJlc3BvbnNlSGFuZGxlcjtcbmNvbnN0IHJldHJ5UmVzcG9uc2VFcnJvckhhbmRsZXIgPSAoZXJyb3IsIGNvbmZpZykgPT4gdHNsaWJfMS5fX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICBsZXQgcmV0cnlDb3VudCA9IGVycm9yLmNvbmZpZy5yZXRyeUNvdW50O1xuICAgIC8vIGxldCByZXRyeUVycm9yVHlwZSA9IG51bGw7XG4gICAgY29uZmlnID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0Q29uZmlnKSwgY29uZmlnKTtcbiAgICBpZiAoIWVycm9yLmNvbmZpZy5yZXRyeU9uRXJyb3IgfHwgcmV0cnlDb3VudCA+IGNvbmZpZy5yZXRyeUxpbWl0KSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfVxuICAgIGNvbnN0IHJlc3BvbnNlID0gZXJyb3IucmVzcG9uc2U7XG4gICAgaWYgKCFyZXNwb25zZSkge1xuICAgICAgICBpZiAoZXJyb3IuY29kZSA9PT0gJ0VDT05OQUJPUlRFRCcpIHtcbiAgICAgICAgICAgIGVycm9yLnJlc3BvbnNlID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBlcnJvci5yZXNwb25zZSksIHsgc3RhdHVzOiA0MDgsIHN0YXR1c1RleHQ6IGB0aW1lb3V0IG9mICR7Y29uZmlnLnRpbWVvdXR9bXMgZXhjZWVkZWRgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShlcnJvci5yZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSA0MjkgfHwgcmVzcG9uc2Uuc3RhdHVzID09IDQwMSkge1xuICAgICAgICByZXRyeUNvdW50Kys7XG4gICAgICAgIC8vIHJldHJ5RXJyb3JUeXBlID0gYEVycm9yIHdpdGggc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gO1xuICAgICAgICBpZiAocmV0cnlDb3VudCA+IGNvbmZpZy5yZXRyeUxpbWl0KSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDApKTtcbiAgICAgICAgZXJyb3IuY29uZmlnLnJldHJ5Q291bnQgPSByZXRyeUNvdW50O1xuICAgICAgICByZXR1cm4gKDAsIGF4aW9zXzEuZGVmYXVsdCkoZXJyb3IucmVxdWVzdCk7XG4gICAgfVxuICAgIGlmIChjb25maWcucmV0cnlDb25kaXRpb24gJiYgY29uZmlnLnJldHJ5Q29uZGl0aW9uKGVycm9yKSkge1xuICAgICAgICAvLyByZXRyeUVycm9yVHlwZSA9IGVycm9yLnJlc3BvbnNlID8gYEVycm9yIHdpdGggc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gIDogYEVycm9yIENvZGU6JHtlcnJvci5jb2RlfWA7XG4gICAgICAgIHJldHJ5Q291bnQrKztcbiAgICAgICAgcmV0dXJuIHJldHJ5KGVycm9yLCBjb25maWcsIHJldHJ5Q291bnQsIGNvbmZpZy5yZXRyeURlbGF5KTtcbiAgICB9XG59KTtcbmV4cG9ydHMucmV0cnlSZXNwb25zZUVycm9ySGFuZGxlciA9IHJldHJ5UmVzcG9uc2VFcnJvckhhbmRsZXI7XG5jb25zdCByZXRyeSA9IChlcnJvciwgY29uZmlnLCByZXRyeUNvdW50LCByZXRyeURlbGF5KSA9PiB7XG4gICAgbGV0IGRlbGF5VGltZSA9IHJldHJ5RGVsYXk7XG4gICAgaWYgKHJldHJ5Q291bnQgPiBjb25maWcucmV0cnlMaW1pdCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgIH1cbiAgICBkZWxheVRpbWUgPSBjb25maWcucmV0cnlEZWxheTtcbiAgICBlcnJvci5jb25maWcucmV0cnlDb3VudCA9IHJldHJ5Q291bnQ7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlKCgwLCBheGlvc18xLmRlZmF1bHQpKGVycm9yLnJlcXVlc3QpKTtcbiAgICAgICAgfSwgZGVsYXlUaW1lKTtcbiAgICB9KTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxpdmVyeS1zZGstaGFuZGxlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmV0cnlSZXNwb25zZUVycm9ySGFuZGxlciIsInJldHJ5UmVzcG9uc2VIYW5kbGVyIiwicmV0cnlSZXF1ZXN0SGFuZGxlciIsInRzbGliXzEiLCJyZXF1aXJlIiwiYXhpb3NfMSIsIl9faW1wb3J0RGVmYXVsdCIsImRlZmF1bHRDb25maWciLCJtYXhSZXF1ZXN0cyIsInJldHJ5TGltaXQiLCJyZXRyeURlbGF5IiwicmVxIiwicmV0cnlDb3VudCIsInJlc3BvbnNlIiwiZXJyb3IiLCJjb25maWciLCJfX2F3YWl0ZXIiLCJhc3NpZ24iLCJyZXRyeU9uRXJyb3IiLCJQcm9taXNlIiwicmVqZWN0IiwiY29kZSIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJ0aW1lb3V0IiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJkZWZhdWx0IiwicmVxdWVzdCIsInJldHJ5Q29uZGl0aW9uIiwicmV0cnkiLCJkZWxheVRpbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/retryPolicy/delivery-sdk-handlers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/types.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/types.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svY29yZS9kaXN0L2Nqcy9zcmMvbGliL3R5cGVzLmpzPzc0MjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/core/dist/cjs/src/lib/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst contentstack = tslib_1.__importStar(__webpack_require__(/*! ./lib/contentstack */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contentstack.js\"));\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/types */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\"), exports);\nexports[\"default\"] = contentstack; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLHNEQUFPO0FBQy9CLE1BQU1DLGVBQWVGLFFBQVFHLFlBQVksQ0FBQ0YsbUJBQU9BLENBQUMsNEdBQW9CO0FBQ3RFRCxRQUFRSSxZQUFZLENBQUNILG1CQUFPQSxDQUFDLDhGQUFhLEdBQUdIO0FBQzdDQSxrQkFBZSxHQUFHSSxjQUNsQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2luZGV4LmpzPzkzZWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29udGVudHN0YWNrID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vbGliL2NvbnRlbnRzdGFja1wiKSk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvdHlwZXNcIiksIGV4cG9ydHMpO1xuZXhwb3J0cy5kZWZhdWx0ID0gY29udGVudHN0YWNrO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJjb250ZW50c3RhY2siLCJfX2ltcG9ydFN0YXIiLCJfX2V4cG9ydFN0YXIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset-query.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset-query.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AssetQuery = void 0;\nconst base_query_1 = __webpack_require__(/*! ./base-query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\");\nclass AssetQuery extends base_query_1.BaseQuery {\n    constructor(client){\n        super();\n        this._client = client;\n        this._urlPath = \"/assets\";\n    }\n    /**\n     * @method version\n     * @memberof AssetQuery\n     * @description Retrieve a specific version of an asset in result\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().version(1).find();\n     */ version(version) {\n        this._queryParams.version = String(version);\n        return this;\n    }\n    /**\n     * @method includeDimension\n     * @memberof AssetQuery\n     * @description Includes the dimensions (height and width) of the image in result\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().includeDimension().find();\n     */ includeDimension() {\n        this._queryParams.include_dimension = \"true\";\n        return this;\n    }\n    /**\n     * @method includeBranch\n     * @memberof AssetQuery\n     * @description Includes the branch in result\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().includeBranch().find();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method includeMetadata\n     * @memberof Entries\n     * @description Include the metadata for getting metadata content for the entry.\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().includeMetadata().fetch();\n     */ includeMetadata() {\n        this._queryParams.include_metadata = \"true\";\n        return this;\n    }\n    /**\n     * @method relativeUrls\n     * @memberof AssetQuery\n     * @description Includes the relative URLs of the assets in result\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().relativeUrls().find();\n     */ relativeUrls() {\n        this._queryParams.relative_url = \"true\";\n        return this;\n    }\n    /**\n     * @method includeFallback\n     * @memberof AssetQuery\n     * @description When an entry is not published in a specific language, content can be fetched from its fallback language\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().includeFallback().find();\n     */ includeFallback() {\n        this._queryParams.include_fallback = \"true\";\n        return this;\n    }\n    /**\n     * @method locale\n     * @memberof AssetQuery\n     * @description The assets published in the locale will be fetched\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().locale('en-us').find();\n     */ locale(locale) {\n        this._queryParams.locale = locale;\n        return this;\n    }\n}\nexports.AssetQuery = AssetQuery; //# sourceMappingURL=asset-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9hc3NldC1xdWVyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWtCLEdBQUcsS0FBSztBQUMxQixNQUFNRyxlQUFlQyxtQkFBT0EsQ0FBQyxvR0FBYztBQUMzQyxNQUFNRixtQkFBbUJDLGFBQWFFLFNBQVM7SUFDM0NDLFlBQVlDLE1BQU0sQ0FBRTtRQUNoQixLQUFLO1FBQ0wsSUFBSSxDQUFDQyxPQUFPLEdBQUdEO1FBQ2YsSUFBSSxDQUFDRSxRQUFRLEdBQUc7SUFDcEI7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RDLFFBQVFBLE9BQU8sRUFBRTtRQUNiLElBQUksQ0FBQ0MsWUFBWSxDQUFDRCxPQUFPLEdBQUdFLE9BQU9GO1FBQ25DLE9BQU8sSUFBSTtJQUNmO0lBQ0E7Ozs7Ozs7Ozs7S0FVQyxHQUNERyxtQkFBbUI7UUFDZixJQUFJLENBQUNGLFlBQVksQ0FBQ0csaUJBQWlCLEdBQUc7UUFDdEMsT0FBTyxJQUFJO0lBQ2Y7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RDLGdCQUFnQjtRQUNaLElBQUksQ0FBQ0osWUFBWSxDQUFDSyxjQUFjLEdBQUc7UUFDbkMsT0FBTyxJQUFJO0lBQ2Y7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RDLGtCQUFrQjtRQUNkLElBQUksQ0FBQ04sWUFBWSxDQUFDTyxnQkFBZ0IsR0FBRztRQUNyQyxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7O0tBVUMsR0FDREMsZUFBZTtRQUNYLElBQUksQ0FBQ1IsWUFBWSxDQUFDUyxZQUFZLEdBQUc7UUFDakMsT0FBTyxJQUFJO0lBQ2Y7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RDLGtCQUFrQjtRQUNkLElBQUksQ0FBQ1YsWUFBWSxDQUFDVyxnQkFBZ0IsR0FBRztRQUNyQyxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7O0tBVUMsR0FDREMsT0FBT0EsTUFBTSxFQUFFO1FBQ1gsSUFBSSxDQUFDWixZQUFZLENBQUNZLE1BQU0sR0FBR0E7UUFDM0IsT0FBTyxJQUFJO0lBQ2Y7QUFDSjtBQUNBdkIsa0JBQWtCLEdBQUdFLFlBQ3JCLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL2Fzc2V0LXF1ZXJ5LmpzP2M4YzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFzc2V0UXVlcnkgPSB2b2lkIDA7XG5jb25zdCBiYXNlX3F1ZXJ5XzEgPSByZXF1aXJlKFwiLi9iYXNlLXF1ZXJ5XCIpO1xuY2xhc3MgQXNzZXRRdWVyeSBleHRlbmRzIGJhc2VfcXVlcnlfMS5CYXNlUXVlcnkge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLl9jbGllbnQgPSBjbGllbnQ7XG4gICAgICAgIHRoaXMuX3VybFBhdGggPSAnL2Fzc2V0cyc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgdmVyc2lvblxuICAgICAqIEBtZW1iZXJvZiBBc3NldFF1ZXJ5XG4gICAgICogQGRlc2NyaXB0aW9uIFJldHJpZXZlIGEgc3BlY2lmaWMgdmVyc2lvbiBvZiBhbiBhc3NldCBpbiByZXN1bHRcbiAgICAgKiBAcmV0dXJucyB7QXNzZXRRdWVyeX1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suYXNzZXQoKS52ZXJzaW9uKDEpLmZpbmQoKTtcbiAgICAgKi9cbiAgICB2ZXJzaW9uKHZlcnNpb24pIHtcbiAgICAgICAgdGhpcy5fcXVlcnlQYXJhbXMudmVyc2lvbiA9IFN0cmluZyh2ZXJzaW9uKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaW5jbHVkZURpbWVuc2lvblxuICAgICAqIEBtZW1iZXJvZiBBc3NldFF1ZXJ5XG4gICAgICogQGRlc2NyaXB0aW9uIEluY2x1ZGVzIHRoZSBkaW1lbnNpb25zIChoZWlnaHQgYW5kIHdpZHRoKSBvZiB0aGUgaW1hZ2UgaW4gcmVzdWx0XG4gICAgICogQHJldHVybnMge0Fzc2V0UXVlcnl9XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBpbXBvcnQgY29udGVudHN0YWNrIGZyb20gJ0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrJ1xuICAgICAqXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soeyBhcGlLZXk6IFwiYXBpS2V5XCIsIGRlbGl2ZXJ5VG9rZW46IFwiZGVsaXZlcnlUb2tlblwiLCBlbnZpcm9ubWVudDogXCJlbnZpcm9ubWVudFwiIH0pO1xuICAgICAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHN0YWNrLmFzc2V0KCkuaW5jbHVkZURpbWVuc2lvbigpLmZpbmQoKTtcbiAgICAgKi9cbiAgICBpbmNsdWRlRGltZW5zaW9uKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2RpbWVuc2lvbiA9ICd0cnVlJztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaW5jbHVkZUJyYW5jaFxuICAgICAqIEBtZW1iZXJvZiBBc3NldFF1ZXJ5XG4gICAgICogQGRlc2NyaXB0aW9uIEluY2x1ZGVzIHRoZSBicmFuY2ggaW4gcmVzdWx0XG4gICAgICogQHJldHVybnMge0Fzc2V0UXVlcnl9XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBpbXBvcnQgY29udGVudHN0YWNrIGZyb20gJ0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrJ1xuICAgICAqXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soeyBhcGlLZXk6IFwiYXBpS2V5XCIsIGRlbGl2ZXJ5VG9rZW46IFwiZGVsaXZlcnlUb2tlblwiLCBlbnZpcm9ubWVudDogXCJlbnZpcm9ubWVudFwiIH0pO1xuICAgICAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHN0YWNrLmFzc2V0KCkuaW5jbHVkZUJyYW5jaCgpLmZpbmQoKTtcbiAgICAgKi9cbiAgICBpbmNsdWRlQnJhbmNoKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2JyYW5jaCA9ICd0cnVlJztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaW5jbHVkZU1ldGFkYXRhXG4gICAgICogQG1lbWJlcm9mIEVudHJpZXNcbiAgICAgKiBAZGVzY3JpcHRpb24gSW5jbHVkZSB0aGUgbWV0YWRhdGEgZm9yIGdldHRpbmcgbWV0YWRhdGEgY29udGVudCBmb3IgdGhlIGVudHJ5LlxuICAgICAqIEByZXR1cm5zIHtFbnRyaWVzfVxuICAgICAqIEBleGFtcGxlXG4gICAgICogaW1wb3J0IGNvbnRlbnRzdGFjayBmcm9tICdAY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkaydcbiAgICAgKlxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKHsgYXBpS2V5OiBcImFwaUtleVwiLCBkZWxpdmVyeVRva2VuOiBcImRlbGl2ZXJ5VG9rZW5cIiwgZW52aXJvbm1lbnQ6IFwiZW52aXJvbm1lbnRcIiB9KTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBhd2FpdCBzdGFjay5hc3NldCgpLmluY2x1ZGVNZXRhZGF0YSgpLmZldGNoKCk7XG4gICAgICovXG4gICAgaW5jbHVkZU1ldGFkYXRhKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX21ldGFkYXRhID0gJ3RydWUnO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCByZWxhdGl2ZVVybHNcbiAgICAgKiBAbWVtYmVyb2YgQXNzZXRRdWVyeVxuICAgICAqIEBkZXNjcmlwdGlvbiBJbmNsdWRlcyB0aGUgcmVsYXRpdmUgVVJMcyBvZiB0aGUgYXNzZXRzIGluIHJlc3VsdFxuICAgICAqIEByZXR1cm5zIHtBc3NldFF1ZXJ5fVxuICAgICAqIEBleGFtcGxlXG4gICAgICogaW1wb3J0IGNvbnRlbnRzdGFjayBmcm9tICdAY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkaydcbiAgICAgKlxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKHsgYXBpS2V5OiBcImFwaUtleVwiLCBkZWxpdmVyeVRva2VuOiBcImRlbGl2ZXJ5VG9rZW5cIiwgZW52aXJvbm1lbnQ6IFwiZW52aXJvbm1lbnRcIiB9KTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBhd2FpdCBzdGFjay5hc3NldCgpLnJlbGF0aXZlVXJscygpLmZpbmQoKTtcbiAgICAgKi9cbiAgICByZWxhdGl2ZVVybHMoKSB7XG4gICAgICAgIHRoaXMuX3F1ZXJ5UGFyYW1zLnJlbGF0aXZlX3VybCA9ICd0cnVlJztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaW5jbHVkZUZhbGxiYWNrXG4gICAgICogQG1lbWJlcm9mIEFzc2V0UXVlcnlcbiAgICAgKiBAZGVzY3JpcHRpb24gV2hlbiBhbiBlbnRyeSBpcyBub3QgcHVibGlzaGVkIGluIGEgc3BlY2lmaWMgbGFuZ3VhZ2UsIGNvbnRlbnQgY2FuIGJlIGZldGNoZWQgZnJvbSBpdHMgZmFsbGJhY2sgbGFuZ3VhZ2VcbiAgICAgKiBAcmV0dXJucyB7QXNzZXRRdWVyeX1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suYXNzZXQoKS5pbmNsdWRlRmFsbGJhY2soKS5maW5kKCk7XG4gICAgICovXG4gICAgaW5jbHVkZUZhbGxiYWNrKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2ZhbGxiYWNrID0gJ3RydWUnO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBsb2NhbGVcbiAgICAgKiBAbWVtYmVyb2YgQXNzZXRRdWVyeVxuICAgICAqIEBkZXNjcmlwdGlvbiBUaGUgYXNzZXRzIHB1Ymxpc2hlZCBpbiB0aGUgbG9jYWxlIHdpbGwgYmUgZmV0Y2hlZFxuICAgICAqIEByZXR1cm5zIHtBc3NldFF1ZXJ5fVxuICAgICAqIEBleGFtcGxlXG4gICAgICogaW1wb3J0IGNvbnRlbnRzdGFjayBmcm9tICdAY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkaydcbiAgICAgKlxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKHsgYXBpS2V5OiBcImFwaUtleVwiLCBkZWxpdmVyeVRva2VuOiBcImRlbGl2ZXJ5VG9rZW5cIiwgZW52aXJvbm1lbnQ6IFwiZW52aXJvbm1lbnRcIiB9KTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBhd2FpdCBzdGFjay5hc3NldCgpLmxvY2FsZSgnZW4tdXMnKS5maW5kKCk7XG4gICAgICovXG4gICAgbG9jYWxlKGxvY2FsZSkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5sb2NhbGUgPSBsb2NhbGU7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cbmV4cG9ydHMuQXNzZXRRdWVyeSA9IEFzc2V0UXVlcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3NldC1xdWVyeS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJBc3NldFF1ZXJ5IiwiYmFzZV9xdWVyeV8xIiwicmVxdWlyZSIsIkJhc2VRdWVyeSIsImNvbnN0cnVjdG9yIiwiY2xpZW50IiwiX2NsaWVudCIsIl91cmxQYXRoIiwidmVyc2lvbiIsIl9xdWVyeVBhcmFtcyIsIlN0cmluZyIsImluY2x1ZGVEaW1lbnNpb24iLCJpbmNsdWRlX2RpbWVuc2lvbiIsImluY2x1ZGVCcmFuY2giLCJpbmNsdWRlX2JyYW5jaCIsImluY2x1ZGVNZXRhZGF0YSIsImluY2x1ZGVfbWV0YWRhdGEiLCJyZWxhdGl2ZVVybHMiLCJyZWxhdGl2ZV91cmwiLCJpbmNsdWRlRmFsbGJhY2siLCJpbmNsdWRlX2ZhbGxiYWNrIiwibG9jYWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset-query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Asset = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nclass Asset {\n    constructor(client, assetUid){\n        this._queryParams = {};\n        this._client = client;\n        this._urlPath = `/assets/${assetUid}`;\n    }\n    /**\n     * @method includeFallback\n     * @memberof Asset\n     * @description When an entry is not published in a specific language, content can be fetched from its fallback language\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').includeFallback().fetch();\n     */ includeFallback() {\n        this._queryParams.include_fallback = \"true\";\n        return this;\n    }\n    /**\n     * @method includeMetadata\n     * @memberof Entries\n     * @description Include the metadata for getting metadata content for the entry.\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').includeMetadata().fetch();\n     */ includeMetadata() {\n        this._queryParams.include_metadata = \"true\";\n        return this;\n    }\n    /**\n     * @method includeDimension\n     * @memberof Asset\n     * @description Includes the dimensions (height and width) of the image in result\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').includeDimension().fetch();\n     */ includeDimension() {\n        this._queryParams.include_dimension = \"true\";\n        return this;\n    }\n    /**\n     * @method includeBranch\n     * @memberof Asset\n     * @description Includes the branch in result\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').includeBranch().fetch();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method relativeUrls\n     * @memberof Asset\n     * @description Includes the relative URLs of the asset in result\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').relativeUrls().fetch();\n     */ relativeUrls() {\n        this._queryParams.relative_urls = \"true\";\n        return this;\n    }\n    /**\n     * @method version\n     * @memberof Asset\n     * @description Retrieve a specific version of an asset in result\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').version(1).fetch();\n     */ version(version) {\n        this._queryParams.version = String(version);\n        return this;\n    }\n    /**\n     * @method locale\n     * @memberof Asset\n     * @description The assets published in the locale will be fetched\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').locale('en-us').fetch();\n     */ locale(locale) {\n        this._queryParams.locale = locale;\n        return this;\n    }\n    /**\n     * @method fetch\n     * @memberof Asset\n     * @description Fetches the asset data on the basis of the asset uid\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').fetch();\n     */ fetch() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, this._queryParams);\n            if (response.asset) return response.asset;\n            return response;\n        });\n    }\n}\nexports.Asset = Asset; //# sourceMappingURL=asset.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BaseQuery = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nconst pagination_1 = __webpack_require__(/*! ./pagination */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/pagination.js\");\nclass BaseQuery extends pagination_1.Pagination {\n    constructor(){\n        super(...arguments);\n        this._parameters = {}; // Params of query class ?query={}\n    }\n    /**\n     * @method includeCount\n     * @memberof BaseQuery\n     * @description Retrieve count and data of objects in result\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.includeCount().find()\n     * // OR\n     * const asset = await stack.asset().includeCount().find()\n     *\n     * @returns {BaseQuery}\n     */ includeCount() {\n        this._queryParams.include_count = \"true\";\n        return this;\n    }\n    /**\n     * @method orderByAscending\n     * @memberof BaseQuery\n     * @description Sorts the results in ascending order based on the specified field UID.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.orderByAscending(\"field_uid\").find()\n     * // OR\n     * const asset = await stack.asset().orderByAscending().find()\n     *\n     * @returns {BaseQuery}\n     */ orderByAscending(key) {\n        this._queryParams.asc = key;\n        return this;\n    }\n    /**\n     * @method orderByDescending\n     * @memberof BaseQuery\n     * @description Sorts the results in descending order based on the specified key.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.orderByDescending(\"field_uid\").find()\n     * // OR\n     * const asset = await stack.asset().orderByDescending().find()\n     *\n     * @returns {BaseQuery}\n     */ orderByDescending(key) {\n        this._queryParams.desc = key;\n        return this;\n    }\n    /**\n     * @method limit\n     * @memberof BaseQuery\n     * @description Returns a specific number of entries based on the set limit\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.limit(\"limit_value\").find()\n     * // OR\n     * const asset = await stack.asset().limit(5).find()\n     *\n     * @returns {BaseQuery}\n     */ limit(key) {\n        this._queryParams.limit = key;\n        return this;\n    }\n    /**\n     * @method skip\n     * @memberof BaseQuery\n     * @description Skips at specific number of entries.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.skip(\"skip_value\").find()\n     * // OR\n     * const asset = await stack.asset().skip(5).find()\n     *\n     * @returns {BaseQuery}\n     */ skip(key) {\n        this._queryParams.skip = key;\n        return this;\n    }\n    /**\n     * @method param\n     * @memberof BaseQuery\n     * @description Adds query parameters to the URL.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.param(\"key\", \"value\").find()\n     * // OR\n     * const asset = await stack.asset().param(\"key\", \"value\").find()\n     *\n     * @returns {BaseQuery}\n     */ param(key, value) {\n        this._queryParams[key] = value;\n        return this;\n    }\n    /**\n     * @method addParams\n     * @memberof BaseQuery\n     * @description Adds a query parameter to the query.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.addParams({\"key\": \"value\"}).find()\n     * // OR\n     * const asset = await stack.asset().addParams({\"key\": \"value\"}).find()\n     *\n     * @returns {BaseQuery}\n     */ addParams(paramObj) {\n        this._queryParams = Object.assign(Object.assign({}, this._queryParams), paramObj);\n        return this;\n    }\n    /**\n     * @method removeParam\n     * @memberof BaseQuery\n     * @description Removes a query parameter from the query.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.removeParam(\"query_param_key\").find()\n     * // OR\n     * const asset = await stack.asset().removeParam(\"query_param_key\").find()\n     *\n     * @returns {BaseQuery}\n     */ removeParam(key) {\n        delete this._queryParams[key];\n        return this;\n    }\n    /**\n     * @method find\n     * @memberof AssetQuery\n     * @description The assets of the stack will be fetched\n     * @returns {Collection}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().find();\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentType1Uid\").entry().query().find();\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset(asset_uid).fetch();\n     */ find() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            let requestParams = this._queryParams;\n            if (Object.keys(this._parameters)) requestParams = Object.assign(Object.assign({}, this._queryParams), {\n                query: Object.assign({}, this._parameters)\n            });\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, requestParams);\n            return response;\n        });\n    }\n}\nexports.BaseQuery = BaseQuery; //# sourceMappingURL=base-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/cache.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/cache.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// import { PersistanceStore } from '../persistance';\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.handleRequest = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst persistance_1 = __webpack_require__(/*! ../persistance */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\");\nfunction handleRequest(cacheOptions, apiKey, defaultAdapter, resolve, reject, config) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const cacheStore = new persistance_1.PersistanceStore(cacheOptions);\n        switch(cacheOptions.policy){\n            case types_1.Policy.NETWORK_ELSE_CACHE:\n                {\n                    const apiResponse = yield defaultAdapter(config);\n                    if (apiResponse.data) {\n                        cacheStore.setItem(apiKey, apiResponse.data, config.contentTypeUid, cacheOptions.maxAge);\n                        return resolve(apiResponse.data);\n                    } else {\n                        const cacheResponse = cacheStore.getItem(apiKey, config.contentTypeUid);\n                        if (cacheResponse) return resolve({\n                            data: cacheResponse,\n                            status: 200,\n                            statusText: \"OK\",\n                            headers: {},\n                            config: {}\n                        });\n                    }\n                    return reject(apiResponse);\n                }\n            case types_1.Policy.CACHE_THEN_NETWORK:\n                {\n                    const cacheResponse = cacheStore.getItem(apiKey, config.contentTypeUid);\n                    if (cacheResponse) return resolve({\n                        data: cacheResponse,\n                        status: 200,\n                        statusText: \"OK\",\n                        headers: {},\n                        config: {}\n                    });\n                    const apiResponse = yield defaultAdapter(config);\n                    if (apiResponse.data) {\n                        cacheStore.setItem(apiKey, apiResponse.data, config.contentTypeUid, cacheOptions.maxAge);\n                        return resolve(apiResponse.data);\n                    } else {\n                        return reject(apiResponse);\n                    }\n                }\n            case types_1.Policy.CACHE_ELSE_NETWORK:\n                {\n                    const cacheResponse = cacheStore.getItem(apiKey, config.contentTypeUid);\n                    if (cacheResponse) return resolve({\n                        data: cacheResponse,\n                        status: 200,\n                        statusText: \"OK\",\n                        headers: {},\n                        config: {}\n                    });\n                    else {\n                        const apiResponse = yield defaultAdapter(config);\n                        if (apiResponse.data) {\n                            cacheStore.setItem(apiKey, apiResponse.data, config.contentTypeUid, cacheOptions.maxAge);\n                            return resolve(apiResponse.data);\n                        } else {\n                            return reject(apiResponse);\n                        }\n                    }\n                }\n        }\n    });\n}\nexports.handleRequest = handleRequest; //# sourceMappingURL=cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9jYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLHFEQUFxRDtBQUNyREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHFCQUFxQixHQUFHLEtBQUs7QUFDN0IsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsZ0JBQWdCRCxtQkFBT0EsQ0FBQyx5R0FBZ0I7QUFDOUMsTUFBTUUsVUFBVUYsbUJBQU9BLENBQUMsMEZBQVM7QUFDakMsU0FBU0YsY0FBY0ssWUFBWSxFQUFFQyxNQUFNLEVBQUVDLGNBQWMsRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLE1BQU07SUFDaEYsT0FBT1QsUUFBUVUsU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQzNDLE1BQU1DLGFBQWEsSUFBSVQsY0FBY1UsZ0JBQWdCLENBQUNSO1FBQ3RELE9BQVFBLGFBQWFTLE1BQU07WUFDdkIsS0FBS1YsUUFBUVcsTUFBTSxDQUFDQyxrQkFBa0I7Z0JBQUU7b0JBQ3BDLE1BQU1DLGNBQWMsTUFBTVYsZUFBZUc7b0JBQ3pDLElBQUlPLFlBQVlDLElBQUksRUFBRTt3QkFDbEJOLFdBQVdPLE9BQU8sQ0FBQ2IsUUFBUVcsWUFBWUMsSUFBSSxFQUFFUixPQUFPVSxjQUFjLEVBQUVmLGFBQWFnQixNQUFNO3dCQUN2RixPQUFPYixRQUFRUyxZQUFZQyxJQUFJO29CQUNuQyxPQUNLO3dCQUNELE1BQU1JLGdCQUFnQlYsV0FBV1csT0FBTyxDQUFDakIsUUFBUUksT0FBT1UsY0FBYzt3QkFDdEUsSUFBSUUsZUFDQSxPQUFPZCxRQUFROzRCQUNYVSxNQUFNSTs0QkFDTkUsUUFBUTs0QkFDUkMsWUFBWTs0QkFDWkMsU0FBUyxDQUFDOzRCQUNWaEIsUUFBUSxDQUFDO3dCQUNiO29CQUNSO29CQUNBLE9BQU9ELE9BQU9RO2dCQUNsQjtZQUNBLEtBQUtiLFFBQVFXLE1BQU0sQ0FBQ1ksa0JBQWtCO2dCQUFFO29CQUNwQyxNQUFNTCxnQkFBZ0JWLFdBQVdXLE9BQU8sQ0FBQ2pCLFFBQVFJLE9BQU9VLGNBQWM7b0JBQ3RFLElBQUlFLGVBQ0EsT0FBT2QsUUFBUTt3QkFDWFUsTUFBTUk7d0JBQ05FLFFBQVE7d0JBQ1JDLFlBQVk7d0JBQ1pDLFNBQVMsQ0FBQzt3QkFDVmhCLFFBQVEsQ0FBQztvQkFDYjtvQkFDSixNQUFNTyxjQUFjLE1BQU1WLGVBQWVHO29CQUN6QyxJQUFJTyxZQUFZQyxJQUFJLEVBQUU7d0JBQ2xCTixXQUFXTyxPQUFPLENBQUNiLFFBQVFXLFlBQVlDLElBQUksRUFBRVIsT0FBT1UsY0FBYyxFQUFFZixhQUFhZ0IsTUFBTTt3QkFDdkYsT0FBT2IsUUFBUVMsWUFBWUMsSUFBSTtvQkFDbkMsT0FDSzt3QkFDRCxPQUFPVCxPQUFPUTtvQkFDbEI7Z0JBQ0o7WUFDQSxLQUFLYixRQUFRVyxNQUFNLENBQUNhLGtCQUFrQjtnQkFBRTtvQkFDcEMsTUFBTU4sZ0JBQWdCVixXQUFXVyxPQUFPLENBQUNqQixRQUFRSSxPQUFPVSxjQUFjO29CQUN0RSxJQUFJRSxlQUNBLE9BQU9kLFFBQVE7d0JBQ1hVLE1BQU1JO3dCQUNORSxRQUFRO3dCQUNSQyxZQUFZO3dCQUNaQyxTQUFTLENBQUM7d0JBQ1ZoQixRQUFRLENBQUM7b0JBQ2I7eUJBQ0M7d0JBQ0QsTUFBTU8sY0FBYyxNQUFNVixlQUFlRzt3QkFDekMsSUFBSU8sWUFBWUMsSUFBSSxFQUFFOzRCQUNsQk4sV0FBV08sT0FBTyxDQUFDYixRQUFRVyxZQUFZQyxJQUFJLEVBQUVSLE9BQU9VLGNBQWMsRUFBRWYsYUFBYWdCLE1BQU07NEJBQ3ZGLE9BQU9iLFFBQVFTLFlBQVlDLElBQUk7d0JBQ25DLE9BQ0s7NEJBQ0QsT0FBT1QsT0FBT1E7d0JBQ2xCO29CQUNKO2dCQUNKO1FBQ0o7SUFDSjtBQUNKO0FBQ0FuQixxQkFBcUIsR0FBR0UsZUFDeEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9saWIvY2FjaGUuanM/YjAyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIGltcG9ydCB7IFBlcnNpc3RhbmNlU3RvcmUgfSBmcm9tICcuLi9wZXJzaXN0YW5jZSc7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZVJlcXVlc3QgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgcGVyc2lzdGFuY2VfMSA9IHJlcXVpcmUoXCIuLi9wZXJzaXN0YW5jZVwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmZ1bmN0aW9uIGhhbmRsZVJlcXVlc3QoY2FjaGVPcHRpb25zLCBhcGlLZXksIGRlZmF1bHRBZGFwdGVyLCByZXNvbHZlLCByZWplY3QsIGNvbmZpZykge1xuICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgY2FjaGVTdG9yZSA9IG5ldyBwZXJzaXN0YW5jZV8xLlBlcnNpc3RhbmNlU3RvcmUoY2FjaGVPcHRpb25zKTtcbiAgICAgICAgc3dpdGNoIChjYWNoZU9wdGlvbnMucG9saWN5KSB7XG4gICAgICAgICAgICBjYXNlIHR5cGVzXzEuUG9saWN5Lk5FVFdPUktfRUxTRV9DQUNIRToge1xuICAgICAgICAgICAgICAgIGNvbnN0IGFwaVJlc3BvbnNlID0geWllbGQgZGVmYXVsdEFkYXB0ZXIoY29uZmlnKTtcbiAgICAgICAgICAgICAgICBpZiAoYXBpUmVzcG9uc2UuZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZVN0b3JlLnNldEl0ZW0oYXBpS2V5LCBhcGlSZXNwb25zZS5kYXRhLCBjb25maWcuY29udGVudFR5cGVVaWQsIGNhY2hlT3B0aW9ucy5tYXhBZ2UpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShhcGlSZXNwb25zZS5kYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlUmVzcG9uc2UgPSBjYWNoZVN0b3JlLmdldEl0ZW0oYXBpS2V5LCBjb25maWcuY29udGVudFR5cGVVaWQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGVSZXNwb25zZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBjYWNoZVJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczoge30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KGFwaVJlc3BvbnNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5Qb2xpY3kuQ0FDSEVfVEhFTl9ORVRXT1JLOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FjaGVSZXNwb25zZSA9IGNhY2hlU3RvcmUuZ2V0SXRlbShhcGlLZXksIGNvbmZpZy5jb250ZW50VHlwZVVpZCk7XG4gICAgICAgICAgICAgICAgaWYgKGNhY2hlUmVzcG9uc2UpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGNhY2hlUmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZzoge30sXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGFwaVJlc3BvbnNlID0geWllbGQgZGVmYXVsdEFkYXB0ZXIoY29uZmlnKTtcbiAgICAgICAgICAgICAgICBpZiAoYXBpUmVzcG9uc2UuZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZVN0b3JlLnNldEl0ZW0oYXBpS2V5LCBhcGlSZXNwb25zZS5kYXRhLCBjb25maWcuY29udGVudFR5cGVVaWQsIGNhY2hlT3B0aW9ucy5tYXhBZ2UpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShhcGlSZXNwb25zZS5kYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZWplY3QoYXBpUmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5Qb2xpY3kuQ0FDSEVfRUxTRV9ORVRXT1JLOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FjaGVSZXNwb25zZSA9IGNhY2hlU3RvcmUuZ2V0SXRlbShhcGlLZXksIGNvbmZpZy5jb250ZW50VHlwZVVpZCk7XG4gICAgICAgICAgICAgICAgaWYgKGNhY2hlUmVzcG9uc2UpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGNhY2hlUmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZzoge30sXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBhcGlSZXNwb25zZSA9IHlpZWxkIGRlZmF1bHRBZGFwdGVyKGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhcGlSZXNwb25zZS5kYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZVN0b3JlLnNldEl0ZW0oYXBpS2V5LCBhcGlSZXNwb25zZS5kYXRhLCBjb25maWcuY29udGVudFR5cGVVaWQsIGNhY2hlT3B0aW9ucy5tYXhBZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoYXBpUmVzcG9uc2UuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KGFwaVJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5oYW5kbGVSZXF1ZXN0ID0gaGFuZGxlUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhY2hlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImhhbmRsZVJlcXVlc3QiLCJ0c2xpYl8xIiwicmVxdWlyZSIsInBlcnNpc3RhbmNlXzEiLCJ0eXBlc18xIiwiY2FjaGVPcHRpb25zIiwiYXBpS2V5IiwiZGVmYXVsdEFkYXB0ZXIiLCJyZXNvbHZlIiwicmVqZWN0IiwiY29uZmlnIiwiX19hd2FpdGVyIiwiY2FjaGVTdG9yZSIsIlBlcnNpc3RhbmNlU3RvcmUiLCJwb2xpY3kiLCJQb2xpY3kiLCJORVRXT1JLX0VMU0VfQ0FDSEUiLCJhcGlSZXNwb25zZSIsImRhdGEiLCJzZXRJdGVtIiwiY29udGVudFR5cGVVaWQiLCJtYXhBZ2UiLCJjYWNoZVJlc3BvbnNlIiwiZ2V0SXRlbSIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJoZWFkZXJzIiwiQ0FDSEVfVEhFTl9ORVRXT1JLIiwiQ0FDSEVfRUxTRV9ORVRXT1JLIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/cache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/content-type.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/content-type.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ContentType = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nconst entry_1 = __webpack_require__(/*! ./entry */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry.js\");\nconst entries_1 = __webpack_require__(/*! ./entries */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entries.js\");\nclass ContentType {\n    constructor(client, contentTypeUid){\n        this._queryParams = {};\n        this._client = client;\n        this._contentTypeUid = contentTypeUid;\n        this._urlPath = `/content_types/${this._contentTypeUid}`;\n    }\n    entry(uid) {\n        if (uid) return new entry_1.Entry(this._client, this._contentTypeUid, uid);\n        return new entries_1.Entries(this._client, this._contentTypeUid);\n    }\n    /**\n     * @method fetch\n     * @memberof ContentType\n     * @description Fetches the contentType data on the basis of the contentType uid\n     * @returns {ContentType}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(asset_uid).fetch();\n     */ fetch() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath);\n            if (response.content_type) return response.content_type;\n            return response;\n        });\n    }\n}\nexports.ContentType = ContentType; //# sourceMappingURL=content-type.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9jb250ZW50LXR5cGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHLEtBQUs7QUFDM0IsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUMseUZBQW9CO0FBQzNDLE1BQU1FLFVBQVVGLG1CQUFPQSxDQUFDLDBGQUFTO0FBQ2pDLE1BQU1HLFlBQVlILG1CQUFPQSxDQUFDLDhGQUFXO0FBQ3JDLE1BQU1GO0lBQ0ZNLFlBQVlDLE1BQU0sRUFBRUMsY0FBYyxDQUFFO1FBQ2hDLElBQUksQ0FBQ0MsWUFBWSxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFDQyxPQUFPLEdBQUdIO1FBQ2YsSUFBSSxDQUFDSSxlQUFlLEdBQUdIO1FBQ3ZCLElBQUksQ0FBQ0ksUUFBUSxHQUFHLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQ0QsZUFBZSxDQUFDLENBQUM7SUFDNUQ7SUFDQUUsTUFBTUMsR0FBRyxFQUFFO1FBQ1AsSUFBSUEsS0FDQSxPQUFPLElBQUlWLFFBQVFXLEtBQUssQ0FBQyxJQUFJLENBQUNMLE9BQU8sRUFBRSxJQUFJLENBQUNDLGVBQWUsRUFBRUc7UUFDakUsT0FBTyxJQUFJVCxVQUFVVyxPQUFPLENBQUMsSUFBSSxDQUFDTixPQUFPLEVBQUUsSUFBSSxDQUFDQyxlQUFlO0lBQ25FO0lBQ0E7Ozs7Ozs7Ozs7S0FVQyxHQUNETSxRQUFRO1FBQ0osT0FBT2hCLFFBQVFpQixTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDM0MsTUFBTUMsV0FBVyxNQUFNLENBQUMsR0FBR2hCLE9BQU9pQixPQUFPLEVBQUUsSUFBSSxDQUFDVixPQUFPLEVBQUUsSUFBSSxDQUFDRSxRQUFRO1lBQ3RFLElBQUlPLFNBQVNFLFlBQVksRUFDckIsT0FBT0YsU0FBU0UsWUFBWTtZQUNoQyxPQUFPRjtRQUNYO0lBQ0o7QUFDSjtBQUNBckIsbUJBQW1CLEdBQUdFLGFBQ3RCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL2NvbnRlbnQtdHlwZS5qcz8xNGQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db250ZW50VHlwZSA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQGNvbnRlbnRzdGFjay9jb3JlXCIpO1xuY29uc3QgZW50cnlfMSA9IHJlcXVpcmUoXCIuL2VudHJ5XCIpO1xuY29uc3QgZW50cmllc18xID0gcmVxdWlyZShcIi4vZW50cmllc1wiKTtcbmNsYXNzIENvbnRlbnRUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQsIGNvbnRlbnRUeXBlVWlkKSB7XG4gICAgICAgIHRoaXMuX3F1ZXJ5UGFyYW1zID0ge307XG4gICAgICAgIHRoaXMuX2NsaWVudCA9IGNsaWVudDtcbiAgICAgICAgdGhpcy5fY29udGVudFR5cGVVaWQgPSBjb250ZW50VHlwZVVpZDtcbiAgICAgICAgdGhpcy5fdXJsUGF0aCA9IGAvY29udGVudF90eXBlcy8ke3RoaXMuX2NvbnRlbnRUeXBlVWlkfWA7XG4gICAgfVxuICAgIGVudHJ5KHVpZCkge1xuICAgICAgICBpZiAodWlkKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBlbnRyeV8xLkVudHJ5KHRoaXMuX2NsaWVudCwgdGhpcy5fY29udGVudFR5cGVVaWQsIHVpZCk7XG4gICAgICAgIHJldHVybiBuZXcgZW50cmllc18xLkVudHJpZXModGhpcy5fY2xpZW50LCB0aGlzLl9jb250ZW50VHlwZVVpZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgZmV0Y2hcbiAgICAgKiBAbWVtYmVyb2YgQ29udGVudFR5cGVcbiAgICAgKiBAZGVzY3JpcHRpb24gRmV0Y2hlcyB0aGUgY29udGVudFR5cGUgZGF0YSBvbiB0aGUgYmFzaXMgb2YgdGhlIGNvbnRlbnRUeXBlIHVpZFxuICAgICAqIEByZXR1cm5zIHtDb250ZW50VHlwZX1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suY29udGVudFR5cGUoYXNzZXRfdWlkKS5mZXRjaCgpO1xuICAgICAqL1xuICAgIGZldGNoKCkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkICgwLCBjb3JlXzEuZ2V0RGF0YSkodGhpcy5fY2xpZW50LCB0aGlzLl91cmxQYXRoKTtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5jb250ZW50X3R5cGUpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmNvbnRlbnRfdHlwZTtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Db250ZW50VHlwZSA9IENvbnRlbnRUeXBlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGVudC10eXBlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNvbnRlbnRUeXBlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJjb3JlXzEiLCJlbnRyeV8xIiwiZW50cmllc18xIiwiY29uc3RydWN0b3IiLCJjbGllbnQiLCJjb250ZW50VHlwZVVpZCIsIl9xdWVyeVBhcmFtcyIsIl9jbGllbnQiLCJfY29udGVudFR5cGVVaWQiLCJfdXJsUGF0aCIsImVudHJ5IiwidWlkIiwiRW50cnkiLCJFbnRyaWVzIiwiZmV0Y2giLCJfX2F3YWl0ZXIiLCJyZXNwb25zZSIsImdldERhdGEiLCJjb250ZW50X3R5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/content-type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contentstack.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contentstack.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.stack = exports.Utils = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nconst cache_1 = __webpack_require__(/*! ./cache */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/cache.js\");\nconst stack_1 = __webpack_require__(/*! ./stack */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/stack.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/utils.js\");\nexports.Utils = tslib_1.__importStar(__webpack_require__(/*! @contentstack/utils */ \"(ssr)/./node_modules/@contentstack/utils/dist/index.es.js\"));\n/**\n * @method stack\n * @memberof Contentstack\n * @description Creates a stack instance\n * @param {StackConfig} config - config object for stack with apiKey, deliveryToken and environment as required fields\n *\n * @example\n * import contentstack from '@contentstack/delivery-sdk'\n * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n * @example\n * import contentstack from '@contentstack/delivery-sdk'\n * const stack = contentstack.Stack({\n *   apiKey: \"apiKey\",\n *   deliveryToken: \"deliveryToken\",\n *   environment: \"environment\",\n *   region:\"region\",\n *   locale:\"locale\",\n *   cacheOptions: {\n *    policy: Policy.CACHE_THEN_NETWORK,\n *    storeType: 'localStorage'\n *   }\n * }\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction stack(config) {\n    var _a, _b, _c, _d, _e;\n    let defaultConfig = {\n        defaultHostname: \"cdn.contentstack.io\",\n        headers: {},\n        params: {},\n        live_preview: {}\n    };\n    if (((_a = config.live_preview) === null || _a === void 0 ? void 0 : _a.enable) === true) {\n        if (((_b = config.live_preview) === null || _b === void 0 ? void 0 : _b.management_token) != null && ((_c = config.live_preview) === null || _c === void 0 ? void 0 : _c.preview_token) == null) {\n            config.host = \"api.contentstack.io\";\n            config.live_preview.host = config.host;\n        } else if (((_d = config.live_preview) === null || _d === void 0 ? void 0 : _d.preview_token) != null && ((_e = config.live_preview) === null || _e === void 0 ? void 0 : _e.management_token) == null) {\n            config.host = \"rest-preview.contentstack.com\";\n            config.live_preview.host = config.host;\n        }\n    } else config.host = defaultConfig.defaultHostname;\n    defaultConfig.live_preview = config.live_preview;\n    defaultConfig.defaultHostname = (0, utils_1.getHost)(config.region, config.host);\n    if (config.apiKey) {\n        defaultConfig.headers.api_key = config.apiKey;\n    } else {\n        throw new Error(\"API key for Stack is required.\");\n    }\n    if (config.deliveryToken) {\n        defaultConfig.headers.access_token = config.deliveryToken;\n    } else {\n        throw new Error(\"Delivery token for Stack is required.\");\n    }\n    if (config.environment) {\n        defaultConfig.params.environment = config.environment;\n    } else {\n        throw new Error(\"Environment for Stack is required\");\n    }\n    if (config.early_access) {\n        defaultConfig.headers[\"x-header-ea\"] = config.early_access.join(\",\");\n    }\n    // return new Stack(httpClient(defaultConfig), config);\n    const client = (0, core_1.httpClient)(defaultConfig);\n    if (config.logHandler) client.defaults.logHandler = config.logHandler;\n    if (config.cacheOptions && config.cacheOptions.policy !== types_1.Policy.IGNORE_CACHE) {\n        const defaultAdapter = client.defaults.adapter;\n        client.defaults.adapter = (adapterConfig)=>{\n            return new Promise((resolve, reject)=>tslib_1.__awaiter(this, void 0, void 0, function*() {\n                    if (config.cacheOptions) yield (0, cache_1.handleRequest)(config.cacheOptions, config.apiKey, defaultAdapter, resolve, reject, adapterConfig);\n                }));\n        };\n    }\n    // Retry policy handlers\n    const errorHandler = (error)=>{\n        (0, core_1.retryResponseErrorHandler)(error, config);\n    };\n    client.interceptors.request.use(core_1.retryRequestHandler);\n    client.interceptors.response.use(core_1.retryResponseHandler, errorHandler);\n    if (config.plugins) {\n        client.interceptors.request.use((reqConfig)=>{\n            if (config && config.plugins) config.plugins.forEach((pluginInstance)=>{\n                reqConfig = pluginInstance.onRequest(reqConfig);\n            });\n            return reqConfig;\n        });\n        client.interceptors.response.use((response)=>{\n            if (config && config.plugins) config.plugins.forEach((pluginInstance)=>{\n                response = pluginInstance.onResponse(response.request, response, response.data);\n            });\n            return response;\n        });\n    }\n    return new stack_1.Stack(client, config);\n}\nexports.stack = stack; //# sourceMappingURL=contentstack.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contentstack.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contenttype-query.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contenttype-query.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ContentTypeQuery = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nclass ContentTypeQuery {\n    constructor(client){\n        this._queryParams = {};\n        this._client = client;\n        this._urlPath = \"/content_types\";\n    }\n    /**\n     * @method includeGlobalFieldSchema\n     * @memberof ContentTypeQuery\n     * @description The assets published in the locale will be fetched\n     * @returns {ContentTypeQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const contentTypeQuery = stack.contentType();\n     * const result = await contentTypeQuery.includeGlobalFieldSchema().find();\n     */ includeGlobalFieldSchema() {\n        this._queryParams.include_global_field_schema = \"true\";\n        return this;\n    }\n    /**\n     * @method find\n     * @memberof ContentTypeQuery\n     * @description Fetches all contentTypes of the stack\n     * @returns {ContentTypeQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const contentTypeQuery = stack.contentType();\n     * const result = await contentTypeQuery.find();\n     */ find() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, this._queryParams);\n            return response;\n        });\n    }\n}\nexports.ContentTypeQuery = ContentTypeQuery; //# sourceMappingURL=contenttype-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9jb250ZW50dHlwZS1xdWVyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsd0JBQXdCLEdBQUcsS0FBSztBQUNoQyxNQUFNRyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQixNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQyx5RkFBb0I7QUFDM0MsTUFBTUY7SUFDRkksWUFBWUMsTUFBTSxDQUFFO1FBQ2hCLElBQUksQ0FBQ0MsWUFBWSxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFDQyxPQUFPLEdBQUdGO1FBQ2YsSUFBSSxDQUFDRyxRQUFRLEdBQUc7SUFDcEI7SUFDQTs7Ozs7Ozs7Ozs7S0FXQyxHQUNEQywyQkFBMkI7UUFDdkIsSUFBSSxDQUFDSCxZQUFZLENBQUNJLDJCQUEyQixHQUFHO1FBQ2hELE9BQU8sSUFBSTtJQUNmO0lBQ0E7Ozs7Ozs7Ozs7O0tBV0MsR0FDREMsT0FBTztRQUNILE9BQU9WLFFBQVFXLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUMzQyxNQUFNQyxXQUFXLE1BQU0sQ0FBQyxHQUFHVixPQUFPVyxPQUFPLEVBQUUsSUFBSSxDQUFDUCxPQUFPLEVBQUUsSUFBSSxDQUFDQyxRQUFRLEVBQUUsSUFBSSxDQUFDRixZQUFZO1lBQ3pGLE9BQU9PO1FBQ1g7SUFDSjtBQUNKO0FBQ0FmLHdCQUF3QixHQUFHRSxrQkFDM0IsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9saWIvY29udGVudHR5cGUtcXVlcnkuanM/MGRiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29udGVudFR5cGVRdWVyeSA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQGNvbnRlbnRzdGFjay9jb3JlXCIpO1xuY2xhc3MgQ29udGVudFR5cGVRdWVyeSB7XG4gICAgY29uc3RydWN0b3IoY2xpZW50KSB7XG4gICAgICAgIHRoaXMuX3F1ZXJ5UGFyYW1zID0ge307XG4gICAgICAgIHRoaXMuX2NsaWVudCA9IGNsaWVudDtcbiAgICAgICAgdGhpcy5fdXJsUGF0aCA9ICcvY29udGVudF90eXBlcyc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaW5jbHVkZUdsb2JhbEZpZWxkU2NoZW1hXG4gICAgICogQG1lbWJlcm9mIENvbnRlbnRUeXBlUXVlcnlcbiAgICAgKiBAZGVzY3JpcHRpb24gVGhlIGFzc2V0cyBwdWJsaXNoZWQgaW4gdGhlIGxvY2FsZSB3aWxsIGJlIGZldGNoZWRcbiAgICAgKiBAcmV0dXJucyB7Q29udGVudFR5cGVRdWVyeX1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgY29udGVudFR5cGVRdWVyeSA9IHN0YWNrLmNvbnRlbnRUeXBlKCk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgY29udGVudFR5cGVRdWVyeS5pbmNsdWRlR2xvYmFsRmllbGRTY2hlbWEoKS5maW5kKCk7XG4gICAgICovXG4gICAgaW5jbHVkZUdsb2JhbEZpZWxkU2NoZW1hKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2dsb2JhbF9maWVsZF9zY2hlbWEgPSAndHJ1ZSc7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGZpbmRcbiAgICAgKiBAbWVtYmVyb2YgQ29udGVudFR5cGVRdWVyeVxuICAgICAqIEBkZXNjcmlwdGlvbiBGZXRjaGVzIGFsbCBjb250ZW50VHlwZXMgb2YgdGhlIHN0YWNrXG4gICAgICogQHJldHVybnMge0NvbnRlbnRUeXBlUXVlcnl9XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBpbXBvcnQgY29udGVudHN0YWNrIGZyb20gJ0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrJ1xuICAgICAqXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soeyBhcGlLZXk6IFwiYXBpS2V5XCIsIGRlbGl2ZXJ5VG9rZW46IFwiZGVsaXZlcnlUb2tlblwiLCBlbnZpcm9ubWVudDogXCJlbnZpcm9ubWVudFwiIH0pO1xuICAgICAqIGNvbnN0IGNvbnRlbnRUeXBlUXVlcnkgPSBzdGFjay5jb250ZW50VHlwZSgpO1xuICAgICAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbnRlbnRUeXBlUXVlcnkuZmluZCgpO1xuICAgICAqL1xuICAgIGZpbmQoKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgKDAsIGNvcmVfMS5nZXREYXRhKSh0aGlzLl9jbGllbnQsIHRoaXMuX3VybFBhdGgsIHRoaXMuX3F1ZXJ5UGFyYW1zKTtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Db250ZW50VHlwZVF1ZXJ5ID0gQ29udGVudFR5cGVRdWVyeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRlbnR0eXBlLXF1ZXJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNvbnRlbnRUeXBlUXVlcnkiLCJ0c2xpYl8xIiwicmVxdWlyZSIsImNvcmVfMSIsImNvbnN0cnVjdG9yIiwiY2xpZW50IiwiX3F1ZXJ5UGFyYW1zIiwiX2NsaWVudCIsIl91cmxQYXRoIiwiaW5jbHVkZUdsb2JhbEZpZWxkU2NoZW1hIiwiaW5jbHVkZV9nbG9iYWxfZmllbGRfc2NoZW1hIiwiZmluZCIsIl9fYXdhaXRlciIsInJlc3BvbnNlIiwiZ2V0RGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contenttype-query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entries.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entries.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Entries = void 0;\nconst entry_queryable_1 = __webpack_require__(/*! ./entry-queryable */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry-queryable.js\");\nconst query_1 = __webpack_require__(/*! ./query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js\");\nclass Entries extends entry_queryable_1.EntryQueryable {\n    constructor(client, contentTypeUid){\n        super();\n        this._client = client;\n        this._contentTypeUid = contentTypeUid;\n        this._urlPath = `/content_types/${this._contentTypeUid}/entries`;\n    }\n    /**\n     * @method includeFallback\n     * @memberof Entries\n     * @description When an entry is not published in a specific language, content can be fetched from its fallback language\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeFallback().find();\n     */ includeFallback() {\n        this._queryParams.include_fallback = \"true\";\n        return this;\n    }\n    /**\n     * @method includeMetadata\n     * @memberof Entries\n     * @description Include the metadata for getting metadata content for the entry.\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeMetadata().find();\n     */ includeMetadata() {\n        this._queryParams.include_metadata = \"true\";\n        return this;\n    }\n    /**\n     * @method includeEmbeddedItems\n     * @memberof Entries\n     * @description Include Embedded Objects (Entries and Assets) along with entry/entries details.\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeEmbeddedItems().fetch();\n     */ includeEmbeddedItems() {\n        this._queryParams[\"include_embedded_items[]\"] = \"BASE\";\n        return this;\n    }\n    /**\n     * @method includeContentType\n     * @memberof Entries\n     * @description IInclude the details of the content type along with the entries details\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeContentType().fetch();\n     */ includeContentType() {\n        this._queryParams.include_content_type = \"true\";\n        return this;\n    }\n    /**\n     * @method includeBranch\n     * @memberof Entries\n     * @description Includes the branch in result\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeBranch().find();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method includeReference\n     * @memberof Entries\n     * @description To include the content of the referred entries in your response,\n     * you need to use the include[] parameter and specify the UID of the reference field as value.\n     * This function sets the include parameter to a reference field UID in the API request.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().include_reference(\"brand\")\n     * const res = await query.find()\n     *\n     * @param {string} referenceFieldUid - UID of the reference field to include.\n     * @returns {Entries} - Returns the Entries instance for chaining.\n     */ includeReference(referenceFieldUid) {\n        this._queryParams[\"include[]\"] = referenceFieldUid;\n        return this;\n    }\n    /**\n     * @method includeReferenceContentTypeUID\n     * @memberof Entries\n     * @description This method also includes the content type UIDs of the referenced entries returned in the response.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().includeReferenceContentTypeUID()\n     * const res = await query.find()\n     *\n     * @returns {Entries} - Returns the Entries instance for chaining.\n     */ includeReferenceContentTypeUID() {\n        this._queryParams.include_reference_content_type_uid = \"true\";\n        return this;\n    }\n    /**\n     * @method includeSchema\n     * @memberof Entries\n     * @description This method also includes the content type UIDs of the referenced entries returned in the response.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().includeSchema()\n     * const res = await query.find()\n     *\n     * @returns {Entries} - Returns the Entries instance for chaining.\n     */ includeSchema() {\n        this._queryParams.include_schema = \"true\";\n        return this;\n    }\n    /**\n     * @method locale\n     * @memberof Entry\n     * @description The assets published in the locale will be fetched\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentTypeUid\").entry().locale('en-us').find();\n     */ locale(locale) {\n        this._queryParams.locale = locale;\n        return this;\n    }\n    /**\n     * @method query\n     * @memberof Entries\n     * @description Fetches the Entry data on the basis of the asset uid\n     * @returns {Collection}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentTypeUid\").entry().query();\n     */ query(queryObj) {\n        if (queryObj) return new query_1.Query(this._client, this._parameters, this._queryParams, this._contentTypeUid, queryObj);\n        return new query_1.Query(this._client, this._parameters, this._queryParams, this._contentTypeUid);\n    }\n}\nexports.Entries = Entries; //# sourceMappingURL=entries.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry-queryable.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry-queryable.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.EntryQueryable = void 0;\nconst base_query_1 = __webpack_require__(/*! ./base-query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\");\n/* eslint-disable @cspell/spellchecker */ class EntryQueryable extends base_query_1.BaseQuery {\n    /**\n     * @method only\n     * @memberof EntryQueryable\n     * @description Selects specific field/fields of an entry\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentTypeUid\").entry().only(\"fieldUID\").find()\n     *\n     * @param {string} fieldUid - field uid to select\n     * @returns {EntryQueryable} - returns EntryQueryable object for chaining method calls\n     */ only(fieldUid) {\n        this._queryParams[\"only[BASE][]\"] = fieldUid;\n        return this;\n    }\n    /**\n     * @method except\n     * @memberof EntryQueryable\n     * @description Excludes specific field/fields of an entry\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentTypeUid\").entry().except(\"fieldUID\").find()\n     *\n     * @param {string} fieldUid - field uid to exclude\n     * @returns {EntryQueryable} - returns EntryQueryable object for chaining method calls\n     */ except(fieldUid) {\n        this._queryParams[\"except[BASE][]\"] = fieldUid;\n        return this;\n    }\n}\nexports.EntryQueryable = EntryQueryable; //# sourceMappingURL=entry-queryable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9lbnRyeS1xdWVyeWFibGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHLEtBQUs7QUFDOUIsTUFBTUcsZUFBZUMsbUJBQU9BLENBQUMsb0dBQWM7QUFDM0MsdUNBQXVDLEdBQ3ZDLE1BQU1GLHVCQUF1QkMsYUFBYUUsU0FBUztJQUMvQzs7Ozs7Ozs7Ozs7O0tBWUMsR0FDREMsS0FBS0MsUUFBUSxFQUFFO1FBQ1gsSUFBSSxDQUFDQyxZQUFZLENBQUMsZUFBZSxHQUFHRDtRQUNwQyxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7Ozs7S0FZQyxHQUNERSxPQUFPRixRQUFRLEVBQUU7UUFDYixJQUFJLENBQUNDLFlBQVksQ0FBQyxpQkFBaUIsR0FBR0Q7UUFDdEMsT0FBTyxJQUFJO0lBQ2Y7QUFDSjtBQUNBUCxzQkFBc0IsR0FBR0UsZ0JBQ3pCLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL2VudHJ5LXF1ZXJ5YWJsZS5qcz8yODRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FbnRyeVF1ZXJ5YWJsZSA9IHZvaWQgMDtcbmNvbnN0IGJhc2VfcXVlcnlfMSA9IHJlcXVpcmUoXCIuL2Jhc2UtcXVlcnlcIik7XG4vKiBlc2xpbnQtZGlzYWJsZSBAY3NwZWxsL3NwZWxsY2hlY2tlciAqL1xuY2xhc3MgRW50cnlRdWVyeWFibGUgZXh0ZW5kcyBiYXNlX3F1ZXJ5XzEuQmFzZVF1ZXJ5IHtcbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIG9ubHlcbiAgICAgKiBAbWVtYmVyb2YgRW50cnlRdWVyeWFibGVcbiAgICAgKiBAZGVzY3JpcHRpb24gU2VsZWN0cyBzcGVjaWZpYyBmaWVsZC9maWVsZHMgb2YgYW4gZW50cnlcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suY29udGVudFR5cGUoXCJjb250ZW50VHlwZVVpZFwiKS5lbnRyeSgpLm9ubHkoXCJmaWVsZFVJRFwiKS5maW5kKClcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmaWVsZFVpZCAtIGZpZWxkIHVpZCB0byBzZWxlY3RcbiAgICAgKiBAcmV0dXJucyB7RW50cnlRdWVyeWFibGV9IC0gcmV0dXJucyBFbnRyeVF1ZXJ5YWJsZSBvYmplY3QgZm9yIGNoYWluaW5nIG1ldGhvZCBjYWxsc1xuICAgICAqL1xuICAgIG9ubHkoZmllbGRVaWQpIHtcbiAgICAgICAgdGhpcy5fcXVlcnlQYXJhbXNbJ29ubHlbQkFTRV1bXSddID0gZmllbGRVaWQ7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGV4Y2VwdFxuICAgICAqIEBtZW1iZXJvZiBFbnRyeVF1ZXJ5YWJsZVxuICAgICAqIEBkZXNjcmlwdGlvbiBFeGNsdWRlcyBzcGVjaWZpYyBmaWVsZC9maWVsZHMgb2YgYW4gZW50cnlcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suY29udGVudFR5cGUoXCJjb250ZW50VHlwZVVpZFwiKS5lbnRyeSgpLmV4Y2VwdChcImZpZWxkVUlEXCIpLmZpbmQoKVxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGZpZWxkVWlkIC0gZmllbGQgdWlkIHRvIGV4Y2x1ZGVcbiAgICAgKiBAcmV0dXJucyB7RW50cnlRdWVyeWFibGV9IC0gcmV0dXJucyBFbnRyeVF1ZXJ5YWJsZSBvYmplY3QgZm9yIGNoYWluaW5nIG1ldGhvZCBjYWxsc1xuICAgICAqL1xuICAgIGV4Y2VwdChmaWVsZFVpZCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtc1snZXhjZXB0W0JBU0VdW10nXSA9IGZpZWxkVWlkO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5leHBvcnRzLkVudHJ5UXVlcnlhYmxlID0gRW50cnlRdWVyeWFibGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnRyeS1xdWVyeWFibGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRW50cnlRdWVyeWFibGUiLCJiYXNlX3F1ZXJ5XzEiLCJyZXF1aXJlIiwiQmFzZVF1ZXJ5Iiwib25seSIsImZpZWxkVWlkIiwiX3F1ZXJ5UGFyYW1zIiwiZXhjZXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry-queryable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Entry = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nclass Entry {\n    constructor(client, contentTypeUid, entryUid){\n        this._queryParams = {};\n        this._client = client;\n        this._contentTypeUid = contentTypeUid;\n        this._entryUid = entryUid;\n        this._urlPath = `/content_types/${this._contentTypeUid}/entries/${this._entryUid}`;\n    }\n    /**\n     * @method includeFallback\n     * @memberof Entry\n     * @description When an entry is not published in a specific language, content can be fetched from its fallback language\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeFallback().fetch();\n     */ includeFallback() {\n        this._queryParams.include_fallback = \"true\";\n        return this;\n    }\n    /**\n     * @method includeMetadata\n     * @memberof Entry\n     * @description Include the metadata for getting metadata content for the entry.\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeMetadata().fetch();\n     */ includeMetadata() {\n        this._queryParams.include_metadata = \"true\";\n        return this;\n    }\n    /**\n     * @method includeEmbeddedItems\n     * @memberof Entry\n     * @description Include Embedded Objects (Entry and Assets) along with entry/entries details.\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeEmbeddedItems().fetch();\n     */ includeEmbeddedItems() {\n        this._queryParams[\"include_embedded_items[]\"] = \"BASE\";\n        return this;\n    }\n    /**\n     * @method includeContentType\n     * @memberof Entry\n     * @description IInclude the details of the content type along with the entries details\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeContentType().fetch();\n     */ includeContentType() {\n        this._queryParams.include_content_type = \"true\";\n        return this;\n    }\n    /**\n     * @method includeBranch\n     * @memberof Entry\n     * @description Includes the branch in result\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeBranch().fetch();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method locale\n     * @memberof Entry\n     * @description The assets published in the locale will be fetched\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.assetQuery().locale('en-us').fetch();\n     */ locale(locale) {\n        this._queryParams.locale = locale;\n        return this;\n    }\n    /**\n     * @method fetch\n     * @memberof Entry\n     * @description Fetches the entry data on the basis of the entry uid\n     * @returns {Collection}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).fetch();\n     */ fetch() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, this._queryParams);\n            if (response.entry) return response.entry;\n            return response;\n        });\n    }\n}\nexports.Entry = Entry; //# sourceMappingURL=entry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field-query.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field-query.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GlobalFieldQuery = void 0;\nconst base_query_1 = __webpack_require__(/*! ./base-query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\");\nclass GlobalFieldQuery extends base_query_1.BaseQuery {\n    constructor(client){\n        super();\n        this._client = client;\n        this._urlPath = \"/global_fields\";\n    }\n    /**\n     * @method includeBranch\n     * @memberof GlobalFieldQuery\n     * @description Includes the _branch top-level key in the response\n     * @returns {GlobalFieldQuery}\n     * @example\n     * const stack = contentstack.Stack('apiKey','deliveryToken','environment');\n     * const globalFields = stack.globalFields();\n     * const result = globalFields.includeBranch().find();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n}\nexports.GlobalFieldQuery = GlobalFieldQuery; //# sourceMappingURL=global-field-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9nbG9iYWwtZmllbGQtcXVlcnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHdCQUF3QixHQUFHLEtBQUs7QUFDaEMsTUFBTUcsZUFBZUMsbUJBQU9BLENBQUMsb0dBQWM7QUFDM0MsTUFBTUYseUJBQXlCQyxhQUFhRSxTQUFTO0lBQ2pEQyxZQUFZQyxNQUFNLENBQUU7UUFDaEIsS0FBSztRQUNMLElBQUksQ0FBQ0MsT0FBTyxHQUFHRDtRQUNmLElBQUksQ0FBQ0UsUUFBUSxHQUFHO0lBQ3BCO0lBQ0E7Ozs7Ozs7OztLQVNDLEdBQ0RDLGdCQUFnQjtRQUNaLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxjQUFjLEdBQUc7UUFDbkMsT0FBTyxJQUFJO0lBQ2Y7QUFDSjtBQUNBWix3QkFBd0IsR0FBR0Usa0JBQzNCLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL2dsb2JhbC1maWVsZC1xdWVyeS5qcz8zY2NjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HbG9iYWxGaWVsZFF1ZXJ5ID0gdm9pZCAwO1xuY29uc3QgYmFzZV9xdWVyeV8xID0gcmVxdWlyZShcIi4vYmFzZS1xdWVyeVwiKTtcbmNsYXNzIEdsb2JhbEZpZWxkUXVlcnkgZXh0ZW5kcyBiYXNlX3F1ZXJ5XzEuQmFzZVF1ZXJ5IHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5fY2xpZW50ID0gY2xpZW50O1xuICAgICAgICB0aGlzLl91cmxQYXRoID0gJy9nbG9iYWxfZmllbGRzJztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBpbmNsdWRlQnJhbmNoXG4gICAgICogQG1lbWJlcm9mIEdsb2JhbEZpZWxkUXVlcnlcbiAgICAgKiBAZGVzY3JpcHRpb24gSW5jbHVkZXMgdGhlIF9icmFuY2ggdG9wLWxldmVsIGtleSBpbiB0aGUgcmVzcG9uc2VcbiAgICAgKiBAcmV0dXJucyB7R2xvYmFsRmllbGRRdWVyeX1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKCdhcGlLZXknLCdkZWxpdmVyeVRva2VuJywnZW52aXJvbm1lbnQnKTtcbiAgICAgKiBjb25zdCBnbG9iYWxGaWVsZHMgPSBzdGFjay5nbG9iYWxGaWVsZHMoKTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBnbG9iYWxGaWVsZHMuaW5jbHVkZUJyYW5jaCgpLmZpbmQoKTtcbiAgICAgKi9cbiAgICBpbmNsdWRlQnJhbmNoKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2JyYW5jaCA9ICd0cnVlJztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5HbG9iYWxGaWVsZFF1ZXJ5ID0gR2xvYmFsRmllbGRRdWVyeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbC1maWVsZC1xdWVyeS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHbG9iYWxGaWVsZFF1ZXJ5IiwiYmFzZV9xdWVyeV8xIiwicmVxdWlyZSIsIkJhc2VRdWVyeSIsImNvbnN0cnVjdG9yIiwiY2xpZW50IiwiX2NsaWVudCIsIl91cmxQYXRoIiwiaW5jbHVkZUJyYW5jaCIsIl9xdWVyeVBhcmFtcyIsImluY2x1ZGVfYnJhbmNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field-query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GlobalField = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nclass GlobalField {\n    constructor(clientConfig, globalFieldUid){\n        this._queryParams = {};\n        this._client = clientConfig;\n        this._urlPath = `/global_fields/${globalFieldUid}`;\n    }\n    /**\n     * @method includeBranch\n     * @memberof GlobalField\n     * @description Includes the _branch top-level key in the response\n     * @returns {GlobalField}\n     * @example\n     * const stack = contentstack.Stack('apiKey','deliveryToken','environment');\n     * const globalField = stack.globalField('global_field_uid');\n     * const result = globalField.includeBranch().fetch();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method find\n     * @memberof GlobalField\n     * @description Fetches comprehensive details of a specific global field\n     * @returns {GlobalField}\n     * @example\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const globalField = stack.globalField('global_field_uid');\n     * const result = globalField.fetch();\n     */ fetch() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, this._queryParams);\n            return response.global_field;\n        });\n    }\n}\nexports.GlobalField = GlobalField; //# sourceMappingURL=global-field.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9nbG9iYWwtZmllbGQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHLEtBQUs7QUFDM0IsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUMseUZBQW9CO0FBQzNDLE1BQU1GO0lBQ0ZJLFlBQVlDLFlBQVksRUFBRUMsY0FBYyxDQUFFO1FBQ3RDLElBQUksQ0FBQ0MsWUFBWSxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFDQyxPQUFPLEdBQUdIO1FBQ2YsSUFBSSxDQUFDSSxRQUFRLEdBQUcsQ0FBQyxlQUFlLEVBQUVILGVBQWUsQ0FBQztJQUN0RDtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNESSxnQkFBZ0I7UUFDWixJQUFJLENBQUNILFlBQVksQ0FBQ0ksY0FBYyxHQUFHO1FBQ25DLE9BQU8sSUFBSTtJQUNmO0lBQ0E7Ozs7Ozs7OztLQVNDLEdBQ0RDLFFBQVE7UUFDSixPQUFPWCxRQUFRWSxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDM0MsTUFBTUMsV0FBVyxNQUFNLENBQUMsR0FBR1gsT0FBT1ksT0FBTyxFQUFFLElBQUksQ0FBQ1AsT0FBTyxFQUFFLElBQUksQ0FBQ0MsUUFBUSxFQUFFLElBQUksQ0FBQ0YsWUFBWTtZQUN6RixPQUFPTyxTQUFTRSxZQUFZO1FBQ2hDO0lBQ0o7QUFDSjtBQUNBbEIsbUJBQW1CLEdBQUdFLGFBQ3RCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL2dsb2JhbC1maWVsZC5qcz9iMDNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HbG9iYWxGaWVsZCA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQGNvbnRlbnRzdGFjay9jb3JlXCIpO1xuY2xhc3MgR2xvYmFsRmllbGQge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudENvbmZpZywgZ2xvYmFsRmllbGRVaWQpIHtcbiAgICAgICAgdGhpcy5fcXVlcnlQYXJhbXMgPSB7fTtcbiAgICAgICAgdGhpcy5fY2xpZW50ID0gY2xpZW50Q29uZmlnO1xuICAgICAgICB0aGlzLl91cmxQYXRoID0gYC9nbG9iYWxfZmllbGRzLyR7Z2xvYmFsRmllbGRVaWR9YDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBpbmNsdWRlQnJhbmNoXG4gICAgICogQG1lbWJlcm9mIEdsb2JhbEZpZWxkXG4gICAgICogQGRlc2NyaXB0aW9uIEluY2x1ZGVzIHRoZSBfYnJhbmNoIHRvcC1sZXZlbCBrZXkgaW4gdGhlIHJlc3BvbnNlXG4gICAgICogQHJldHVybnMge0dsb2JhbEZpZWxkfVxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soJ2FwaUtleScsJ2RlbGl2ZXJ5VG9rZW4nLCdlbnZpcm9ubWVudCcpO1xuICAgICAqIGNvbnN0IGdsb2JhbEZpZWxkID0gc3RhY2suZ2xvYmFsRmllbGQoJ2dsb2JhbF9maWVsZF91aWQnKTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBnbG9iYWxGaWVsZC5pbmNsdWRlQnJhbmNoKCkuZmV0Y2goKTtcbiAgICAgKi9cbiAgICBpbmNsdWRlQnJhbmNoKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2JyYW5jaCA9ICd0cnVlJztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgZmluZFxuICAgICAqIEBtZW1iZXJvZiBHbG9iYWxGaWVsZFxuICAgICAqIEBkZXNjcmlwdGlvbiBGZXRjaGVzIGNvbXByZWhlbnNpdmUgZGV0YWlscyBvZiBhIHNwZWNpZmljIGdsb2JhbCBmaWVsZFxuICAgICAqIEByZXR1cm5zIHtHbG9iYWxGaWVsZH1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKHsgYXBpS2V5OiBcImFwaUtleVwiLCBkZWxpdmVyeVRva2VuOiBcImRlbGl2ZXJ5VG9rZW5cIiwgZW52aXJvbm1lbnQ6IFwiZW52aXJvbm1lbnRcIiB9KTtcbiAgICAgKiBjb25zdCBnbG9iYWxGaWVsZCA9IHN0YWNrLmdsb2JhbEZpZWxkKCdnbG9iYWxfZmllbGRfdWlkJyk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gZ2xvYmFsRmllbGQuZmV0Y2goKTtcbiAgICAgKi9cbiAgICBmZXRjaCgpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCAoMCwgY29yZV8xLmdldERhdGEpKHRoaXMuX2NsaWVudCwgdGhpcy5fdXJsUGF0aCwgdGhpcy5fcXVlcnlQYXJhbXMpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmdsb2JhbF9maWVsZDtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5HbG9iYWxGaWVsZCA9IEdsb2JhbEZpZWxkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFsLWZpZWxkLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkdsb2JhbEZpZWxkIiwidHNsaWJfMSIsInJlcXVpcmUiLCJjb3JlXzEiLCJjb25zdHJ1Y3RvciIsImNsaWVudENvbmZpZyIsImdsb2JhbEZpZWxkVWlkIiwiX3F1ZXJ5UGFyYW1zIiwiX2NsaWVudCIsIl91cmxQYXRoIiwiaW5jbHVkZUJyYW5jaCIsImluY2x1ZGVfYnJhbmNoIiwiZmV0Y2giLCJfX2F3YWl0ZXIiLCJyZXNwb25zZSIsImdldERhdGEiLCJnbG9iYWxfZmllbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/pagination.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/pagination.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Pagination = void 0;\nclass Pagination {\n    constructor(){\n        this._queryParams = {};\n    }\n    /**\n     * @method constructor\n     * @memberof Pagination\n     * @description Create a pagination class object to paginate through the query response\n     * @param {baseQuery} object of class BaseQUery\n     * @param {paginationObj} object to send skip and limit values\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     *\n     * interface TEntryProps {\n     *   uid: string;\n     *   title: string;\n     *   created_at: string;\n     *   _version: number;\n     *   locale: string;\n     *   created_by: string;\n     *   url: string;\n     *   // other props\n     * }\n     * interface TEntries {\n     *   entries: TEntryProps[];\n     * }\n     * const pagedResult = await query.paginate().find<TEntries>();\n     * OR\n     * const pageObj = await query.paginate({ skip: 10, limit: 20 }).find<TEntries>();\n     * @returns {Pagination}\n     */ paginate(paginationObj) {\n        this._queryParams.skip = (paginationObj === null || paginationObj === void 0 ? void 0 : paginationObj.skip) || 0;\n        this._queryParams.limit = (paginationObj === null || paginationObj === void 0 ? void 0 : paginationObj.limit) || 10;\n        return this;\n    }\n    /**\n     * @method next\n     * @memberof Pagination\n     * @description Go to next set of response values - skips the current num of responses and shows next responses\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     *\n     * interface TEntryProps {\n     *   uid: string;\n     *   title: string;\n     *   created_at: string;\n     *   _version: number;\n     *   locale: string;\n     *   created_by: string;\n     *   url: string;\n     *   // other props\n     * }\n     * interface TEntries {\n     *   entries: TEntryProps[];\n     * }\n     * const pagedResult = await query.paginate().find<TEntries>();\n     * const nextPageResult = await query.next().find<TEntries>();\n     * @returns {Object}\n     */ next() {\n        if (!this._queryParams.skip) this.paginate();\n        this._queryParams.skip += this._queryParams.limit;\n        return this;\n    }\n    /**\n     * @method previous\n     * @memberof Pagination\n     * @description Go to previous set of response values - skips the current num of responses and shows previous responses\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     *\n     * interface TEntryProps {\n     *   uid: string;\n     *   title: string;\n     *   created_at: string;\n     *   _version: number;\n     *   locale: string;\n     *   created_by: string;\n     *   url: string;\n     *   // other props\n     * }\n     * interface TEntries {\n     *   entries: TEntryProps[];\n     * }\n     * const pagedResult = await query.paginate().find<TEntries>();\n     * const prevPageResult = await query.previous().find<TEntries>();\n     * @returns {Pagination}\n     */ previous() {\n        if (!this._queryParams.skip) this.paginate();\n        const skipVal = this._queryParams.skip - this._queryParams.limit;\n        this._queryParams.skip = skipVal < 0 ? 0 : skipVal;\n        return this;\n    }\n}\nexports.Pagination = Pagination; //# sourceMappingURL=pagination.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9wYWdpbmF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0IsR0FBRyxLQUFLO0FBQzFCLE1BQU1FO0lBQ0ZDLGFBQWM7UUFDVixJQUFJLENBQUNDLFlBQVksR0FBRyxDQUFDO0lBQ3pCO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBNkJDLEdBQ0RDLFNBQVNDLGFBQWEsRUFBRTtRQUNwQixJQUFJLENBQUNGLFlBQVksQ0FBQ0csSUFBSSxHQUFHLENBQUNELGtCQUFrQixRQUFRQSxrQkFBa0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsY0FBY0MsSUFBSSxLQUFLO1FBQy9HLElBQUksQ0FBQ0gsWUFBWSxDQUFDSSxLQUFLLEdBQUcsQ0FBQ0Ysa0JBQWtCLFFBQVFBLGtCQUFrQixLQUFLLElBQUksS0FBSyxJQUFJQSxjQUFjRSxLQUFLLEtBQUs7UUFDakgsT0FBTyxJQUFJO0lBQ2Y7SUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0EwQkMsR0FDREMsT0FBTztRQUNILElBQUksQ0FBQyxJQUFJLENBQUNMLFlBQVksQ0FBQ0csSUFBSSxFQUN2QixJQUFJLENBQUNGLFFBQVE7UUFDakIsSUFBSSxDQUFDRCxZQUFZLENBQUNHLElBQUksSUFBSSxJQUFJLENBQUNILFlBQVksQ0FBQ0ksS0FBSztRQUNqRCxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQTBCQyxHQUNERSxXQUFXO1FBQ1AsSUFBSSxDQUFDLElBQUksQ0FBQ04sWUFBWSxDQUFDRyxJQUFJLEVBQ3ZCLElBQUksQ0FBQ0YsUUFBUTtRQUNqQixNQUFNTSxVQUFVLElBQUksQ0FBQ1AsWUFBWSxDQUFDRyxJQUFJLEdBQUcsSUFBSSxDQUFDSCxZQUFZLENBQUNJLEtBQUs7UUFDaEUsSUFBSSxDQUFDSixZQUFZLENBQUNHLElBQUksR0FBR0ksVUFBVSxJQUFJLElBQUlBO1FBQzNDLE9BQU8sSUFBSTtJQUNmO0FBQ0o7QUFDQVgsa0JBQWtCLEdBQUdFLFlBQ3JCLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL3BhZ2luYXRpb24uanM/YWVkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGFnaW5hdGlvbiA9IHZvaWQgMDtcbmNsYXNzIFBhZ2luYXRpb24ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcyA9IHt9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGNvbnN0cnVjdG9yXG4gICAgICogQG1lbWJlcm9mIFBhZ2luYXRpb25cbiAgICAgKiBAZGVzY3JpcHRpb24gQ3JlYXRlIGEgcGFnaW5hdGlvbiBjbGFzcyBvYmplY3QgdG8gcGFnaW5hdGUgdGhyb3VnaCB0aGUgcXVlcnkgcmVzcG9uc2VcbiAgICAgKiBAcGFyYW0ge2Jhc2VRdWVyeX0gb2JqZWN0IG9mIGNsYXNzIEJhc2VRVWVyeVxuICAgICAqIEBwYXJhbSB7cGFnaW5hdGlvbk9ian0gb2JqZWN0IHRvIHNlbmQgc2tpcCBhbmQgbGltaXQgdmFsdWVzXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBpbXBvcnQgY29udGVudHN0YWNrIGZyb20gJ0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrJ1xuICAgICAqXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soeyBhcGlLZXk6IFwiYXBpS2V5XCIsIGRlbGl2ZXJ5VG9rZW46IFwiZGVsaXZlcnlUb2tlblwiLCBlbnZpcm9ubWVudDogXCJlbnZpcm9ubWVudFwiIH0pO1xuICAgICAqIGNvbnN0IHF1ZXJ5ID0gc3RhY2suY29udGVudFR5cGUoXCJjb250ZW50VHlwZVVpZFwiKS5lbnRyeSgpLnF1ZXJ5KCk7XG4gICAgICpcbiAgICAgKiBpbnRlcmZhY2UgVEVudHJ5UHJvcHMge1xuICAgICAqICAgdWlkOiBzdHJpbmc7XG4gICAgICogICB0aXRsZTogc3RyaW5nO1xuICAgICAqICAgY3JlYXRlZF9hdDogc3RyaW5nO1xuICAgICAqICAgX3ZlcnNpb246IG51bWJlcjtcbiAgICAgKiAgIGxvY2FsZTogc3RyaW5nO1xuICAgICAqICAgY3JlYXRlZF9ieTogc3RyaW5nO1xuICAgICAqICAgdXJsOiBzdHJpbmc7XG4gICAgICogICAvLyBvdGhlciBwcm9wc1xuICAgICAqIH1cbiAgICAgKiBpbnRlcmZhY2UgVEVudHJpZXMge1xuICAgICAqICAgZW50cmllczogVEVudHJ5UHJvcHNbXTtcbiAgICAgKiB9XG4gICAgICogY29uc3QgcGFnZWRSZXN1bHQgPSBhd2FpdCBxdWVyeS5wYWdpbmF0ZSgpLmZpbmQ8VEVudHJpZXM+KCk7XG4gICAgICogT1JcbiAgICAgKiBjb25zdCBwYWdlT2JqID0gYXdhaXQgcXVlcnkucGFnaW5hdGUoeyBza2lwOiAxMCwgbGltaXQ6IDIwIH0pLmZpbmQ8VEVudHJpZXM+KCk7XG4gICAgICogQHJldHVybnMge1BhZ2luYXRpb259XG4gICAgICovXG4gICAgcGFnaW5hdGUocGFnaW5hdGlvbk9iaikge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5za2lwID0gKHBhZ2luYXRpb25PYmogPT09IG51bGwgfHwgcGFnaW5hdGlvbk9iaiA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFnaW5hdGlvbk9iai5za2lwKSB8fCAwO1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5saW1pdCA9IChwYWdpbmF0aW9uT2JqID09PSBudWxsIHx8IHBhZ2luYXRpb25PYmogPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhZ2luYXRpb25PYmoubGltaXQpIHx8IDEwO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBuZXh0XG4gICAgICogQG1lbWJlcm9mIFBhZ2luYXRpb25cbiAgICAgKiBAZGVzY3JpcHRpb24gR28gdG8gbmV4dCBzZXQgb2YgcmVzcG9uc2UgdmFsdWVzIC0gc2tpcHMgdGhlIGN1cnJlbnQgbnVtIG9mIHJlc3BvbnNlcyBhbmQgc2hvd3MgbmV4dCByZXNwb25zZXNcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcXVlcnkgPSBzdGFjay5jb250ZW50VHlwZShcImNvbnRlbnRUeXBlVWlkXCIpLmVudHJ5KCkucXVlcnkoKTtcbiAgICAgKlxuICAgICAqIGludGVyZmFjZSBURW50cnlQcm9wcyB7XG4gICAgICogICB1aWQ6IHN0cmluZztcbiAgICAgKiAgIHRpdGxlOiBzdHJpbmc7XG4gICAgICogICBjcmVhdGVkX2F0OiBzdHJpbmc7XG4gICAgICogICBfdmVyc2lvbjogbnVtYmVyO1xuICAgICAqICAgbG9jYWxlOiBzdHJpbmc7XG4gICAgICogICBjcmVhdGVkX2J5OiBzdHJpbmc7XG4gICAgICogICB1cmw6IHN0cmluZztcbiAgICAgKiAgIC8vIG90aGVyIHByb3BzXG4gICAgICogfVxuICAgICAqIGludGVyZmFjZSBURW50cmllcyB7XG4gICAgICogICBlbnRyaWVzOiBURW50cnlQcm9wc1tdO1xuICAgICAqIH1cbiAgICAgKiBjb25zdCBwYWdlZFJlc3VsdCA9IGF3YWl0IHF1ZXJ5LnBhZ2luYXRlKCkuZmluZDxURW50cmllcz4oKTtcbiAgICAgKiBjb25zdCBuZXh0UGFnZVJlc3VsdCA9IGF3YWl0IHF1ZXJ5Lm5leHQoKS5maW5kPFRFbnRyaWVzPigpO1xuICAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgICovXG4gICAgbmV4dCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9xdWVyeVBhcmFtcy5za2lwKVxuICAgICAgICAgICAgdGhpcy5wYWdpbmF0ZSgpO1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5za2lwICs9IHRoaXMuX3F1ZXJ5UGFyYW1zLmxpbWl0O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBwcmV2aW91c1xuICAgICAqIEBtZW1iZXJvZiBQYWdpbmF0aW9uXG4gICAgICogQGRlc2NyaXB0aW9uIEdvIHRvIHByZXZpb3VzIHNldCBvZiByZXNwb25zZSB2YWx1ZXMgLSBza2lwcyB0aGUgY3VycmVudCBudW0gb2YgcmVzcG9uc2VzIGFuZCBzaG93cyBwcmV2aW91cyByZXNwb25zZXNcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcXVlcnkgPSBzdGFjay5jb250ZW50VHlwZShcImNvbnRlbnRUeXBlVWlkXCIpLmVudHJ5KCkucXVlcnkoKTtcbiAgICAgKlxuICAgICAqIGludGVyZmFjZSBURW50cnlQcm9wcyB7XG4gICAgICogICB1aWQ6IHN0cmluZztcbiAgICAgKiAgIHRpdGxlOiBzdHJpbmc7XG4gICAgICogICBjcmVhdGVkX2F0OiBzdHJpbmc7XG4gICAgICogICBfdmVyc2lvbjogbnVtYmVyO1xuICAgICAqICAgbG9jYWxlOiBzdHJpbmc7XG4gICAgICogICBjcmVhdGVkX2J5OiBzdHJpbmc7XG4gICAgICogICB1cmw6IHN0cmluZztcbiAgICAgKiAgIC8vIG90aGVyIHByb3BzXG4gICAgICogfVxuICAgICAqIGludGVyZmFjZSBURW50cmllcyB7XG4gICAgICogICBlbnRyaWVzOiBURW50cnlQcm9wc1tdO1xuICAgICAqIH1cbiAgICAgKiBjb25zdCBwYWdlZFJlc3VsdCA9IGF3YWl0IHF1ZXJ5LnBhZ2luYXRlKCkuZmluZDxURW50cmllcz4oKTtcbiAgICAgKiBjb25zdCBwcmV2UGFnZVJlc3VsdCA9IGF3YWl0IHF1ZXJ5LnByZXZpb3VzKCkuZmluZDxURW50cmllcz4oKTtcbiAgICAgKiBAcmV0dXJucyB7UGFnaW5hdGlvbn1cbiAgICAgKi9cbiAgICBwcmV2aW91cygpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9xdWVyeVBhcmFtcy5za2lwKVxuICAgICAgICAgICAgdGhpcy5wYWdpbmF0ZSgpO1xuICAgICAgICBjb25zdCBza2lwVmFsID0gdGhpcy5fcXVlcnlQYXJhbXMuc2tpcCAtIHRoaXMuX3F1ZXJ5UGFyYW1zLmxpbWl0O1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5za2lwID0gc2tpcFZhbCA8IDAgPyAwIDogc2tpcFZhbDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5QYWdpbmF0aW9uID0gUGFnaW5hdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2luYXRpb24uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUGFnaW5hdGlvbiIsImNvbnN0cnVjdG9yIiwiX3F1ZXJ5UGFyYW1zIiwicGFnaW5hdGUiLCJwYWdpbmF0aW9uT2JqIiwic2tpcCIsImxpbWl0IiwibmV4dCIsInByZXZpb3VzIiwic2tpcFZhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/pagination.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Query = void 0;\nconst base_query_1 = __webpack_require__(/*! ./base-query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\");\nclass Query extends base_query_1.BaseQuery {\n    constructor(client, params, queryParams, uid, queryObj){\n        super();\n        this._client = client;\n        this._contentTypeUid = uid;\n        this._urlPath = `/content_types/${this._contentTypeUid}/entries`;\n        this._parameters = params || {};\n        this._queryParams = queryParams || {};\n        if (queryObj) {\n            this._parameters = Object.assign(Object.assign({}, this._parameters), queryObj);\n        }\n    }\n    /**\n     * @method where\n     * @memberof Query\n     * @description Filters the results based on the specified criteria.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.where(\"field_UID\", QueryOperation.IS_LESS_THAN, [\"field1\", \"field2\"]).find()\n     * // OR\n     * const asset = await stack.asset().where(\"field_UID\", QueryOperation.IS_LESS_THAN, [\"field1\", \"field2\"]).find()\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.where(\"field_UID\", QueryOperation.MATCHES, [\"field1\", \"field2\"]).find()\n     * @returns {Query}\n     */ where(fieldUid, queryOperation, fields, additionalData) {\n        if (queryOperation == types_1.QueryOperation.EQUALS) {\n            this._parameters[fieldUid] = fields;\n        } else {\n            const parameterValue = Object.assign({\n                [queryOperation]: fields\n            }, additionalData);\n            this._parameters[fieldUid] = parameterValue;\n        }\n        return this;\n    }\n    /**\n     * @method regex\n     * @memberof Query\n     * @description Retrieve entries that match the provided regular expressions\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.regex('title','^Demo').find()\n     * // OR\n     * const result = await query..regex('title','^Demo', 'i').find() // regex with options\n     * @returns {Query}\n     */ regex(fieldUid, regexPattern, options) {\n        this._parameters[fieldUid] = {\n            $regex: regexPattern\n        };\n        if (options) this._parameters[fieldUid].$options = options;\n        return this;\n    }\n    /**\n     * @method whereIn\n     * @memberof Query\n     * @description Get entries having values based on referenced fields.\n     * The query retrieves all entries that satisfy the query conditions made on referenced fields\n     * This method sets the '$in_query' parameter to a reference field UID and a query instance in the API request.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * query.whereIn(\"brand\")\n     * const res = await query.find()\n     *\n     * @param {string} referenceUid - UID of the reference field to query.\n     * @param {Query} queryInstance - The Query instance to include in the where clause.\n     * @returns {Query} - Returns the Query instance for chaining.\n     */ whereIn(referenceUid, queryInstance) {\n        // eslint-disable-next-line @typescript-eslint/naming-convention, prettier/prettier\n        this._parameters[referenceUid] = {\n            \"$in_query\": queryInstance._parameters\n        };\n        return this;\n    }\n    /**\n     * @method whereNotIn\n     * @memberof Query\n     * @description Get entries having values based on referenced fields.\n     * This query works the opposite of $in_query and retrieves all entries that does not satisfy query conditions made on referenced fields.\n     * This method sets the '$nin_query' parameter to a reference field UID and a query instance in the API request.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * query.whereNotIn(\"brand\")\n     * const res = await query.find()\n     *\n     * @param {string} referenceUid - UID of the reference field to query.\n     * @param {Query} queryInstance - The Query instance to include in the where clause.\n     * @returns {Query} - Returns the Query instance for chaining.\n     */ whereNotIn(referenceUid, queryInstance) {\n        // eslint-disable-next-line @typescript-eslint/naming-convention, prettier/prettier\n        this._parameters[referenceUid] = {\n            \"$nin_query\": queryInstance._parameters\n        };\n        return this;\n    }\n    /**\n     * @method queryOperator\n     * @memberof Query\n     * @description In case of '$and' get entries that satisfy all the conditions provided in the '$and' query and\n     * in case of '$or' query get all entries that satisfy at least one of the given conditions provided in the '$or' query.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentType1Uid\").entry().query();\n     * const subQuery1 = stack.contentType(\"contentType2Uid\").query().where(\"price\", QueryOperation.IS_LESS_THAN, fields=90);\n     * const subQuery2 = stack.contentType(\"contentType3Uid\").query().where(\"discount\", QueryOperation.INCLUDES, fields=[20, 45]);\n     * query.queryOperator(QueryOperator.AND, subQuery1, subQuery2)\n     * const res = await query.find()\n     *\n     * @param {QueryOperator} queryType - The type of query operator to apply.\n     * @param {...Query[]} queryObjects - The Query instances to apply the query to.\n     * @returns {Query} - Returns the Query instance for chaining.\n     */ queryOperator(queryType, ...queryObjects) {\n        const paramsList = [];\n        for (const queryItem of queryObjects){\n            paramsList.push(queryItem._parameters);\n        }\n        this._parameters[queryType] = paramsList;\n        return this;\n    }\n    /**\n     * @method getQuery\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.query({'brand': {'$nin_query': {'title': 'Apple Inc.'}}}).getQuery()\n     * // OR\n     * const asset = await stack.asset().query({'brand': {'$nin_query': {'title': 'Apple Inc.'}}}).getQuery()\n     *\n     * @returns {Query}\n     */ getQuery() {\n        return this._parameters;\n    }\n    /**\n     * @method containedIn\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.containedIn('fieldUid', ['value1', 'value2']).find()\n     *\n     * @returns {Query}\n     */ containedIn(key, value) {\n        this._parameters[key] = {\n            \"$in\": value\n        };\n        return this;\n    }\n    /**\n     * @method NoContainedIn\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.notContainedIn('fieldUid', ['value1', 'value2']).find()\n     *\n     * @returns {Query}\n     */ notContainedIn(key, value) {\n        this._parameters[key] = {\n            \"$nin\": value\n        };\n        return this;\n    }\n    /**\n     * @method exists\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.exists('fieldUid').find()\n     *\n     * @returns {Query}\n     */ exists(key) {\n        this._parameters[key] = {\n            \"$exists\": true\n        };\n        return this;\n    }\n    /**\n     * @method notExists\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.notExists('fieldUid').find()\n     *\n     * @returns {Query}\n     */ notExists(key) {\n        this._parameters[key] = {\n            \"$exists\": false\n        };\n        return this;\n    }\n    /**\n     * @method or\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query1 = stack.contentType('contenttype_uid').Entry().query().containedIn('fieldUID', ['value']);\n     * const query2 = stack.contentType('contenttype_uid').Entry().query().where('fieldUID', QueryOperation.EQUALS, 'value2');\n     * const query = await stack.contentType('contenttype_uid').Entry().query().or(query1, query2).find();\n     *\n     * @returns {Query}\n     */ or(...queries) {\n        const paramsList = [];\n        for (const queryItem of queries){\n            paramsList.push(queryItem._parameters);\n        }\n        this._parameters.$or = paramsList;\n        return this;\n    }\n    /**\n     * @method and\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query1 = stack.contentType('contenttype_uid').Entry().query().containedIn('fieldUID', ['value']);\n     * const query2 = stack.contentType('contenttype_uid').Entry().query().where('fieldUID', QueryOperation.EQUALS, 'value2');\n     * const query = await stack.contentType('contenttype_uid').Entry().query().and(query1, query2).find();\n     *\n     * @returns {Query}\n     */ and(...queries) {\n        const paramsList = [];\n        for (const queryItem of queries){\n            paramsList.push(queryItem._parameters);\n        }\n        this._parameters.$and = paramsList;\n        return this;\n    }\n    /**\n     * @method equalTo\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = await stack.contentType('contenttype_uid').Entry().query().equalTo('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ equalTo(key, value) {\n        this._parameters[key] = value;\n        return this;\n    }\n    /**\n     * @method notEqualTo\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = await stack.contentType('contenttype_uid').Entry().query().notEqualTo('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ notEqualTo(key, value) {\n        this._parameters[key] = {\n            \"$ne\": value\n        };\n        return this;\n        ;\n    }\n    /**\n     * @method referenceIn\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().referenceIn('reference_uid', query).find();\n     *\n     * @returns {Query}\n     */ referenceIn(key, query) {\n        this._parameters[key] = {\n            \"$in_query\": query._parameters\n        };\n        return this;\n    }\n    /**\n     * @method referenceNotIn\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().referenceNotIn('reference_uid', query).find();\n     *\n     * @returns {Query}\n     */ referenceNotIn(key, query) {\n        this._parameters[key] = {\n            \"$nin_query\": query._parameters\n        };\n        return this;\n    }\n    /**\n     * @method tags\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().tags(['tag1']).find();\n     *\n     * @returns {Query}\n     */ tags(values) {\n        this._parameters[\"tags\"] = values;\n        return this;\n    }\n    /**\n     * @method search\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().search('key').find();\n     *\n     * @returns {Query}\n     */ search(key) {\n        this._queryParams[\"typeahead\"] = key;\n        return this;\n    }\n    /**\n     * @method lessThan\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().lessThan('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ lessThan(key, value) {\n        this._parameters[key] = {\n            \"$lt\": value\n        };\n        return this;\n    }\n    /**\n     * @method lessThanOrEqualTo\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().lessThanOrEqualTo('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ lessThanOrEqualTo(key, value) {\n        this._parameters[key] = {\n            \"$lte\": value\n        };\n        return this;\n    }\n    /**\n     * @method greaterThan\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().greaterThan('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ greaterThan(key, value) {\n        this._parameters[key] = {\n            \"$gt\": value\n        };\n        return this;\n    }\n    /**\n     * @method greaterThanOrEqualTo\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().greaterThanOrEqualTo('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ greaterThanOrEqualTo(key, value) {\n        this._parameters[key] = {\n            \"$gte\": value\n        };\n        return this;\n    }\n}\nexports.Query = Query; //# sourceMappingURL=query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/stack.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/stack.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Stack = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst asset_1 = __webpack_require__(/*! ./asset */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset.js\");\nconst asset_query_1 = __webpack_require__(/*! ./asset-query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset-query.js\");\nconst content_type_1 = __webpack_require__(/*! ./content-type */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/content-type.js\");\nconst contenttype_query_1 = __webpack_require__(/*! ./contenttype-query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contenttype-query.js\");\nconst synchronization_1 = __webpack_require__(/*! ./synchronization */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/synchronization.js\");\nconst taxonomy_query_1 = __webpack_require__(/*! ./taxonomy-query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/taxonomy-query.js\");\nconst global_field_query_1 = __webpack_require__(/*! ./global-field-query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field-query.js\");\nconst global_field_1 = __webpack_require__(/*! ./global-field */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field.js\");\nclass Stack {\n    constructor(client, config){\n        this._client = client;\n        this.config = config;\n    }\n    asset(uid) {\n        if (uid) return new asset_1.Asset(this._client, uid);\n        return new asset_query_1.AssetQuery(this._client);\n    }\n    contentType(uid) {\n        if (uid) return new content_type_1.ContentType(this._client, uid);\n        return new contenttype_query_1.ContentTypeQuery(this._client);\n    }\n    /**\n     * @method Taxonomy\n     * @memberOf Stack\n     * @description Sets the url to /taxonomies/entries. Pass a query to fetch entries with taxonomies\n     *\n     * @returns {TaxonomyQuery} * @example\n     * import contentstack from '@contentstack/typescript'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n  \n     * const taxonomy = stack.Taxonomy() // For taxonomy query object\n     */ taxonomy() {\n        return new taxonomy_query_1.TaxonomyQuery(this._client);\n    }\n    globalField(uid) {\n        if (uid) return new global_field_1.GlobalField(this._client, uid);\n        return new global_field_query_1.GlobalFieldQuery(this._client);\n    }\n    /**\n     * @method setLocale\n     * @memberOf Stack\n     * @description Sets the locale of the API server\n     * @param {String} locale - valid locale e.g. fr-fr\n     * @return {Stack}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * stack.setLocale('en-155');\n     */ setLocale(locale) {\n        this.config.locale = locale;\n    }\n    /**\n     * @method sync\n     * @memberOf Stack\n     * @description Syncs your Contentstack data with your app and ensures that the data is always up-to-date by providing delta updates\n     * @param {object} params - params is an object that supports ‘locale’, ‘start_date’, ‘content_type_uid’, and ‘type’ queries.\n     * @example\n     * Stack.sync()        // For initializing sync\n     * @example\n     * Stack.sync({ 'locale': 'en-us'})     //For initializing sync with entries of a specific locale\n     * @example\n     * Stack.sync({ 'start_date': '2018-10-22'})    //For initializing sync with entries published after a specific date\n     * @example\n     * Stack.sync({ 'content_type_uid': 'session'})   //For initializing sync with entries of a specific content type\n     * @example\n     * Stack.sync({ 'type': 'entry_published'})\n     * //Use the type parameter to get a specific type of content. Supports'asset_published',\n     * // 'entry_published', 'asset_unpublished', 'entry_unpublished', 'asset_deleted', 'entry_deleted', 'content_type_deleted'.\n     * @example\n     * Stack.sync({'pagination_token': '<page_tkn>'})    // For fetching the next batch of entries using pagination token\n     * @example\n     * Stack.sync({'sync_token': '<sync_tkn>'})    // For performing subsequent sync after initial sync\n     * @instance\n     */ sync() {\n        return tslib_1.__awaiter(this, arguments, void 0, function*(params = {}, recursive = false) {\n            return yield (0, synchronization_1.synchronization)(this._client, params, recursive);\n        });\n    }\n    livePreviewQuery(query) {\n        if (this.config.live_preview) {\n            this.config.live_preview.live_preview = query.live_preview || \"init\";\n            this.config.live_preview.contentTypeUid = query.contentTypeUid;\n            this.config.live_preview.entryUid = query.entryUid;\n        }\n    }\n}\nexports.Stack = Stack; //# sourceMappingURL=stack.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/stack.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/synchronization.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/synchronization.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.synchronization = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(ssr)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nconst humps_1 = tslib_1.__importDefault(__webpack_require__(/*! humps */ \"(ssr)/./node_modules/humps/humps.js\"));\nfunction synchronization(client_1) {\n    return tslib_1.__awaiter(this, arguments, void 0, function*(client, params = {}, recursive = false) {\n        const config = {\n            params\n        };\n        if (!(\"paginationToken\" in params || \"syncToken\" in params)) {\n            // for every config except sync and pagination token\n            config.params = Object.assign(Object.assign({}, params), {\n                init: true\n            });\n        }\n        if (params.type && typeof params.type !== \"string\") {\n            const type = params.type;\n            config.params = Object.assign(Object.assign({}, config.params), {\n                type: type.join(\",\")\n            });\n        }\n        let response = yield (0, core_1.getData)(client, \"/sync\", humps_1.default.decamelizeKeys(config));\n        const data = response.data;\n        while(recursive && \"pagination_token\" in response.data){\n            const recResponse = yield (0, core_1.getData)(client, \"/sync\", humps_1.default.decamelizeKeys({\n                paginationToken: data.pagination_token\n            }));\n            recResponse.data.items = Object.assign(Object.assign({}, response.data.items), recResponse.data.items);\n            response = Object.assign({}, recResponse);\n        }\n        return response.data;\n    });\n}\nexports.synchronization = synchronization; //# sourceMappingURL=synchronization.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9zeW5jaHJvbml6YXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHVCQUF1QixHQUFHLEtBQUs7QUFDL0IsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUMseUZBQW9CO0FBQzNDLE1BQU1FLFVBQVVILFFBQVFJLGVBQWUsQ0FBQ0gsbUJBQU9BLENBQUMsa0RBQU87QUFDdkQsU0FBU0YsZ0JBQWdCTSxRQUFRO0lBQzdCLE9BQU9MLFFBQVFNLFNBQVMsQ0FBQyxJQUFJLEVBQUVDLFdBQVcsS0FBSyxHQUFHLFVBQVdDLE1BQU0sRUFBRUMsU0FBUyxDQUFDLENBQUMsRUFBRUMsWUFBWSxLQUFLO1FBQy9GLE1BQU1DLFNBQVM7WUFBRUY7UUFBTztRQUN4QixJQUFJLENBQUUsc0JBQXFCQSxVQUFVLGVBQWVBLE1BQUssR0FBSTtZQUN6RCxvREFBb0Q7WUFDcERFLE9BQU9GLE1BQU0sR0FBR2QsT0FBT2lCLE1BQU0sQ0FBQ2pCLE9BQU9pQixNQUFNLENBQUMsQ0FBQyxHQUFHSCxTQUFTO2dCQUFFSSxNQUFNO1lBQUs7UUFDMUU7UUFDQSxJQUFJSixPQUFPSyxJQUFJLElBQUksT0FBT0wsT0FBT0ssSUFBSSxLQUFLLFVBQVU7WUFDaEQsTUFBTUEsT0FBT0wsT0FBT0ssSUFBSTtZQUN4QkgsT0FBT0YsTUFBTSxHQUFHZCxPQUFPaUIsTUFBTSxDQUFDakIsT0FBT2lCLE1BQU0sQ0FBQyxDQUFDLEdBQUdELE9BQU9GLE1BQU0sR0FBRztnQkFBRUssTUFBTUEsS0FBS0MsSUFBSSxDQUFDO1lBQUs7UUFDM0Y7UUFDQSxJQUFJQyxXQUFXLE1BQU0sQ0FBQyxHQUFHZCxPQUFPZSxPQUFPLEVBQUVULFFBQVEsU0FBU0wsUUFBUWUsT0FBTyxDQUFDQyxjQUFjLENBQUNSO1FBQ3pGLE1BQU1TLE9BQU9KLFNBQVNJLElBQUk7UUFDMUIsTUFBT1YsYUFBYSxzQkFBc0JNLFNBQVNJLElBQUksQ0FBRTtZQUNyRCxNQUFNQyxjQUFjLE1BQU0sQ0FBQyxHQUFHbkIsT0FBT2UsT0FBTyxFQUFFVCxRQUFRLFNBQVNMLFFBQVFlLE9BQU8sQ0FBQ0MsY0FBYyxDQUFDO2dCQUFFRyxpQkFBaUJGLEtBQUtHLGdCQUFnQjtZQUFDO1lBQ3ZJRixZQUFZRCxJQUFJLENBQUNJLEtBQUssR0FBRzdCLE9BQU9pQixNQUFNLENBQUNqQixPQUFPaUIsTUFBTSxDQUFDLENBQUMsR0FBR0ksU0FBU0ksSUFBSSxDQUFDSSxLQUFLLEdBQUdILFlBQVlELElBQUksQ0FBQ0ksS0FBSztZQUNyR1IsV0FBV3JCLE9BQU9pQixNQUFNLENBQUMsQ0FBQyxHQUFHUztRQUNqQztRQUNBLE9BQU9MLFNBQVNJLElBQUk7SUFDeEI7QUFDSjtBQUNBdkIsdUJBQXVCLEdBQUdFLGlCQUMxQiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9zeW5jaHJvbml6YXRpb24uanM/ZWIyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc3luY2hyb25pemF0aW9uID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAY29udGVudHN0YWNrL2NvcmVcIik7XG5jb25zdCBodW1wc18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImh1bXBzXCIpKTtcbmZ1bmN0aW9uIHN5bmNocm9uaXphdGlvbihjbGllbnRfMSkge1xuICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCBhcmd1bWVudHMsIHZvaWQgMCwgZnVuY3Rpb24qIChjbGllbnQsIHBhcmFtcyA9IHt9LCByZWN1cnNpdmUgPSBmYWxzZSkge1xuICAgICAgICBjb25zdCBjb25maWcgPSB7IHBhcmFtcyB9O1xuICAgICAgICBpZiAoISgncGFnaW5hdGlvblRva2VuJyBpbiBwYXJhbXMgfHwgJ3N5bmNUb2tlbicgaW4gcGFyYW1zKSkge1xuICAgICAgICAgICAgLy8gZm9yIGV2ZXJ5IGNvbmZpZyBleGNlcHQgc3luYyBhbmQgcGFnaW5hdGlvbiB0b2tlblxuICAgICAgICAgICAgY29uZmlnLnBhcmFtcyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcGFyYW1zKSwgeyBpbml0OiB0cnVlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXJhbXMudHlwZSAmJiB0eXBlb2YgcGFyYW1zLnR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBjb25zdCB0eXBlID0gcGFyYW1zLnR5cGU7XG4gICAgICAgICAgICBjb25maWcucGFyYW1zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBjb25maWcucGFyYW1zKSwgeyB0eXBlOiB0eXBlLmpvaW4oJywnKSB9KTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcmVzcG9uc2UgPSB5aWVsZCAoMCwgY29yZV8xLmdldERhdGEpKGNsaWVudCwgJy9zeW5jJywgaHVtcHNfMS5kZWZhdWx0LmRlY2FtZWxpemVLZXlzKGNvbmZpZykpO1xuICAgICAgICBjb25zdCBkYXRhID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgd2hpbGUgKHJlY3Vyc2l2ZSAmJiAncGFnaW5hdGlvbl90b2tlbicgaW4gcmVzcG9uc2UuZGF0YSkge1xuICAgICAgICAgICAgY29uc3QgcmVjUmVzcG9uc2UgPSB5aWVsZCAoMCwgY29yZV8xLmdldERhdGEpKGNsaWVudCwgJy9zeW5jJywgaHVtcHNfMS5kZWZhdWx0LmRlY2FtZWxpemVLZXlzKHsgcGFnaW5hdGlvblRva2VuOiBkYXRhLnBhZ2luYXRpb25fdG9rZW4gfSkpO1xuICAgICAgICAgICAgcmVjUmVzcG9uc2UuZGF0YS5pdGVtcyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcmVzcG9uc2UuZGF0YS5pdGVtcyksIHJlY1Jlc3BvbnNlLmRhdGEuaXRlbXMpO1xuICAgICAgICAgICAgcmVzcG9uc2UgPSBPYmplY3QuYXNzaWduKHt9LCByZWNSZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgfSk7XG59XG5leHBvcnRzLnN5bmNocm9uaXphdGlvbiA9IHN5bmNocm9uaXphdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5bmNocm9uaXphdGlvbi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzeW5jaHJvbml6YXRpb24iLCJ0c2xpYl8xIiwicmVxdWlyZSIsImNvcmVfMSIsImh1bXBzXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJjbGllbnRfMSIsIl9fYXdhaXRlciIsImFyZ3VtZW50cyIsImNsaWVudCIsInBhcmFtcyIsInJlY3Vyc2l2ZSIsImNvbmZpZyIsImFzc2lnbiIsImluaXQiLCJ0eXBlIiwiam9pbiIsInJlc3BvbnNlIiwiZ2V0RGF0YSIsImRlZmF1bHQiLCJkZWNhbWVsaXplS2V5cyIsImRhdGEiLCJyZWNSZXNwb25zZSIsInBhZ2luYXRpb25Ub2tlbiIsInBhZ2luYXRpb25fdG9rZW4iLCJpdGVtcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/synchronization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/taxonomy-query.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/taxonomy-query.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TaxonomyQuery = void 0;\nconst query_1 = __webpack_require__(/*! ./query */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js\");\nclass TaxonomyQuery extends query_1.Query {\n    constructor(client){\n        super(client, {}, {}); // will need make changes to Query class so that CT uid is not mandatory\n        this._client = client;\n        this._urlPath = `/taxonomies/entries`;\n    }\n}\nexports.TaxonomyQuery = TaxonomyQuery;\n; //# sourceMappingURL=taxonomy-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi90YXhvbm9teS1xdWVyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUcsS0FBSztBQUM3QixNQUFNRyxVQUFVQyxtQkFBT0EsQ0FBQywwRkFBUztBQUNqQyxNQUFNRixzQkFBc0JDLFFBQVFFLEtBQUs7SUFDckNDLFlBQVlDLE1BQU0sQ0FBRTtRQUNoQixLQUFLLENBQUNBLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSx3RUFBd0U7UUFDL0YsSUFBSSxDQUFDQyxPQUFPLEdBQUdEO1FBQ2YsSUFBSSxDQUFDRSxRQUFRLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQztJQUN6QztBQUNKO0FBQ0FULHFCQUFxQixHQUFHRTtFQUV4QiwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi90YXhvbm9teS1xdWVyeS5qcz84ZjE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UYXhvbm9teVF1ZXJ5ID0gdm9pZCAwO1xuY29uc3QgcXVlcnlfMSA9IHJlcXVpcmUoXCIuL3F1ZXJ5XCIpO1xuY2xhc3MgVGF4b25vbXlRdWVyeSBleHRlbmRzIHF1ZXJ5XzEuUXVlcnkge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgICAgICBzdXBlcihjbGllbnQsIHt9LCB7fSk7IC8vIHdpbGwgbmVlZCBtYWtlIGNoYW5nZXMgdG8gUXVlcnkgY2xhc3Mgc28gdGhhdCBDVCB1aWQgaXMgbm90IG1hbmRhdG9yeVxuICAgICAgICB0aGlzLl9jbGllbnQgPSBjbGllbnQ7XG4gICAgICAgIHRoaXMuX3VybFBhdGggPSBgL3RheG9ub21pZXMvZW50cmllc2A7XG4gICAgfVxufVxuZXhwb3J0cy5UYXhvbm9teVF1ZXJ5ID0gVGF4b25vbXlRdWVyeTtcbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRheG9ub215LXF1ZXJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlRheG9ub215UXVlcnkiLCJxdWVyeV8xIiwicmVxdWlyZSIsIlF1ZXJ5IiwiY29uc3RydWN0b3IiLCJjbGllbnQiLCJfY2xpZW50IiwiX3VybFBhdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/taxonomy-query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.QueryOperator = exports.TaxonomyQueryOperation = exports.QueryOperation = exports.CanvasBy = exports.ResizeFilter = exports.OverlayRepeat = exports.OverlayAlign = exports.Orientation = exports.FitBy = exports.CropBy = exports.Format = exports.PublishType = exports.Policy = exports.Region = void 0;\nvar Region;\n(function(Region) {\n    Region[\"US\"] = \"us\";\n    Region[\"EU\"] = \"eu\";\n    Region[\"AZURE_NA\"] = \"azure-na\";\n    Region[\"AZURE_EU\"] = \"azure-eu\";\n    Region[\"GCP_NA\"] = \"gcp-na\";\n})(Region || (exports.Region = Region = {}));\nvar Policy;\n(function(Policy) {\n    Policy[\"IGNORE_CACHE\"] = \"IGNORE_CACHE\";\n    Policy[\"CACHE_THEN_NETWORK\"] = \"CACHE_THEN_NETWORK\";\n    Policy[\"CACHE_ELSE_NETWORK\"] = \"CACHE_ELSE_NETWORK\";\n    Policy[\"NETWORK_ELSE_CACHE\"] = \"NETWORK_ELSE_CACHE\";\n})(Policy || (exports.Policy = Policy = {}));\nvar PublishType;\n(function(PublishType) {\n    PublishType[\"ENTRY_PUBLISHED\"] = \"entry_published\";\n    PublishType[\"ENTRY_UNPUBLISHED\"] = \"entry_unpublished\";\n    PublishType[\"ENTRY_DELETED\"] = \"entry_deleted\";\n    PublishType[\"ASSET_PUBLISHED\"] = \"asset_published\";\n    PublishType[\"ASSET_UNPUBLISHED\"] = \"asset_unpublished\";\n    PublishType[\"ASSET_DELETED\"] = \"asset_deleted\";\n    PublishType[\"CONTENT_TYPE_DELETED\"] = \"content_type_deleted\";\n})(PublishType || (exports.PublishType = PublishType = {}));\nvar Format;\n(function(Format) {\n    Format[\"GIF\"] = \"gif\";\n    Format[\"PNG\"] = \"png\";\n    Format[\"JPG\"] = \"jpg\";\n    Format[\"PJPG\"] = \"pjpg\";\n    Format[\"WEBP\"] = \"webp\";\n    Format[\"WEBPLL\"] = \"webpll\";\n    Format[\"WEBPLY\"] = \"webply\";\n})(Format || (exports.Format = Format = {}));\nvar CropBy;\n(function(CropBy) {\n    CropBy[\"DEFAULT\"] = \"default\";\n    CropBy[\"ASPECTRATIO\"] = \"aspectRatio\";\n    CropBy[\"REGION\"] = \"region\";\n    CropBy[\"OFFSET\"] = \"offset\";\n})(CropBy || (exports.CropBy = CropBy = {}));\nvar FitBy;\n(function(FitBy) {\n    FitBy[\"BOUNDS\"] = \"bounds\";\n    FitBy[\"CROP\"] = \"crop\";\n})(FitBy || (exports.FitBy = FitBy = {}));\nvar Orientation;\n(function(Orientation) {\n    Orientation[Orientation[\"DEFAULT\"] = 1] = \"DEFAULT\";\n    Orientation[Orientation[\"FLIP_HORIZONTAL\"] = 2] = \"FLIP_HORIZONTAL\";\n    Orientation[Orientation[\"FLIP_HORIZONTAL_VERTICAL\"] = 3] = \"FLIP_HORIZONTAL_VERTICAL\";\n    Orientation[Orientation[\"FLIP_VERTICAL\"] = 4] = \"FLIP_VERTICAL\";\n    Orientation[Orientation[\"FLIP_HORIZONTAL_LEFT\"] = 5] = \"FLIP_HORIZONTAL_LEFT\";\n    Orientation[Orientation[\"RIGHT\"] = 6] = \"RIGHT\";\n    Orientation[Orientation[\"FLIP_HORIZONTAL_RIGHT\"] = 7] = \"FLIP_HORIZONTAL_RIGHT\";\n    Orientation[Orientation[\"LEFT\"] = 8] = \"LEFT\";\n})(Orientation || (exports.Orientation = Orientation = {}));\nvar OverlayAlign;\n(function(OverlayAlign) {\n    OverlayAlign[\"TOP\"] = \"top\";\n    OverlayAlign[\"BOTTOM\"] = \"bottom\";\n    OverlayAlign[\"LEFT\"] = \"left\";\n    OverlayAlign[\"RIGHT\"] = \"right\";\n    OverlayAlign[\"MIDDLE\"] = \"middle\";\n    OverlayAlign[\"CENTER\"] = \"center\";\n})(OverlayAlign || (exports.OverlayAlign = OverlayAlign = {}));\nvar OverlayRepeat;\n(function(OverlayRepeat) {\n    OverlayRepeat[\"X\"] = \"x\";\n    OverlayRepeat[\"Y\"] = \"y\";\n    OverlayRepeat[\"BOTH\"] = \"both\";\n})(OverlayRepeat || (exports.OverlayRepeat = OverlayRepeat = {}));\nvar ResizeFilter;\n(function(ResizeFilter) {\n    ResizeFilter[\"NEAREST\"] = \"nearest\";\n    ResizeFilter[\"BILINEAR\"] = \"bilinear\";\n    ResizeFilter[\"BICUBIC\"] = \"bicubic\";\n    ResizeFilter[\"LANCZOS2\"] = \"lanczos2\";\n    ResizeFilter[\"LANCZOS3\"] = \"lanczos3\";\n})(ResizeFilter || (exports.ResizeFilter = ResizeFilter = {}));\nvar CanvasBy;\n(function(CanvasBy) {\n    CanvasBy[\"DEFAULT\"] = \"default\";\n    CanvasBy[\"ASPECTRATIO\"] = \"aspectRatio\";\n    CanvasBy[\"REGION\"] = \"region\";\n    CanvasBy[\"OFFSET\"] = \"offset\";\n})(CanvasBy || (exports.CanvasBy = CanvasBy = {}));\nvar QueryOperation;\n(function(QueryOperation) {\n    QueryOperation[\"EQUALS\"] = \"\";\n    QueryOperation[\"NOT_EQUALS\"] = \"$ne\";\n    QueryOperation[\"INCLUDES\"] = \"$in\";\n    QueryOperation[\"EXCLUDES\"] = \"$nin\";\n    QueryOperation[\"IS_LESS_THAN\"] = \"$lt\";\n    QueryOperation[\"IS_LESS_THAN_OR_EQUAL\"] = \"$lte\";\n    QueryOperation[\"IS_GREATER_THAN\"] = \"$gt\";\n    QueryOperation[\"IS_GREATER_THAN_OR_EQUAL\"] = \"$gte\";\n    QueryOperation[\"EXISTS\"] = \"$exists\";\n    QueryOperation[\"MATCHES\"] = \"$regex\";\n})(QueryOperation || (exports.QueryOperation = QueryOperation = {}));\nvar TaxonomyQueryOperation;\n(function(TaxonomyQueryOperation) {\n    TaxonomyQueryOperation[\"ABOVE\"] = \"$above\";\n    TaxonomyQueryOperation[\"BELOW\"] = \"$below\";\n    TaxonomyQueryOperation[\"EQ_ABOVE\"] = \"$eq_above\";\n    TaxonomyQueryOperation[\"EQ_BELOW\"] = \"$eq_below\";\n})(TaxonomyQueryOperation || (exports.TaxonomyQueryOperation = TaxonomyQueryOperation = {}));\nvar QueryOperator;\n(function(QueryOperator) {\n    QueryOperator[\"AND\"] = \"$and\";\n    QueryOperator[\"OR\"] = \"$or\";\n})(QueryOperator || (exports.QueryOperator = QueryOperator = {})); //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/utils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/utils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getHost = void 0;\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\");\nfunction getHost(region = types_1.Region.US, host) {\n    if (host) return host;\n    let url = \"cdn.contentstack.io\";\n    if (region !== types_1.Region.US) {\n        url = region.toString().toLowerCase() + \"-cdn.contentstack.com\";\n    }\n    return url;\n}\nexports.getHost = getHost; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHLEtBQUs7QUFDdkIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsMEZBQVM7QUFDakMsU0FBU0YsUUFBUUcsU0FBU0YsUUFBUUcsTUFBTSxDQUFDQyxFQUFFLEVBQUVDLElBQUk7SUFDN0MsSUFBSUEsTUFDQSxPQUFPQTtJQUNYLElBQUlDLE1BQU07SUFDVixJQUFJSixXQUFXRixRQUFRRyxNQUFNLENBQUNDLEVBQUUsRUFBRTtRQUM5QkUsTUFBTUosT0FBT0ssUUFBUSxHQUFHQyxXQUFXLEtBQUs7SUFDNUM7SUFDQSxPQUFPRjtBQUNYO0FBQ0FULGVBQWUsR0FBR0UsU0FDbEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9saWIvdXRpbHMuanM/Y2FhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SG9zdCA9IHZvaWQgMDtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmZ1bmN0aW9uIGdldEhvc3QocmVnaW9uID0gdHlwZXNfMS5SZWdpb24uVVMsIGhvc3QpIHtcbiAgICBpZiAoaG9zdClcbiAgICAgICAgcmV0dXJuIGhvc3Q7XG4gICAgbGV0IHVybCA9ICdjZG4uY29udGVudHN0YWNrLmlvJztcbiAgICBpZiAocmVnaW9uICE9PSB0eXBlc18xLlJlZ2lvbi5VUykge1xuICAgICAgICB1cmwgPSByZWdpb24udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpICsgJy1jZG4uY29udGVudHN0YWNrLmNvbSc7XG4gICAgfVxuICAgIHJldHVybiB1cmw7XG59XG5leHBvcnRzLmdldEhvc3QgPSBnZXRIb3N0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0SG9zdCIsInR5cGVzXzEiLCJyZXF1aXJlIiwicmVnaW9uIiwiUmVnaW9uIiwiVVMiLCJob3N0IiwidXJsIiwidG9TdHJpbmciLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/config/persistance-storage-config.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/config/persistance-storage-config.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=persistance-storage-config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2NvbmZpZy9wZXJzaXN0YW5jZS1zdG9yYWdlLWNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxzREFBc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2NvbmZpZy9wZXJzaXN0YW5jZS1zdG9yYWdlLWNvbmZpZy5qcz85YTUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGVyc2lzdGFuY2Utc3RvcmFnZS1jb25maWcuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/config/persistance-storage-config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/helper/utils.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/helper/utils.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.iGlobal = void 0;\nexports.iGlobal =  false ? 0 : global; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2hlbHBlci91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHLEtBQUs7QUFDdkJBLGVBQWUsR0FBRyxNQUFrQixHQUFjRyxDQUFNQSxHQUFHQyxRQUMzRCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2hlbHBlci91dGlscy5qcz8wMmQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pR2xvYmFsID0gdm9pZCAwO1xuZXhwb3J0cy5pR2xvYmFsID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBnbG9iYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpR2xvYmFsIiwid2luZG93IiwiZ2xvYmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/helper/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./storages */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./config/persistance-storage-config */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/config/persistance-storage-config.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./persistance-store */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/persistance-store.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLHNEQUFPO0FBQy9CRCxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLHdHQUFTLEdBQUdIO0FBQ3pDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLDhHQUFZLEdBQUdIO0FBQzVDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLDBKQUFxQyxHQUFHSDtBQUNyRUUsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywwSEFBcUIsR0FBR0gsVUFDckQsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9wZXJzaXN0YW5jZS9pbmRleC5qcz9mNmM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3N0b3JhZ2VzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbmZpZy9wZXJzaXN0YW5jZS1zdG9yYWdlLWNvbmZpZ1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wZXJzaXN0YW5jZS1zdG9yZVwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/persistance-store.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/persistance-store.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.PersistanceStore = void 0;\nconst local_storage_1 = __webpack_require__(/*! ./storages/local-storage */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js\");\nconst memory_storage_1 = __webpack_require__(/*! ./storages/memory-storage */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js\");\nclass PersistanceStore {\n    constructor(config){\n        this.store = local_storage_1.localStorage;\n        let defaultConfig = {\n            storageType: \"localStorage\",\n            maxAge: 1000 * 60 * 60 * 24,\n            serializer: JSON.stringify,\n            deserializer: JSON.parse\n        };\n        defaultConfig = Object.assign(Object.assign({}, defaultConfig), config);\n        this.setStore(defaultConfig.storageType, defaultConfig.storage);\n        this.config = defaultConfig;\n        this.name = \"\"; // TODO add stack api key to name\n    }\n    setStore(type, store) {\n        switch(type){\n            case \"localStorage\":\n                break;\n            case \"memoryStorage\":\n                this.store = memory_storage_1.memoryStorage;\n                break;\n            case \"customStorage\":\n                if (!store) {\n                    throw new TypeError(\"StorageType `customStorage` should have `storage`.\");\n                } else {\n                    this.store = store;\n                }\n                break;\n        }\n    }\n    setItem(key, value, contentTypeUid, maxAge) {\n        if (!key) {\n            return;\n        }\n        const generatedKey = this.generateCSKey(key, contentTypeUid);\n        if (!value) {\n            this.store.removeItem(generatedKey);\n            return;\n        }\n        const expiry = this.calculateExpiry(maxAge);\n        let content = {\n            value,\n            expiry\n        };\n        if (this.config.serializer) {\n            content = this.config.serializer(content);\n        }\n        this.store.setItem(generatedKey, content);\n    }\n    getItem(key, contentTypeUid) {\n        const generatedKey = this.generateCSKey(key, contentTypeUid);\n        const content = this.store.getItem(generatedKey);\n        if (content) {\n            if (this.config.deserializer) {\n                const item = this.config.deserializer(content);\n                if (!this.isExpire(item.expiry)) {\n                    return item.value;\n                } else {\n                    this.removeItem(key, contentTypeUid);\n                }\n            }\n        }\n    }\n    removeItem(key, contentTypeUid) {\n        const generatedKey = this.generateCSKey(key, contentTypeUid);\n        this.store.removeItem(generatedKey);\n    }\n    clear(contentTypeUid) {\n        if (!contentTypeUid) {\n            this.store.clear();\n        } else {\n            this.store.each((_, key)=>{\n                if (key.match(contentTypeUid)) {\n                    this.store.removeItem(key);\n                }\n            });\n        }\n    }\n    generateCSKey(key, contentTypeUid) {\n        let keyPrefix = \"cs_store_js\";\n        if (contentTypeUid) {\n            keyPrefix = contentTypeUid + \"_\" + keyPrefix;\n        }\n        keyPrefix = this.name + \"_\" + keyPrefix + \"_\" + key;\n        return keyPrefix;\n    }\n    calculateExpiry(maxAge) {\n        const now = new Date();\n        const nowMSec = now.getTime();\n        if (maxAge) {\n            return nowMSec + maxAge;\n        } else if (this.config.maxAge) {\n            return nowMSec + this.config.maxAge;\n        }\n        return 0;\n    }\n    isExpire(dateTime) {\n        if (dateTime) {\n            return dateTime < new Date().getTime();\n        }\n        return true;\n    }\n}\nexports.PersistanceStore = PersistanceStore; //# sourceMappingURL=persistance-store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/persistance-store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.memoryStorage = exports.localStorage = void 0;\nvar local_storage_1 = __webpack_require__(/*! ./local-storage */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js\");\nObject.defineProperty(exports, \"localStorage\", ({\n    enumerable: true,\n    get: function() {\n        return local_storage_1.localStorage;\n    }\n}));\nvar memory_storage_1 = __webpack_require__(/*! ./memory-storage */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js\");\nObject.defineProperty(exports, \"memoryStorage\", ({\n    enumerable: true,\n    get: function() {\n        return memory_storage_1.memoryStorage;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3N0b3JhZ2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxQkFBcUIsR0FBR0Esb0JBQW9CLEdBQUcsS0FBSztBQUNwRCxJQUFJSSxrQkFBa0JDLG1CQUFPQSxDQUFDLDJIQUFpQjtBQUMvQ1AsZ0RBQStDO0lBQUVRLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9ILGdCQUFnQkQsWUFBWTtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQy9ILElBQUlLLG1CQUFtQkgsbUJBQU9BLENBQUMsNkhBQWtCO0FBQ2pEUCxpREFBZ0Q7SUFBRVEsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0MsaUJBQWlCTixhQUFhO0lBQUU7QUFBRSxDQUFDLEVBQUMsRUFDbEksaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9wZXJzaXN0YW5jZS9zdG9yYWdlcy9pbmRleC5qcz8wYmU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tZW1vcnlTdG9yYWdlID0gZXhwb3J0cy5sb2NhbFN0b3JhZ2UgPSB2b2lkIDA7XG52YXIgbG9jYWxfc3RvcmFnZV8xID0gcmVxdWlyZShcIi4vbG9jYWwtc3RvcmFnZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImxvY2FsU3RvcmFnZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9jYWxfc3RvcmFnZV8xLmxvY2FsU3RvcmFnZTsgfSB9KTtcbnZhciBtZW1vcnlfc3RvcmFnZV8xID0gcmVxdWlyZShcIi4vbWVtb3J5LXN0b3JhZ2VcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJtZW1vcnlTdG9yYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtZW1vcnlfc3RvcmFnZV8xLm1lbW9yeVN0b3JhZ2U7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtZW1vcnlTdG9yYWdlIiwibG9jYWxTdG9yYWdlIiwibG9jYWxfc3RvcmFnZV8xIiwicmVxdWlyZSIsImVudW1lcmFibGUiLCJnZXQiLCJtZW1vcnlfc3RvcmFnZV8xIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.localStorage = void 0;\nconst utils_1 = __webpack_require__(/*! ../helper/utils */ \"(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/helper/utils.js\");\nexports.localStorage = {\n    name: \"localStorage\",\n    clear: clear,\n    each: each,\n    getItem: getItem,\n    removeItem: removeItem,\n    setItem: setItem\n};\nfunction _localStorage() {\n    return utils_1.iGlobal.localStorage;\n}\nfunction clear() {\n    _localStorage().clear();\n}\nfunction each(callback) {\n    for(let i = _localStorage().length - 1; i >= 0; i--){\n        const key = _localStorage().key(i);\n        if (key && getItem(key)) {\n            const value = getItem(key);\n            callback(value, key);\n        }\n    }\n}\nfunction setItem(key, value) {\n    if (!key) {\n        return;\n    }\n    _localStorage().setItem(key, value);\n}\nfunction getItem(key) {\n    return _localStorage().getItem(key);\n}\nfunction removeItem(key) {\n    _localStorage().removeItem(key);\n} //# sourceMappingURL=local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3N0b3JhZ2VzL2xvY2FsLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQixHQUFHLEtBQUs7QUFDNUIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsaUhBQWlCO0FBQ3pDSixvQkFBb0IsR0FBRztJQUNuQkssTUFBTTtJQUNOQyxPQUFPQTtJQUNQQyxNQUFNQTtJQUNOQyxTQUFTQTtJQUNUQyxZQUFZQTtJQUNaQyxTQUFTQTtBQUNiO0FBQ0EsU0FBU0M7SUFDTCxPQUFPUixRQUFRUyxPQUFPLENBQUNWLFlBQVk7QUFDdkM7QUFDQSxTQUFTSTtJQUNMSyxnQkFBZ0JMLEtBQUs7QUFDekI7QUFDQSxTQUFTQyxLQUFLTSxRQUFRO0lBQ2xCLElBQUssSUFBSUMsSUFBSUgsZ0JBQWdCSSxNQUFNLEdBQUcsR0FBR0QsS0FBSyxHQUFHQSxJQUFLO1FBQ2xELE1BQU1FLE1BQU1MLGdCQUFnQkssR0FBRyxDQUFDRjtRQUNoQyxJQUFJRSxPQUFPUixRQUFRUSxNQUFNO1lBQ3JCLE1BQU1mLFFBQVFPLFFBQVFRO1lBQ3RCSCxTQUFTWixPQUFPZTtRQUNwQjtJQUNKO0FBQ0o7QUFDQSxTQUFTTixRQUFRTSxHQUFHLEVBQUVmLEtBQUs7SUFDdkIsSUFBSSxDQUFDZSxLQUFLO1FBQ047SUFDSjtJQUNBTCxnQkFBZ0JELE9BQU8sQ0FBQ00sS0FBS2Y7QUFDakM7QUFDQSxTQUFTTyxRQUFRUSxHQUFHO0lBQ2hCLE9BQU9MLGdCQUFnQkgsT0FBTyxDQUFDUTtBQUNuQztBQUNBLFNBQVNQLFdBQVdPLEdBQUc7SUFDbkJMLGdCQUFnQkYsVUFBVSxDQUFDTztBQUMvQixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvcGVyc2lzdGFuY2Uvc3RvcmFnZXMvbG9jYWwtc3RvcmFnZS5qcz9jNTUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5sb2NhbFN0b3JhZ2UgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4uL2hlbHBlci91dGlsc1wiKTtcbmV4cG9ydHMubG9jYWxTdG9yYWdlID0ge1xuICAgIG5hbWU6ICdsb2NhbFN0b3JhZ2UnLFxuICAgIGNsZWFyOiBjbGVhcixcbiAgICBlYWNoOiBlYWNoLFxuICAgIGdldEl0ZW06IGdldEl0ZW0sXG4gICAgcmVtb3ZlSXRlbTogcmVtb3ZlSXRlbSxcbiAgICBzZXRJdGVtOiBzZXRJdGVtLFxufTtcbmZ1bmN0aW9uIF9sb2NhbFN0b3JhZ2UoKSB7XG4gICAgcmV0dXJuIHV0aWxzXzEuaUdsb2JhbC5sb2NhbFN0b3JhZ2U7XG59XG5mdW5jdGlvbiBjbGVhcigpIHtcbiAgICBfbG9jYWxTdG9yYWdlKCkuY2xlYXIoKTtcbn1cbmZ1bmN0aW9uIGVhY2goY2FsbGJhY2spIHtcbiAgICBmb3IgKGxldCBpID0gX2xvY2FsU3RvcmFnZSgpLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IF9sb2NhbFN0b3JhZ2UoKS5rZXkoaSk7XG4gICAgICAgIGlmIChrZXkgJiYgZ2V0SXRlbShrZXkpKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGdldEl0ZW0oa2V5KTtcbiAgICAgICAgICAgIGNhbGxiYWNrKHZhbHVlLCBrZXkpO1xuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24gc2V0SXRlbShrZXksIHZhbHVlKSB7XG4gICAgaWYgKCFrZXkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBfbG9jYWxTdG9yYWdlKCkuc2V0SXRlbShrZXksIHZhbHVlKTtcbn1cbmZ1bmN0aW9uIGdldEl0ZW0oa2V5KSB7XG4gICAgcmV0dXJuIF9sb2NhbFN0b3JhZ2UoKS5nZXRJdGVtKGtleSk7XG59XG5mdW5jdGlvbiByZW1vdmVJdGVtKGtleSkge1xuICAgIF9sb2NhbFN0b3JhZ2UoKS5yZW1vdmVJdGVtKGtleSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2NhbC1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImxvY2FsU3RvcmFnZSIsInV0aWxzXzEiLCJyZXF1aXJlIiwibmFtZSIsImNsZWFyIiwiZWFjaCIsImdldEl0ZW0iLCJyZW1vdmVJdGVtIiwic2V0SXRlbSIsIl9sb2NhbFN0b3JhZ2UiLCJpR2xvYmFsIiwiY2FsbGJhY2siLCJpIiwibGVuZ3RoIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.memoryStorage = void 0;\nexports.memoryStorage = {\n    name: \"memoryStorage\",\n    clear: clear,\n    each: each,\n    getItem: getItem,\n    removeItem: removeItem,\n    setItem: setItem\n};\nlet memory = {};\nfunction clear() {\n    memory = {};\n}\nfunction each(callback) {\n    for(const key in memory){\n        const value = getItem(key);\n        callback(value, key);\n    }\n}\nfunction setItem(key, value) {\n    if (!key) {\n        return;\n    }\n    memory[key] = value;\n}\nfunction getItem(key) {\n    return memory[key];\n}\nfunction removeItem(key) {\n    delete memory[key];\n} //# sourceMappingURL=memory-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3N0b3JhZ2VzL21lbW9yeS1zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxQkFBcUIsR0FBRyxLQUFLO0FBQzdCQSxxQkFBcUIsR0FBRztJQUNwQkcsTUFBTTtJQUNOQyxPQUFPQTtJQUNQQyxNQUFNQTtJQUNOQyxTQUFTQTtJQUNUQyxZQUFZQTtJQUNaQyxTQUFTQTtBQUNiO0FBQ0EsSUFBSUMsU0FBUyxDQUFDO0FBQ2QsU0FBU0w7SUFDTEssU0FBUyxDQUFDO0FBQ2Q7QUFDQSxTQUFTSixLQUFLSyxRQUFRO0lBQ2xCLElBQUssTUFBTUMsT0FBT0YsT0FBUTtRQUN0QixNQUFNUixRQUFRSyxRQUFRSztRQUN0QkQsU0FBU1QsT0FBT1U7SUFDcEI7QUFDSjtBQUNBLFNBQVNILFFBQVFHLEdBQUcsRUFBRVYsS0FBSztJQUN2QixJQUFJLENBQUNVLEtBQUs7UUFDTjtJQUNKO0lBQ0FGLE1BQU0sQ0FBQ0UsSUFBSSxHQUFHVjtBQUNsQjtBQUNBLFNBQVNLLFFBQVFLLEdBQUc7SUFDaEIsT0FBT0YsTUFBTSxDQUFDRSxJQUFJO0FBQ3RCO0FBQ0EsU0FBU0osV0FBV0ksR0FBRztJQUNuQixPQUFPRixNQUFNLENBQUNFLElBQUk7QUFDdEIsRUFDQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3N0b3JhZ2VzL21lbW9yeS1zdG9yYWdlLmpzPzc4N2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lbW9yeVN0b3JhZ2UgPSB2b2lkIDA7XG5leHBvcnRzLm1lbW9yeVN0b3JhZ2UgPSB7XG4gICAgbmFtZTogJ21lbW9yeVN0b3JhZ2UnLFxuICAgIGNsZWFyOiBjbGVhcixcbiAgICBlYWNoOiBlYWNoLFxuICAgIGdldEl0ZW06IGdldEl0ZW0sXG4gICAgcmVtb3ZlSXRlbTogcmVtb3ZlSXRlbSxcbiAgICBzZXRJdGVtOiBzZXRJdGVtLFxufTtcbmxldCBtZW1vcnkgPSB7fTtcbmZ1bmN0aW9uIGNsZWFyKCkge1xuICAgIG1lbW9yeSA9IHt9O1xufVxuZnVuY3Rpb24gZWFjaChjYWxsYmFjaykge1xuICAgIGZvciAoY29uc3Qga2V5IGluIG1lbW9yeSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGdldEl0ZW0oa2V5KTtcbiAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSk7XG4gICAgfVxufVxuZnVuY3Rpb24gc2V0SXRlbShrZXksIHZhbHVlKSB7XG4gICAgaWYgKCFrZXkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBtZW1vcnlba2V5XSA9IHZhbHVlO1xufVxuZnVuY3Rpb24gZ2V0SXRlbShrZXkpIHtcbiAgICByZXR1cm4gbWVtb3J5W2tleV07XG59XG5mdW5jdGlvbiByZW1vdmVJdGVtKGtleSkge1xuICAgIGRlbGV0ZSBtZW1vcnlba2V5XTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lbW9yeS1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1lbW9yeVN0b3JhZ2UiLCJuYW1lIiwiY2xlYXIiLCJlYWNoIiwiZ2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJzZXRJdGVtIiwibWVtb3J5IiwiY2FsbGJhY2siLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/types/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/types/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3R5cGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvcGVyc2lzdGFuY2UvdHlwZXMvaW5kZXguanM/MjIzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/types/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/contentstack-core */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-core.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/types */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/contentstack-error */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-error.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/request */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/request.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/retryPolicy/delivery-sdk-handlers */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/retryPolicy/delivery-sdk-handlers.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyw4R0FBeUIsR0FBR0g7QUFDekRFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsc0ZBQWEsR0FBR0g7QUFDN0NFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsZ0hBQTBCLEdBQUdIO0FBQzFERSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLDBGQUFlLEdBQUdIO0FBQy9DRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLDhJQUF5QyxHQUFHSCxVQUN6RSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9pbmRleC5qcz9kNjk2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2xpYi9jb250ZW50c3RhY2stY29yZVwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvdHlwZXNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbGliL2NvbnRlbnRzdGFjay1lcnJvclwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvcmVxdWVzdFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvcmV0cnlQb2xpY3kvZGVsaXZlcnktc2RrLWhhbmRsZXJzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-core.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-core.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.httpClient = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst lodash_1 = __webpack_require__(/*! lodash */ \"lodash\");\nconst param_serializer_1 = __webpack_require__(/*! ./param-serializer */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/param-serializer.js\");\nconst axios_1 = tslib_1.__importDefault(__webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/dist/node/axios.cjs\"));\nfunction httpClient(options) {\n    const defaultConfig = {\n        insecure: false,\n        retryOnError: true,\n        headers: {},\n        basePath: \"\",\n        proxy: false,\n        httpAgent: false,\n        httpsAgent: false,\n        timeout: 30000,\n        logHandler: (level, data)=>{\n            if (level === \"error\" && data) {\n                const title = [\n                    data.name,\n                    data.message\n                ].filter((a)=>a).join(\" - \");\n                console.error(`[error] ${title}`);\n                return;\n            }\n            console.log(`[${level}] ${data}`);\n        },\n        retryCondition: (error)=>{\n            if (error.response && error.response.status === 429) {\n                return true;\n            }\n            return false;\n        },\n        versioningStrategy: \"path\"\n    };\n    const config = Object.assign(Object.assign({}, defaultConfig), (0, lodash_1.cloneDeep)(options));\n    if (config.apiKey && config.headers) {\n        config.headers.api_key = config.apiKey;\n    }\n    if (config.accessToken && config.headers) {\n        config.headers.access_token = config.accessToken;\n    }\n    const protocol = config.insecure ? \"http\" : \"https\";\n    const hostname = config.defaultHostname;\n    const port = config.port || 443;\n    const version = config.version || \"v3\";\n    const baseURL = config.endpoint || `${protocol}://${hostname}:${port}${config.basePath}/${version}`;\n    const instance = axios_1.default.create(Object.assign(Object.assign({\n        // Axios\n        baseURL\n    }, config), {\n        paramsSerializer: {\n            serialize: param_serializer_1.serialize\n        }\n    }));\n    instance.httpClientParams = options;\n    if (config.onError) {\n        instance.interceptors.response.use((response)=>response, config.onError);\n    }\n    return instance;\n}\nexports.httpClient = httpClient; //# sourceMappingURL=contentstack-core.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvY29udGVudHN0YWNrLWNvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtCQUFrQixHQUFHLEtBQUs7QUFDMUIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsV0FBV0QsbUJBQU9BLENBQUMsc0JBQVE7QUFDakMsTUFBTUUscUJBQXFCRixtQkFBT0EsQ0FBQyx3R0FBb0I7QUFDdkQsTUFBTUcsVUFBVUosUUFBUUssZUFBZSxDQUFDSixtQkFBT0EsQ0FBQyw2REFBTztBQUN2RCxTQUFTRixXQUFXTyxPQUFPO0lBQ3ZCLE1BQU1DLGdCQUFnQjtRQUNsQkMsVUFBVTtRQUNWQyxjQUFjO1FBQ2RDLFNBQVMsQ0FBQztRQUNWQyxVQUFVO1FBQ1ZDLE9BQU87UUFDUEMsV0FBVztRQUNYQyxZQUFZO1FBQ1pDLFNBQVM7UUFDVEMsWUFBWSxDQUFDQyxPQUFPQztZQUNoQixJQUFJRCxVQUFVLFdBQVdDLE1BQU07Z0JBQzNCLE1BQU1DLFFBQVE7b0JBQUNELEtBQUtFLElBQUk7b0JBQUVGLEtBQUtHLE9BQU87aUJBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUNDLElBQU1BLEdBQUdDLElBQUksQ0FBQztnQkFDOURDLFFBQVFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsRUFBRVAsTUFBTSxDQUFDO2dCQUNoQztZQUNKO1lBQ0FNLFFBQVFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRVYsTUFBTSxFQUFFLEVBQUVDLEtBQUssQ0FBQztRQUNwQztRQUNBVSxnQkFBZ0IsQ0FBQ0Y7WUFDYixJQUFJQSxNQUFNRyxRQUFRLElBQUlILE1BQU1HLFFBQVEsQ0FBQ0MsTUFBTSxLQUFLLEtBQUs7Z0JBQ2pELE9BQU87WUFDWDtZQUNBLE9BQU87UUFDWDtRQUNBQyxvQkFBb0I7SUFDeEI7SUFDQSxNQUFNQyxTQUFTckMsT0FBT3NDLE1BQU0sQ0FBQ3RDLE9BQU9zQyxNQUFNLENBQUMsQ0FBQyxHQUFHMUIsZ0JBQWdCLENBQUMsR0FBR0wsU0FBU2dDLFNBQVMsRUFBRTVCO0lBQ3ZGLElBQUkwQixPQUFPRyxNQUFNLElBQUlILE9BQU90QixPQUFPLEVBQUU7UUFDakNzQixPQUFPdEIsT0FBTyxDQUFDMEIsT0FBTyxHQUFHSixPQUFPRyxNQUFNO0lBQzFDO0lBQ0EsSUFBSUgsT0FBT0ssV0FBVyxJQUFJTCxPQUFPdEIsT0FBTyxFQUFFO1FBQ3RDc0IsT0FBT3RCLE9BQU8sQ0FBQzRCLFlBQVksR0FBR04sT0FBT0ssV0FBVztJQUNwRDtJQUNBLE1BQU1FLFdBQVdQLE9BQU94QixRQUFRLEdBQUcsU0FBUztJQUM1QyxNQUFNZ0MsV0FBV1IsT0FBT1MsZUFBZTtJQUN2QyxNQUFNQyxPQUFPVixPQUFPVSxJQUFJLElBQUk7SUFDNUIsTUFBTUMsVUFBVVgsT0FBT1csT0FBTyxJQUFJO0lBQ2xDLE1BQU1DLFVBQVVaLE9BQU9hLFFBQVEsSUFBSSxDQUFDLEVBQUVOLFNBQVMsR0FBRyxFQUFFQyxTQUFTLENBQUMsRUFBRUUsS0FBSyxFQUFFVixPQUFPckIsUUFBUSxDQUFDLENBQUMsRUFBRWdDLFFBQVEsQ0FBQztJQUNuRyxNQUFNRyxXQUFXMUMsUUFBUTJDLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDckQsT0FBT3NDLE1BQU0sQ0FBQ3RDLE9BQU9zQyxNQUFNLENBQUM7UUFDaEUsUUFBUTtRQUNSVztJQUFRLEdBQUdaLFNBQVM7UUFBRWlCLGtCQUFrQjtZQUNwQ0MsV0FBVy9DLG1CQUFtQitDLFNBQVM7UUFDM0M7SUFBRTtJQUNOSixTQUFTSyxnQkFBZ0IsR0FBRzdDO0lBQzVCLElBQUkwQixPQUFPb0IsT0FBTyxFQUFFO1FBQ2hCTixTQUFTTyxZQUFZLENBQUN4QixRQUFRLENBQUN5QixHQUFHLENBQUMsQ0FBQ3pCLFdBQWFBLFVBQVVHLE9BQU9vQixPQUFPO0lBQzdFO0lBQ0EsT0FBT047QUFDWDtBQUNBakQsa0JBQWtCLEdBQUdFLFlBQ3JCLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2NvcmUvZGlzdC9janMvc3JjL2xpYi9jb250ZW50c3RhY2stY29yZS5qcz9iMzNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5odHRwQ2xpZW50ID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGxvZGFzaF8xID0gcmVxdWlyZShcImxvZGFzaFwiKTtcbmNvbnN0IHBhcmFtX3NlcmlhbGl6ZXJfMSA9IHJlcXVpcmUoXCIuL3BhcmFtLXNlcmlhbGl6ZXJcIik7XG5jb25zdCBheGlvc18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImF4aW9zXCIpKTtcbmZ1bmN0aW9uIGh0dHBDbGllbnQob3B0aW9ucykge1xuICAgIGNvbnN0IGRlZmF1bHRDb25maWcgPSB7XG4gICAgICAgIGluc2VjdXJlOiBmYWxzZSxcbiAgICAgICAgcmV0cnlPbkVycm9yOiB0cnVlLFxuICAgICAgICBoZWFkZXJzOiB7fSxcbiAgICAgICAgYmFzZVBhdGg6ICcnLFxuICAgICAgICBwcm94eTogZmFsc2UsXG4gICAgICAgIGh0dHBBZ2VudDogZmFsc2UsXG4gICAgICAgIGh0dHBzQWdlbnQ6IGZhbHNlLFxuICAgICAgICB0aW1lb3V0OiAzMDAwMCxcbiAgICAgICAgbG9nSGFuZGxlcjogKGxldmVsLCBkYXRhKSA9PiB7XG4gICAgICAgICAgICBpZiAobGV2ZWwgPT09ICdlcnJvcicgJiYgZGF0YSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gW2RhdGEubmFtZSwgZGF0YS5tZXNzYWdlXS5maWx0ZXIoKGEpID0+IGEpLmpvaW4oJyAtICcpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFtlcnJvcl0gJHt0aXRsZX1gKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgWyR7bGV2ZWx9XSAke2RhdGF9YCk7XG4gICAgICAgIH0sXG4gICAgICAgIHJldHJ5Q29uZGl0aW9uOiAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGlmIChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5zdGF0dXMgPT09IDQyOSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9LFxuICAgICAgICB2ZXJzaW9uaW5nU3RyYXRlZ3k6ICdwYXRoJyxcbiAgICB9O1xuICAgIGNvbnN0IGNvbmZpZyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdENvbmZpZyksICgwLCBsb2Rhc2hfMS5jbG9uZURlZXApKG9wdGlvbnMpKTtcbiAgICBpZiAoY29uZmlnLmFwaUtleSAmJiBjb25maWcuaGVhZGVycykge1xuICAgICAgICBjb25maWcuaGVhZGVycy5hcGlfa2V5ID0gY29uZmlnLmFwaUtleTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZy5hY2Nlc3NUb2tlbiAmJiBjb25maWcuaGVhZGVycykge1xuICAgICAgICBjb25maWcuaGVhZGVycy5hY2Nlc3NfdG9rZW4gPSBjb25maWcuYWNjZXNzVG9rZW47XG4gICAgfVxuICAgIGNvbnN0IHByb3RvY29sID0gY29uZmlnLmluc2VjdXJlID8gJ2h0dHAnIDogJ2h0dHBzJztcbiAgICBjb25zdCBob3N0bmFtZSA9IGNvbmZpZy5kZWZhdWx0SG9zdG5hbWU7XG4gICAgY29uc3QgcG9ydCA9IGNvbmZpZy5wb3J0IHx8IDQ0MztcbiAgICBjb25zdCB2ZXJzaW9uID0gY29uZmlnLnZlcnNpb24gfHwgJ3YzJztcbiAgICBjb25zdCBiYXNlVVJMID0gY29uZmlnLmVuZHBvaW50IHx8IGAke3Byb3RvY29sfTovLyR7aG9zdG5hbWV9OiR7cG9ydH0ke2NvbmZpZy5iYXNlUGF0aH0vJHt2ZXJzaW9ufWA7XG4gICAgY29uc3QgaW5zdGFuY2UgPSBheGlvc18xLmRlZmF1bHQuY3JlYXRlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IFxuICAgICAgICAvLyBBeGlvc1xuICAgICAgICBiYXNlVVJMIH0sIGNvbmZpZyksIHsgcGFyYW1zU2VyaWFsaXplcjoge1xuICAgICAgICAgICAgc2VyaWFsaXplOiBwYXJhbV9zZXJpYWxpemVyXzEuc2VyaWFsaXplLFxuICAgICAgICB9IH0pKTtcbiAgICBpbnN0YW5jZS5odHRwQ2xpZW50UGFyYW1zID0gb3B0aW9ucztcbiAgICBpZiAoY29uZmlnLm9uRXJyb3IpIHtcbiAgICAgICAgaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZSgocmVzcG9uc2UpID0+IHJlc3BvbnNlLCBjb25maWcub25FcnJvcik7XG4gICAgfVxuICAgIHJldHVybiBpbnN0YW5jZTtcbn1cbmV4cG9ydHMuaHR0cENsaWVudCA9IGh0dHBDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250ZW50c3RhY2stY29yZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJodHRwQ2xpZW50IiwidHNsaWJfMSIsInJlcXVpcmUiLCJsb2Rhc2hfMSIsInBhcmFtX3NlcmlhbGl6ZXJfMSIsImF4aW9zXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJvcHRpb25zIiwiZGVmYXVsdENvbmZpZyIsImluc2VjdXJlIiwicmV0cnlPbkVycm9yIiwiaGVhZGVycyIsImJhc2VQYXRoIiwicHJveHkiLCJodHRwQWdlbnQiLCJodHRwc0FnZW50IiwidGltZW91dCIsImxvZ0hhbmRsZXIiLCJsZXZlbCIsImRhdGEiLCJ0aXRsZSIsIm5hbWUiLCJtZXNzYWdlIiwiZmlsdGVyIiwiYSIsImpvaW4iLCJjb25zb2xlIiwiZXJyb3IiLCJsb2ciLCJyZXRyeUNvbmRpdGlvbiIsInJlc3BvbnNlIiwic3RhdHVzIiwidmVyc2lvbmluZ1N0cmF0ZWd5IiwiY29uZmlnIiwiYXNzaWduIiwiY2xvbmVEZWVwIiwiYXBpS2V5IiwiYXBpX2tleSIsImFjY2Vzc1Rva2VuIiwiYWNjZXNzX3Rva2VuIiwicHJvdG9jb2wiLCJob3N0bmFtZSIsImRlZmF1bHRIb3N0bmFtZSIsInBvcnQiLCJ2ZXJzaW9uIiwiYmFzZVVSTCIsImVuZHBvaW50IiwiaW5zdGFuY2UiLCJkZWZhdWx0IiwiY3JlYXRlIiwicGFyYW1zU2VyaWFsaXplciIsInNlcmlhbGl6ZSIsImh0dHBDbGllbnRQYXJhbXMiLCJvbkVycm9yIiwiaW50ZXJjZXB0b3JzIiwidXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-core.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-error.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-error.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.error = void 0;\nfunction error(errorResponse) {\n    const config = errorResponse.config;\n    const response = errorResponse.response;\n    if (!config || !response) {\n        const errorObj = new Error();\n        Object.assign(errorObj, errorResponse);\n        errorObj.message = JSON.stringify(errorResponse);\n        throw errorObj;\n    }\n    const data = response.data;\n    const errorDetails = {\n        status: response.status,\n        statusText: response.statusText\n    };\n    if (config.headers && config.headers.authtoken) {\n        const token = `...${config.headers.authtoken.substr(-5)}`;\n        config.headers.authtoken = token;\n    }\n    if (config.headers && config.headers.authorization) {\n        const token = `...${config.headers.authorization.substr(-5)}`;\n        config.headers.authorization = token;\n    }\n    errorDetails.request = {\n        url: config.url,\n        method: config.method,\n        data: config.data,\n        headers: config.headers\n    };\n    if (data) {\n        errorDetails.errorMessage = data.error_message || data.message || \"\";\n        errorDetails.errorCode = data.error_code || 0;\n        errorDetails.errors = data.errors || {};\n        errorDetails.error = data.error || \"\";\n    }\n    const errorObj = new Error();\n    Object.assign(errorObj, errorDetails);\n    errorObj.message = JSON.stringify(errorDetails);\n    return errorObj;\n}\nexports.error = error; //# sourceMappingURL=contentstack-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvY29udGVudHN0YWNrLWVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxhQUFhLEdBQUcsS0FBSztBQUNyQixTQUFTRSxNQUFNQyxhQUFhO0lBQ3hCLE1BQU1DLFNBQVNELGNBQWNDLE1BQU07SUFDbkMsTUFBTUMsV0FBV0YsY0FBY0UsUUFBUTtJQUN2QyxJQUFJLENBQUNELFVBQVUsQ0FBQ0MsVUFBVTtRQUN0QixNQUFNQyxXQUFXLElBQUlDO1FBQ3JCVCxPQUFPVSxNQUFNLENBQUNGLFVBQVVIO1FBQ3hCRyxTQUFTRyxPQUFPLEdBQUdDLEtBQUtDLFNBQVMsQ0FBQ1I7UUFDbEMsTUFBTUc7SUFDVjtJQUNBLE1BQU1NLE9BQU9QLFNBQVNPLElBQUk7SUFDMUIsTUFBTUMsZUFBZTtRQUNqQkMsUUFBUVQsU0FBU1MsTUFBTTtRQUN2QkMsWUFBWVYsU0FBU1UsVUFBVTtJQUNuQztJQUNBLElBQUlYLE9BQU9ZLE9BQU8sSUFBSVosT0FBT1ksT0FBTyxDQUFDQyxTQUFTLEVBQUU7UUFDNUMsTUFBTUMsUUFBUSxDQUFDLEdBQUcsRUFBRWQsT0FBT1ksT0FBTyxDQUFDQyxTQUFTLENBQUNFLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQztRQUN6RGYsT0FBT1ksT0FBTyxDQUFDQyxTQUFTLEdBQUdDO0lBQy9CO0lBQ0EsSUFBSWQsT0FBT1ksT0FBTyxJQUFJWixPQUFPWSxPQUFPLENBQUNJLGFBQWEsRUFBRTtRQUNoRCxNQUFNRixRQUFRLENBQUMsR0FBRyxFQUFFZCxPQUFPWSxPQUFPLENBQUNJLGFBQWEsQ0FBQ0QsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDO1FBQzdEZixPQUFPWSxPQUFPLENBQUNJLGFBQWEsR0FBR0Y7SUFDbkM7SUFDQUwsYUFBYVEsT0FBTyxHQUFHO1FBQ25CQyxLQUFLbEIsT0FBT2tCLEdBQUc7UUFDZkMsUUFBUW5CLE9BQU9tQixNQUFNO1FBQ3JCWCxNQUFNUixPQUFPUSxJQUFJO1FBQ2pCSSxTQUFTWixPQUFPWSxPQUFPO0lBQzNCO0lBQ0EsSUFBSUosTUFBTTtRQUNOQyxhQUFhVyxZQUFZLEdBQUdaLEtBQUthLGFBQWEsSUFBSWIsS0FBS0gsT0FBTyxJQUFJO1FBQ2xFSSxhQUFhYSxTQUFTLEdBQUdkLEtBQUtlLFVBQVUsSUFBSTtRQUM1Q2QsYUFBYWUsTUFBTSxHQUFHaEIsS0FBS2dCLE1BQU0sSUFBSSxDQUFDO1FBQ3RDZixhQUFhWCxLQUFLLEdBQUdVLEtBQUtWLEtBQUssSUFBSTtJQUN2QztJQUNBLE1BQU1JLFdBQVcsSUFBSUM7SUFDckJULE9BQU9VLE1BQU0sQ0FBQ0YsVUFBVU87SUFDeEJQLFNBQVNHLE9BQU8sR0FBR0MsS0FBS0MsU0FBUyxDQUFDRTtJQUNsQyxPQUFPUDtBQUNYO0FBQ0FOLGFBQWEsR0FBR0UsT0FDaEIsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svY29yZS9kaXN0L2Nqcy9zcmMvbGliL2NvbnRlbnRzdGFjay1lcnJvci5qcz9iZWI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5lcnJvciA9IHZvaWQgMDtcbmZ1bmN0aW9uIGVycm9yKGVycm9yUmVzcG9uc2UpIHtcbiAgICBjb25zdCBjb25maWcgPSBlcnJvclJlc3BvbnNlLmNvbmZpZztcbiAgICBjb25zdCByZXNwb25zZSA9IGVycm9yUmVzcG9uc2UucmVzcG9uc2U7XG4gICAgaWYgKCFjb25maWcgfHwgIXJlc3BvbnNlKSB7XG4gICAgICAgIGNvbnN0IGVycm9yT2JqID0gbmV3IEVycm9yKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oZXJyb3JPYmosIGVycm9yUmVzcG9uc2UpO1xuICAgICAgICBlcnJvck9iai5tZXNzYWdlID0gSlNPTi5zdHJpbmdpZnkoZXJyb3JSZXNwb25zZSk7XG4gICAgICAgIHRocm93IGVycm9yT2JqO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gcmVzcG9uc2UuZGF0YTtcbiAgICBjb25zdCBlcnJvckRldGFpbHMgPSB7XG4gICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXNwb25zZS5zdGF0dXNUZXh0LFxuICAgIH07XG4gICAgaWYgKGNvbmZpZy5oZWFkZXJzICYmIGNvbmZpZy5oZWFkZXJzLmF1dGh0b2tlbikge1xuICAgICAgICBjb25zdCB0b2tlbiA9IGAuLi4ke2NvbmZpZy5oZWFkZXJzLmF1dGh0b2tlbi5zdWJzdHIoLTUpfWA7XG4gICAgICAgIGNvbmZpZy5oZWFkZXJzLmF1dGh0b2tlbiA9IHRva2VuO1xuICAgIH1cbiAgICBpZiAoY29uZmlnLmhlYWRlcnMgJiYgY29uZmlnLmhlYWRlcnMuYXV0aG9yaXphdGlvbikge1xuICAgICAgICBjb25zdCB0b2tlbiA9IGAuLi4ke2NvbmZpZy5oZWFkZXJzLmF1dGhvcml6YXRpb24uc3Vic3RyKC01KX1gO1xuICAgICAgICBjb25maWcuaGVhZGVycy5hdXRob3JpemF0aW9uID0gdG9rZW47XG4gICAgfVxuICAgIGVycm9yRGV0YWlscy5yZXF1ZXN0ID0ge1xuICAgICAgICB1cmw6IGNvbmZpZy51cmwsXG4gICAgICAgIG1ldGhvZDogY29uZmlnLm1ldGhvZCxcbiAgICAgICAgZGF0YTogY29uZmlnLmRhdGEsXG4gICAgICAgIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzLFxuICAgIH07XG4gICAgaWYgKGRhdGEpIHtcbiAgICAgICAgZXJyb3JEZXRhaWxzLmVycm9yTWVzc2FnZSA9IGRhdGEuZXJyb3JfbWVzc2FnZSB8fCBkYXRhLm1lc3NhZ2UgfHwgJyc7XG4gICAgICAgIGVycm9yRGV0YWlscy5lcnJvckNvZGUgPSBkYXRhLmVycm9yX2NvZGUgfHwgMDtcbiAgICAgICAgZXJyb3JEZXRhaWxzLmVycm9ycyA9IGRhdGEuZXJyb3JzIHx8IHt9O1xuICAgICAgICBlcnJvckRldGFpbHMuZXJyb3IgPSBkYXRhLmVycm9yIHx8ICcnO1xuICAgIH1cbiAgICBjb25zdCBlcnJvck9iaiA9IG5ldyBFcnJvcigpO1xuICAgIE9iamVjdC5hc3NpZ24oZXJyb3JPYmosIGVycm9yRGV0YWlscyk7XG4gICAgZXJyb3JPYmoubWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KGVycm9yRGV0YWlscyk7XG4gICAgcmV0dXJuIGVycm9yT2JqO1xufVxuZXhwb3J0cy5lcnJvciA9IGVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGVudHN0YWNrLWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVycm9yIiwiZXJyb3JSZXNwb25zZSIsImNvbmZpZyIsInJlc3BvbnNlIiwiZXJyb3JPYmoiLCJFcnJvciIsImFzc2lnbiIsIm1lc3NhZ2UiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsImVycm9yRGV0YWlscyIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJoZWFkZXJzIiwiYXV0aHRva2VuIiwidG9rZW4iLCJzdWJzdHIiLCJhdXRob3JpemF0aW9uIiwicmVxdWVzdCIsInVybCIsIm1ldGhvZCIsImVycm9yTWVzc2FnZSIsImVycm9yX21lc3NhZ2UiLCJlcnJvckNvZGUiLCJlcnJvcl9jb2RlIiwiZXJyb3JzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/contentstack-error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/param-serializer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/param-serializer.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.serialize = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst Qs = tslib_1.__importStar(__webpack_require__(/*! qs */ \"(rsc)/./node_modules/qs/lib/index.js\"));\nfunction serialize(params) {\n    const query = params.query;\n    delete params.query;\n    let qs = Qs.stringify(params, {\n        arrayFormat: \"brackets\"\n    });\n    if (query) {\n        qs = qs + `&query=${encodeURI(JSON.stringify(query))}`;\n    }\n    params.query = query;\n    return qs;\n}\nexports.serialize = serialize; //# sourceMappingURL=param-serializer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvcGFyYW0tc2VyaWFsaXplci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCLEdBQUcsS0FBSztBQUN6QixNQUFNRyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQixNQUFNQyxLQUFLRixRQUFRRyxZQUFZLENBQUNGLG1CQUFPQSxDQUFDLGdEQUFJO0FBQzVDLFNBQVNGLFVBQVVLLE1BQU07SUFDckIsTUFBTUMsUUFBUUQsT0FBT0MsS0FBSztJQUMxQixPQUFPRCxPQUFPQyxLQUFLO0lBQ25CLElBQUlDLEtBQUtKLEdBQUdLLFNBQVMsQ0FBQ0gsUUFBUTtRQUFFSSxhQUFhO0lBQVc7SUFDeEQsSUFBSUgsT0FBTztRQUNQQyxLQUFLQSxLQUFLLENBQUMsT0FBTyxFQUFFRyxVQUFVQyxLQUFLSCxTQUFTLENBQUNGLFFBQVEsQ0FBQztJQUMxRDtJQUNBRCxPQUFPQyxLQUFLLEdBQUdBO0lBQ2YsT0FBT0M7QUFDWDtBQUNBVCxpQkFBaUIsR0FBR0UsV0FDcEIsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svY29yZS9kaXN0L2Nqcy9zcmMvbGliL3BhcmFtLXNlcmlhbGl6ZXIuanM/YWQyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2VyaWFsaXplID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IFFzID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcInFzXCIpKTtcbmZ1bmN0aW9uIHNlcmlhbGl6ZShwYXJhbXMpIHtcbiAgICBjb25zdCBxdWVyeSA9IHBhcmFtcy5xdWVyeTtcbiAgICBkZWxldGUgcGFyYW1zLnF1ZXJ5O1xuICAgIGxldCBxcyA9IFFzLnN0cmluZ2lmeShwYXJhbXMsIHsgYXJyYXlGb3JtYXQ6ICdicmFja2V0cycgfSk7XG4gICAgaWYgKHF1ZXJ5KSB7XG4gICAgICAgIHFzID0gcXMgKyBgJnF1ZXJ5PSR7ZW5jb2RlVVJJKEpTT04uc3RyaW5naWZ5KHF1ZXJ5KSl9YDtcbiAgICB9XG4gICAgcGFyYW1zLnF1ZXJ5ID0gcXVlcnk7XG4gICAgcmV0dXJuIHFzO1xufVxuZXhwb3J0cy5zZXJpYWxpemUgPSBzZXJpYWxpemU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJhbS1zZXJpYWxpemVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInNlcmlhbGl6ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiUXMiLCJfX2ltcG9ydFN0YXIiLCJwYXJhbXMiLCJxdWVyeSIsInFzIiwic3RyaW5naWZ5IiwiYXJyYXlGb3JtYXQiLCJlbmNvZGVVUkkiLCJKU09OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/param-serializer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/request.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/request.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getData = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nfunction getData(instance, url, data) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        try {\n            const response = yield instance.get(url, {\n                params: data\n            });\n            if (response.data) {\n                return response.data;\n            } else {\n                throw Error(JSON.stringify(response));\n            }\n        } catch (err) {\n            throw err;\n        }\n    });\n}\nexports.getData = getData; //# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHLEtBQUs7QUFDdkIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsU0FBU0YsUUFBUUcsUUFBUSxFQUFFQyxHQUFHLEVBQUVDLElBQUk7SUFDaEMsT0FBT0osUUFBUUssU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQzNDLElBQUk7WUFDQSxNQUFNQyxXQUFXLE1BQU1KLFNBQVNLLEdBQUcsQ0FBQ0osS0FBSztnQkFBRUssUUFBUUo7WUFBSztZQUN4RCxJQUFJRSxTQUFTRixJQUFJLEVBQUU7Z0JBQ2YsT0FBT0UsU0FBU0YsSUFBSTtZQUN4QixPQUNLO2dCQUNELE1BQU1LLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ0w7WUFDL0I7UUFDSixFQUNBLE9BQU9NLEtBQUs7WUFDUixNQUFNQTtRQUNWO0lBQ0o7QUFDSjtBQUNBZixlQUFlLEdBQUdFLFNBQ2xCLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2NvcmUvZGlzdC9janMvc3JjL2xpYi9yZXF1ZXN0LmpzPzQ1ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldERhdGEgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuZnVuY3Rpb24gZ2V0RGF0YShpbnN0YW5jZSwgdXJsLCBkYXRhKSB7XG4gICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBpbnN0YW5jZS5nZXQodXJsLCB7IHBhcmFtczogZGF0YSB9KTtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihKU09OLnN0cmluZ2lmeShyZXNwb25zZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5nZXREYXRhID0gZ2V0RGF0YTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0RGF0YSIsInRzbGliXzEiLCJyZXF1aXJlIiwiaW5zdGFuY2UiLCJ1cmwiLCJkYXRhIiwiX19hd2FpdGVyIiwicmVzcG9uc2UiLCJnZXQiLCJwYXJhbXMiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/retryPolicy/delivery-sdk-handlers.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/retryPolicy/delivery-sdk-handlers.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.retryResponseErrorHandler = exports.retryResponseHandler = exports.retryRequestHandler = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst axios_1 = tslib_1.__importDefault(__webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/dist/node/axios.cjs\"));\nconst defaultConfig = {\n    maxRequests: 5,\n    retryLimit: 5,\n    retryDelay: 300\n};\nconst retryRequestHandler = (req)=>{\n    req.retryCount = req.retryCount || 0;\n    return req;\n};\nexports.retryRequestHandler = retryRequestHandler;\nconst retryResponseHandler = (response)=>response;\nexports.retryResponseHandler = retryResponseHandler;\nconst retryResponseErrorHandler = (error, config)=>tslib_1.__awaiter(void 0, void 0, void 0, function*() {\n        let retryCount = error.config.retryCount;\n        // let retryErrorType = null;\n        config = Object.assign(Object.assign({}, defaultConfig), config);\n        if (!error.config.retryOnError || retryCount > config.retryLimit) {\n            return Promise.reject(error);\n        }\n        const response = error.response;\n        if (!response) {\n            if (error.code === \"ECONNABORTED\") {\n                error.response = Object.assign(Object.assign({}, error.response), {\n                    status: 408,\n                    statusText: `timeout of ${config.timeout}ms exceeded`\n                });\n                return Promise.resolve(error.response);\n            } else {\n                return Promise.reject(error);\n            }\n        } else if (response.status == 429 || response.status == 401) {\n            retryCount++;\n            // retryErrorType = `Error with status: ${response.status}`;\n            if (retryCount > config.retryLimit) {\n                return Promise.reject(error);\n            }\n            yield new Promise((resolve)=>setTimeout(resolve, 1000));\n            error.config.retryCount = retryCount;\n            return (0, axios_1.default)(error.request);\n        }\n        if (config.retryCondition && config.retryCondition(error)) {\n            // retryErrorType = error.response ? `Error with status: ${response.status}` : `Error Code:${error.code}`;\n            retryCount++;\n            return retry(error, config, retryCount, config.retryDelay);\n        }\n    });\nexports.retryResponseErrorHandler = retryResponseErrorHandler;\nconst retry = (error, config, retryCount, retryDelay)=>{\n    let delayTime = retryDelay;\n    if (retryCount > config.retryLimit) {\n        return Promise.reject(error);\n    }\n    delayTime = config.retryDelay;\n    error.config.retryCount = retryCount;\n    return new Promise(function(resolve) {\n        return setTimeout(function() {\n            return resolve((0, axios_1.default)(error.request));\n        }, delayTime);\n    });\n}; //# sourceMappingURL=delivery-sdk-handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvcmV0cnlQb2xpY3kvZGVsaXZlcnktc2RrLWhhbmRsZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQ0FBaUMsR0FBR0EsNEJBQTRCLEdBQUdBLDJCQUEyQixHQUFHLEtBQUs7QUFDdEcsTUFBTUssVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsVUFBVUYsUUFBUUcsZUFBZSxDQUFDRixtQkFBT0EsQ0FBQyw2REFBTztBQUN2RCxNQUFNRyxnQkFBZ0I7SUFDbEJDLGFBQWE7SUFDYkMsWUFBWTtJQUNaQyxZQUFZO0FBQ2hCO0FBQ0EsTUFBTVIsc0JBQXNCLENBQUNTO0lBQ3pCQSxJQUFJQyxVQUFVLEdBQUdELElBQUlDLFVBQVUsSUFBSTtJQUNuQyxPQUFPRDtBQUNYO0FBQ0FiLDJCQUEyQixHQUFHSTtBQUM5QixNQUFNRCx1QkFBdUIsQ0FBQ1ksV0FBYUE7QUFDM0NmLDRCQUE0QixHQUFHRztBQUMvQixNQUFNRCw0QkFBNEIsQ0FBQ2MsT0FBT0MsU0FBV1osUUFBUWEsU0FBUyxDQUFDLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQzNGLElBQUlKLGFBQWFFLE1BQU1DLE1BQU0sQ0FBQ0gsVUFBVTtRQUN4Qyw2QkFBNkI7UUFDN0JHLFNBQVNuQixPQUFPcUIsTUFBTSxDQUFDckIsT0FBT3FCLE1BQU0sQ0FBQyxDQUFDLEdBQUdWLGdCQUFnQlE7UUFDekQsSUFBSSxDQUFDRCxNQUFNQyxNQUFNLENBQUNHLFlBQVksSUFBSU4sYUFBYUcsT0FBT04sVUFBVSxFQUFFO1lBQzlELE9BQU9VLFFBQVFDLE1BQU0sQ0FBQ047UUFDMUI7UUFDQSxNQUFNRCxXQUFXQyxNQUFNRCxRQUFRO1FBQy9CLElBQUksQ0FBQ0EsVUFBVTtZQUNYLElBQUlDLE1BQU1PLElBQUksS0FBSyxnQkFBZ0I7Z0JBQy9CUCxNQUFNRCxRQUFRLEdBQUdqQixPQUFPcUIsTUFBTSxDQUFDckIsT0FBT3FCLE1BQU0sQ0FBQyxDQUFDLEdBQUdILE1BQU1ELFFBQVEsR0FBRztvQkFBRVMsUUFBUTtvQkFBS0MsWUFBWSxDQUFDLFdBQVcsRUFBRVIsT0FBT1MsT0FBTyxDQUFDLFdBQVcsQ0FBQztnQkFBQztnQkFDdkksT0FBT0wsUUFBUU0sT0FBTyxDQUFDWCxNQUFNRCxRQUFRO1lBQ3pDLE9BQ0s7Z0JBQ0QsT0FBT00sUUFBUUMsTUFBTSxDQUFDTjtZQUMxQjtRQUNKLE9BQ0ssSUFBSUQsU0FBU1MsTUFBTSxJQUFJLE9BQU9ULFNBQVNTLE1BQU0sSUFBSSxLQUFLO1lBQ3ZEVjtZQUNBLDREQUE0RDtZQUM1RCxJQUFJQSxhQUFhRyxPQUFPTixVQUFVLEVBQUU7Z0JBQ2hDLE9BQU9VLFFBQVFDLE1BQU0sQ0FBQ047WUFDMUI7WUFDQSxNQUFNLElBQUlLLFFBQVEsQ0FBQ00sVUFBWUMsV0FBV0QsU0FBUztZQUNuRFgsTUFBTUMsTUFBTSxDQUFDSCxVQUFVLEdBQUdBO1lBQzFCLE9BQU8sQ0FBQyxHQUFHUCxRQUFRc0IsT0FBTyxFQUFFYixNQUFNYyxPQUFPO1FBQzdDO1FBQ0EsSUFBSWIsT0FBT2MsY0FBYyxJQUFJZCxPQUFPYyxjQUFjLENBQUNmLFFBQVE7WUFDdkQsMEdBQTBHO1lBQzFHRjtZQUNBLE9BQU9rQixNQUFNaEIsT0FBT0MsUUFBUUgsWUFBWUcsT0FBT0wsVUFBVTtRQUM3RDtJQUNKO0FBQ0FaLGlDQUFpQyxHQUFHRTtBQUNwQyxNQUFNOEIsUUFBUSxDQUFDaEIsT0FBT0MsUUFBUUgsWUFBWUY7SUFDdEMsSUFBSXFCLFlBQVlyQjtJQUNoQixJQUFJRSxhQUFhRyxPQUFPTixVQUFVLEVBQUU7UUFDaEMsT0FBT1UsUUFBUUMsTUFBTSxDQUFDTjtJQUMxQjtJQUNBaUIsWUFBWWhCLE9BQU9MLFVBQVU7SUFDN0JJLE1BQU1DLE1BQU0sQ0FBQ0gsVUFBVSxHQUFHQTtJQUMxQixPQUFPLElBQUlPLFFBQVEsU0FBVU0sT0FBTztRQUNoQyxPQUFPQyxXQUFXO1lBQ2QsT0FBT0QsUUFBUSxDQUFDLEdBQUdwQixRQUFRc0IsT0FBTyxFQUFFYixNQUFNYyxPQUFPO1FBQ3JELEdBQUdHO0lBQ1A7QUFDSixHQUNBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2NvcmUvZGlzdC9janMvc3JjL2xpYi9yZXRyeVBvbGljeS9kZWxpdmVyeS1zZGstaGFuZGxlcnMuanM/ZGFlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmV0cnlSZXNwb25zZUVycm9ySGFuZGxlciA9IGV4cG9ydHMucmV0cnlSZXNwb25zZUhhbmRsZXIgPSBleHBvcnRzLnJldHJ5UmVxdWVzdEhhbmRsZXIgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgYXhpb3NfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJheGlvc1wiKSk7XG5jb25zdCBkZWZhdWx0Q29uZmlnID0ge1xuICAgIG1heFJlcXVlc3RzOiA1LFxuICAgIHJldHJ5TGltaXQ6IDUsXG4gICAgcmV0cnlEZWxheTogMzAwLFxufTtcbmNvbnN0IHJldHJ5UmVxdWVzdEhhbmRsZXIgPSAocmVxKSA9PiB7XG4gICAgcmVxLnJldHJ5Q291bnQgPSByZXEucmV0cnlDb3VudCB8fCAwO1xuICAgIHJldHVybiByZXE7XG59O1xuZXhwb3J0cy5yZXRyeVJlcXVlc3RIYW5kbGVyID0gcmV0cnlSZXF1ZXN0SGFuZGxlcjtcbmNvbnN0IHJldHJ5UmVzcG9uc2VIYW5kbGVyID0gKHJlc3BvbnNlKSA9PiByZXNwb25zZTtcbmV4cG9ydHMucmV0cnlSZXNwb25zZUhhbmRsZXIgPSByZXRyeVJlc3BvbnNlSGFuZGxlcjtcbmNvbnN0IHJldHJ5UmVzcG9uc2VFcnJvckhhbmRsZXIgPSAoZXJyb3IsIGNvbmZpZykgPT4gdHNsaWJfMS5fX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICBsZXQgcmV0cnlDb3VudCA9IGVycm9yLmNvbmZpZy5yZXRyeUNvdW50O1xuICAgIC8vIGxldCByZXRyeUVycm9yVHlwZSA9IG51bGw7XG4gICAgY29uZmlnID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0Q29uZmlnKSwgY29uZmlnKTtcbiAgICBpZiAoIWVycm9yLmNvbmZpZy5yZXRyeU9uRXJyb3IgfHwgcmV0cnlDb3VudCA+IGNvbmZpZy5yZXRyeUxpbWl0KSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfVxuICAgIGNvbnN0IHJlc3BvbnNlID0gZXJyb3IucmVzcG9uc2U7XG4gICAgaWYgKCFyZXNwb25zZSkge1xuICAgICAgICBpZiAoZXJyb3IuY29kZSA9PT0gJ0VDT05OQUJPUlRFRCcpIHtcbiAgICAgICAgICAgIGVycm9yLnJlc3BvbnNlID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBlcnJvci5yZXNwb25zZSksIHsgc3RhdHVzOiA0MDgsIHN0YXR1c1RleHQ6IGB0aW1lb3V0IG9mICR7Y29uZmlnLnRpbWVvdXR9bXMgZXhjZWVkZWRgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShlcnJvci5yZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSA0MjkgfHwgcmVzcG9uc2Uuc3RhdHVzID09IDQwMSkge1xuICAgICAgICByZXRyeUNvdW50Kys7XG4gICAgICAgIC8vIHJldHJ5RXJyb3JUeXBlID0gYEVycm9yIHdpdGggc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gO1xuICAgICAgICBpZiAocmV0cnlDb3VudCA+IGNvbmZpZy5yZXRyeUxpbWl0KSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDApKTtcbiAgICAgICAgZXJyb3IuY29uZmlnLnJldHJ5Q291bnQgPSByZXRyeUNvdW50O1xuICAgICAgICByZXR1cm4gKDAsIGF4aW9zXzEuZGVmYXVsdCkoZXJyb3IucmVxdWVzdCk7XG4gICAgfVxuICAgIGlmIChjb25maWcucmV0cnlDb25kaXRpb24gJiYgY29uZmlnLnJldHJ5Q29uZGl0aW9uKGVycm9yKSkge1xuICAgICAgICAvLyByZXRyeUVycm9yVHlwZSA9IGVycm9yLnJlc3BvbnNlID8gYEVycm9yIHdpdGggc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gIDogYEVycm9yIENvZGU6JHtlcnJvci5jb2RlfWA7XG4gICAgICAgIHJldHJ5Q291bnQrKztcbiAgICAgICAgcmV0dXJuIHJldHJ5KGVycm9yLCBjb25maWcsIHJldHJ5Q291bnQsIGNvbmZpZy5yZXRyeURlbGF5KTtcbiAgICB9XG59KTtcbmV4cG9ydHMucmV0cnlSZXNwb25zZUVycm9ySGFuZGxlciA9IHJldHJ5UmVzcG9uc2VFcnJvckhhbmRsZXI7XG5jb25zdCByZXRyeSA9IChlcnJvciwgY29uZmlnLCByZXRyeUNvdW50LCByZXRyeURlbGF5KSA9PiB7XG4gICAgbGV0IGRlbGF5VGltZSA9IHJldHJ5RGVsYXk7XG4gICAgaWYgKHJldHJ5Q291bnQgPiBjb25maWcucmV0cnlMaW1pdCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgIH1cbiAgICBkZWxheVRpbWUgPSBjb25maWcucmV0cnlEZWxheTtcbiAgICBlcnJvci5jb25maWcucmV0cnlDb3VudCA9IHJldHJ5Q291bnQ7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlKCgwLCBheGlvc18xLmRlZmF1bHQpKGVycm9yLnJlcXVlc3QpKTtcbiAgICAgICAgfSwgZGVsYXlUaW1lKTtcbiAgICB9KTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWxpdmVyeS1zZGstaGFuZGxlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmV0cnlSZXNwb25zZUVycm9ySGFuZGxlciIsInJldHJ5UmVzcG9uc2VIYW5kbGVyIiwicmV0cnlSZXF1ZXN0SGFuZGxlciIsInRzbGliXzEiLCJyZXF1aXJlIiwiYXhpb3NfMSIsIl9faW1wb3J0RGVmYXVsdCIsImRlZmF1bHRDb25maWciLCJtYXhSZXF1ZXN0cyIsInJldHJ5TGltaXQiLCJyZXRyeURlbGF5IiwicmVxIiwicmV0cnlDb3VudCIsInJlc3BvbnNlIiwiZXJyb3IiLCJjb25maWciLCJfX2F3YWl0ZXIiLCJhc3NpZ24iLCJyZXRyeU9uRXJyb3IiLCJQcm9taXNlIiwicmVqZWN0IiwiY29kZSIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJ0aW1lb3V0IiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJkZWZhdWx0IiwicmVxdWVzdCIsInJldHJ5Q29uZGl0aW9uIiwicmV0cnkiLCJkZWxheVRpbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/retryPolicy/delivery-sdk-handlers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/types.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@contentstack/core/dist/cjs/src/lib/types.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9jb3JlL2Rpc3QvY2pzL3NyYy9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svY29yZS9kaXN0L2Nqcy9zcmMvbGliL3R5cGVzLmpzPzc0MjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/core/dist/cjs/src/lib/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst contentstack = tslib_1.__importStar(__webpack_require__(/*! ./lib/contentstack */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contentstack.js\"));\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/types */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\"), exports);\nexports[\"default\"] = contentstack; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLHNEQUFPO0FBQy9CLE1BQU1DLGVBQWVGLFFBQVFHLFlBQVksQ0FBQ0YsbUJBQU9BLENBQUMsNEdBQW9CO0FBQ3RFRCxRQUFRSSxZQUFZLENBQUNILG1CQUFPQSxDQUFDLDhGQUFhLEdBQUdIO0FBQzdDQSxrQkFBZSxHQUFHSSxjQUNsQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2luZGV4LmpzPzkzZWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29udGVudHN0YWNrID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vbGliL2NvbnRlbnRzdGFja1wiKSk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvdHlwZXNcIiksIGV4cG9ydHMpO1xuZXhwb3J0cy5kZWZhdWx0ID0gY29udGVudHN0YWNrO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJjb250ZW50c3RhY2siLCJfX2ltcG9ydFN0YXIiLCJfX2V4cG9ydFN0YXIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset-query.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset-query.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AssetQuery = void 0;\nconst base_query_1 = __webpack_require__(/*! ./base-query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\");\nclass AssetQuery extends base_query_1.BaseQuery {\n    constructor(client){\n        super();\n        this._client = client;\n        this._urlPath = \"/assets\";\n    }\n    /**\n     * @method version\n     * @memberof AssetQuery\n     * @description Retrieve a specific version of an asset in result\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().version(1).find();\n     */ version(version) {\n        this._queryParams.version = String(version);\n        return this;\n    }\n    /**\n     * @method includeDimension\n     * @memberof AssetQuery\n     * @description Includes the dimensions (height and width) of the image in result\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().includeDimension().find();\n     */ includeDimension() {\n        this._queryParams.include_dimension = \"true\";\n        return this;\n    }\n    /**\n     * @method includeBranch\n     * @memberof AssetQuery\n     * @description Includes the branch in result\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().includeBranch().find();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method includeMetadata\n     * @memberof Entries\n     * @description Include the metadata for getting metadata content for the entry.\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().includeMetadata().fetch();\n     */ includeMetadata() {\n        this._queryParams.include_metadata = \"true\";\n        return this;\n    }\n    /**\n     * @method relativeUrls\n     * @memberof AssetQuery\n     * @description Includes the relative URLs of the assets in result\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().relativeUrls().find();\n     */ relativeUrls() {\n        this._queryParams.relative_url = \"true\";\n        return this;\n    }\n    /**\n     * @method includeFallback\n     * @memberof AssetQuery\n     * @description When an entry is not published in a specific language, content can be fetched from its fallback language\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().includeFallback().find();\n     */ includeFallback() {\n        this._queryParams.include_fallback = \"true\";\n        return this;\n    }\n    /**\n     * @method locale\n     * @memberof AssetQuery\n     * @description The assets published in the locale will be fetched\n     * @returns {AssetQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().locale('en-us').find();\n     */ locale(locale) {\n        this._queryParams.locale = locale;\n        return this;\n    }\n}\nexports.AssetQuery = AssetQuery; //# sourceMappingURL=asset-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset-query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Asset = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nclass Asset {\n    constructor(client, assetUid){\n        this._queryParams = {};\n        this._client = client;\n        this._urlPath = `/assets/${assetUid}`;\n    }\n    /**\n     * @method includeFallback\n     * @memberof Asset\n     * @description When an entry is not published in a specific language, content can be fetched from its fallback language\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').includeFallback().fetch();\n     */ includeFallback() {\n        this._queryParams.include_fallback = \"true\";\n        return this;\n    }\n    /**\n     * @method includeMetadata\n     * @memberof Entries\n     * @description Include the metadata for getting metadata content for the entry.\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').includeMetadata().fetch();\n     */ includeMetadata() {\n        this._queryParams.include_metadata = \"true\";\n        return this;\n    }\n    /**\n     * @method includeDimension\n     * @memberof Asset\n     * @description Includes the dimensions (height and width) of the image in result\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').includeDimension().fetch();\n     */ includeDimension() {\n        this._queryParams.include_dimension = \"true\";\n        return this;\n    }\n    /**\n     * @method includeBranch\n     * @memberof Asset\n     * @description Includes the branch in result\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').includeBranch().fetch();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method relativeUrls\n     * @memberof Asset\n     * @description Includes the relative URLs of the asset in result\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').relativeUrls().fetch();\n     */ relativeUrls() {\n        this._queryParams.relative_urls = \"true\";\n        return this;\n    }\n    /**\n     * @method version\n     * @memberof Asset\n     * @description Retrieve a specific version of an asset in result\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').version(1).fetch();\n     */ version(version) {\n        this._queryParams.version = String(version);\n        return this;\n    }\n    /**\n     * @method locale\n     * @memberof Asset\n     * @description The assets published in the locale will be fetched\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').locale('en-us').fetch();\n     */ locale(locale) {\n        this._queryParams.locale = locale;\n        return this;\n    }\n    /**\n     * @method fetch\n     * @memberof Asset\n     * @description Fetches the asset data on the basis of the asset uid\n     * @returns {Asset}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset('asset_uid').fetch();\n     */ fetch() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, this._queryParams);\n            if (response.asset) return response.asset;\n            return response;\n        });\n    }\n}\nexports.Asset = Asset; //# sourceMappingURL=asset.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BaseQuery = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nconst pagination_1 = __webpack_require__(/*! ./pagination */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/pagination.js\");\nclass BaseQuery extends pagination_1.Pagination {\n    constructor(){\n        super(...arguments);\n        this._parameters = {}; // Params of query class ?query={}\n    }\n    /**\n     * @method includeCount\n     * @memberof BaseQuery\n     * @description Retrieve count and data of objects in result\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.includeCount().find()\n     * // OR\n     * const asset = await stack.asset().includeCount().find()\n     *\n     * @returns {BaseQuery}\n     */ includeCount() {\n        this._queryParams.include_count = \"true\";\n        return this;\n    }\n    /**\n     * @method orderByAscending\n     * @memberof BaseQuery\n     * @description Sorts the results in ascending order based on the specified field UID.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.orderByAscending(\"field_uid\").find()\n     * // OR\n     * const asset = await stack.asset().orderByAscending().find()\n     *\n     * @returns {BaseQuery}\n     */ orderByAscending(key) {\n        this._queryParams.asc = key;\n        return this;\n    }\n    /**\n     * @method orderByDescending\n     * @memberof BaseQuery\n     * @description Sorts the results in descending order based on the specified key.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.orderByDescending(\"field_uid\").find()\n     * // OR\n     * const asset = await stack.asset().orderByDescending().find()\n     *\n     * @returns {BaseQuery}\n     */ orderByDescending(key) {\n        this._queryParams.desc = key;\n        return this;\n    }\n    /**\n     * @method limit\n     * @memberof BaseQuery\n     * @description Returns a specific number of entries based on the set limit\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.limit(\"limit_value\").find()\n     * // OR\n     * const asset = await stack.asset().limit(5).find()\n     *\n     * @returns {BaseQuery}\n     */ limit(key) {\n        this._queryParams.limit = key;\n        return this;\n    }\n    /**\n     * @method skip\n     * @memberof BaseQuery\n     * @description Skips at specific number of entries.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.skip(\"skip_value\").find()\n     * // OR\n     * const asset = await stack.asset().skip(5).find()\n     *\n     * @returns {BaseQuery}\n     */ skip(key) {\n        this._queryParams.skip = key;\n        return this;\n    }\n    /**\n     * @method param\n     * @memberof BaseQuery\n     * @description Adds query parameters to the URL.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.param(\"key\", \"value\").find()\n     * // OR\n     * const asset = await stack.asset().param(\"key\", \"value\").find()\n     *\n     * @returns {BaseQuery}\n     */ param(key, value) {\n        this._queryParams[key] = value;\n        return this;\n    }\n    /**\n     * @method addParams\n     * @memberof BaseQuery\n     * @description Adds a query parameter to the query.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.addParams({\"key\": \"value\"}).find()\n     * // OR\n     * const asset = await stack.asset().addParams({\"key\": \"value\"}).find()\n     *\n     * @returns {BaseQuery}\n     */ addParams(paramObj) {\n        this._queryParams = Object.assign(Object.assign({}, this._queryParams), paramObj);\n        return this;\n    }\n    /**\n     * @method removeParam\n     * @memberof BaseQuery\n     * @description Removes a query parameter from the query.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.removeParam(\"query_param_key\").find()\n     * // OR\n     * const asset = await stack.asset().removeParam(\"query_param_key\").find()\n     *\n     * @returns {BaseQuery}\n     */ removeParam(key) {\n        delete this._queryParams[key];\n        return this;\n    }\n    /**\n     * @method find\n     * @memberof AssetQuery\n     * @description The assets of the stack will be fetched\n     * @returns {Collection}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset().find();\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentType1Uid\").entry().query().find();\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.asset(asset_uid).fetch();\n     */ find() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            let requestParams = this._queryParams;\n            if (Object.keys(this._parameters)) requestParams = Object.assign(Object.assign({}, this._queryParams), {\n                query: Object.assign({}, this._parameters)\n            });\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, requestParams);\n            return response;\n        });\n    }\n}\nexports.BaseQuery = BaseQuery; //# sourceMappingURL=base-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/cache.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/cache.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n// import { PersistanceStore } from '../persistance';\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.handleRequest = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst persistance_1 = __webpack_require__(/*! ../persistance */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\");\nfunction handleRequest(cacheOptions, apiKey, defaultAdapter, resolve, reject, config) {\n    return tslib_1.__awaiter(this, void 0, void 0, function*() {\n        const cacheStore = new persistance_1.PersistanceStore(cacheOptions);\n        switch(cacheOptions.policy){\n            case types_1.Policy.NETWORK_ELSE_CACHE:\n                {\n                    const apiResponse = yield defaultAdapter(config);\n                    if (apiResponse.data) {\n                        cacheStore.setItem(apiKey, apiResponse.data, config.contentTypeUid, cacheOptions.maxAge);\n                        return resolve(apiResponse.data);\n                    } else {\n                        const cacheResponse = cacheStore.getItem(apiKey, config.contentTypeUid);\n                        if (cacheResponse) return resolve({\n                            data: cacheResponse,\n                            status: 200,\n                            statusText: \"OK\",\n                            headers: {},\n                            config: {}\n                        });\n                    }\n                    return reject(apiResponse);\n                }\n            case types_1.Policy.CACHE_THEN_NETWORK:\n                {\n                    const cacheResponse = cacheStore.getItem(apiKey, config.contentTypeUid);\n                    if (cacheResponse) return resolve({\n                        data: cacheResponse,\n                        status: 200,\n                        statusText: \"OK\",\n                        headers: {},\n                        config: {}\n                    });\n                    const apiResponse = yield defaultAdapter(config);\n                    if (apiResponse.data) {\n                        cacheStore.setItem(apiKey, apiResponse.data, config.contentTypeUid, cacheOptions.maxAge);\n                        return resolve(apiResponse.data);\n                    } else {\n                        return reject(apiResponse);\n                    }\n                }\n            case types_1.Policy.CACHE_ELSE_NETWORK:\n                {\n                    const cacheResponse = cacheStore.getItem(apiKey, config.contentTypeUid);\n                    if (cacheResponse) return resolve({\n                        data: cacheResponse,\n                        status: 200,\n                        statusText: \"OK\",\n                        headers: {},\n                        config: {}\n                    });\n                    else {\n                        const apiResponse = yield defaultAdapter(config);\n                        if (apiResponse.data) {\n                            cacheStore.setItem(apiKey, apiResponse.data, config.contentTypeUid, cacheOptions.maxAge);\n                            return resolve(apiResponse.data);\n                        } else {\n                            return reject(apiResponse);\n                        }\n                    }\n                }\n        }\n    });\n}\nexports.handleRequest = handleRequest; //# sourceMappingURL=cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9jYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLHFEQUFxRDtBQUNyREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHFCQUFxQixHQUFHLEtBQUs7QUFDN0IsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsZ0JBQWdCRCxtQkFBT0EsQ0FBQyx5R0FBZ0I7QUFDOUMsTUFBTUUsVUFBVUYsbUJBQU9BLENBQUMsMEZBQVM7QUFDakMsU0FBU0YsY0FBY0ssWUFBWSxFQUFFQyxNQUFNLEVBQUVDLGNBQWMsRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLE1BQU07SUFDaEYsT0FBT1QsUUFBUVUsU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQzNDLE1BQU1DLGFBQWEsSUFBSVQsY0FBY1UsZ0JBQWdCLENBQUNSO1FBQ3RELE9BQVFBLGFBQWFTLE1BQU07WUFDdkIsS0FBS1YsUUFBUVcsTUFBTSxDQUFDQyxrQkFBa0I7Z0JBQUU7b0JBQ3BDLE1BQU1DLGNBQWMsTUFBTVYsZUFBZUc7b0JBQ3pDLElBQUlPLFlBQVlDLElBQUksRUFBRTt3QkFDbEJOLFdBQVdPLE9BQU8sQ0FBQ2IsUUFBUVcsWUFBWUMsSUFBSSxFQUFFUixPQUFPVSxjQUFjLEVBQUVmLGFBQWFnQixNQUFNO3dCQUN2RixPQUFPYixRQUFRUyxZQUFZQyxJQUFJO29CQUNuQyxPQUNLO3dCQUNELE1BQU1JLGdCQUFnQlYsV0FBV1csT0FBTyxDQUFDakIsUUFBUUksT0FBT1UsY0FBYzt3QkFDdEUsSUFBSUUsZUFDQSxPQUFPZCxRQUFROzRCQUNYVSxNQUFNSTs0QkFDTkUsUUFBUTs0QkFDUkMsWUFBWTs0QkFDWkMsU0FBUyxDQUFDOzRCQUNWaEIsUUFBUSxDQUFDO3dCQUNiO29CQUNSO29CQUNBLE9BQU9ELE9BQU9RO2dCQUNsQjtZQUNBLEtBQUtiLFFBQVFXLE1BQU0sQ0FBQ1ksa0JBQWtCO2dCQUFFO29CQUNwQyxNQUFNTCxnQkFBZ0JWLFdBQVdXLE9BQU8sQ0FBQ2pCLFFBQVFJLE9BQU9VLGNBQWM7b0JBQ3RFLElBQUlFLGVBQ0EsT0FBT2QsUUFBUTt3QkFDWFUsTUFBTUk7d0JBQ05FLFFBQVE7d0JBQ1JDLFlBQVk7d0JBQ1pDLFNBQVMsQ0FBQzt3QkFDVmhCLFFBQVEsQ0FBQztvQkFDYjtvQkFDSixNQUFNTyxjQUFjLE1BQU1WLGVBQWVHO29CQUN6QyxJQUFJTyxZQUFZQyxJQUFJLEVBQUU7d0JBQ2xCTixXQUFXTyxPQUFPLENBQUNiLFFBQVFXLFlBQVlDLElBQUksRUFBRVIsT0FBT1UsY0FBYyxFQUFFZixhQUFhZ0IsTUFBTTt3QkFDdkYsT0FBT2IsUUFBUVMsWUFBWUMsSUFBSTtvQkFDbkMsT0FDSzt3QkFDRCxPQUFPVCxPQUFPUTtvQkFDbEI7Z0JBQ0o7WUFDQSxLQUFLYixRQUFRVyxNQUFNLENBQUNhLGtCQUFrQjtnQkFBRTtvQkFDcEMsTUFBTU4sZ0JBQWdCVixXQUFXVyxPQUFPLENBQUNqQixRQUFRSSxPQUFPVSxjQUFjO29CQUN0RSxJQUFJRSxlQUNBLE9BQU9kLFFBQVE7d0JBQ1hVLE1BQU1JO3dCQUNORSxRQUFRO3dCQUNSQyxZQUFZO3dCQUNaQyxTQUFTLENBQUM7d0JBQ1ZoQixRQUFRLENBQUM7b0JBQ2I7eUJBQ0M7d0JBQ0QsTUFBTU8sY0FBYyxNQUFNVixlQUFlRzt3QkFDekMsSUFBSU8sWUFBWUMsSUFBSSxFQUFFOzRCQUNsQk4sV0FBV08sT0FBTyxDQUFDYixRQUFRVyxZQUFZQyxJQUFJLEVBQUVSLE9BQU9VLGNBQWMsRUFBRWYsYUFBYWdCLE1BQU07NEJBQ3ZGLE9BQU9iLFFBQVFTLFlBQVlDLElBQUk7d0JBQ25DLE9BQ0s7NEJBQ0QsT0FBT1QsT0FBT1E7d0JBQ2xCO29CQUNKO2dCQUNKO1FBQ0o7SUFDSjtBQUNKO0FBQ0FuQixxQkFBcUIsR0FBR0UsZUFDeEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9saWIvY2FjaGUuanM/YjAyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIGltcG9ydCB7IFBlcnNpc3RhbmNlU3RvcmUgfSBmcm9tICcuLi9wZXJzaXN0YW5jZSc7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhbmRsZVJlcXVlc3QgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgcGVyc2lzdGFuY2VfMSA9IHJlcXVpcmUoXCIuLi9wZXJzaXN0YW5jZVwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmZ1bmN0aW9uIGhhbmRsZVJlcXVlc3QoY2FjaGVPcHRpb25zLCBhcGlLZXksIGRlZmF1bHRBZGFwdGVyLCByZXNvbHZlLCByZWplY3QsIGNvbmZpZykge1xuICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgY2FjaGVTdG9yZSA9IG5ldyBwZXJzaXN0YW5jZV8xLlBlcnNpc3RhbmNlU3RvcmUoY2FjaGVPcHRpb25zKTtcbiAgICAgICAgc3dpdGNoIChjYWNoZU9wdGlvbnMucG9saWN5KSB7XG4gICAgICAgICAgICBjYXNlIHR5cGVzXzEuUG9saWN5Lk5FVFdPUktfRUxTRV9DQUNIRToge1xuICAgICAgICAgICAgICAgIGNvbnN0IGFwaVJlc3BvbnNlID0geWllbGQgZGVmYXVsdEFkYXB0ZXIoY29uZmlnKTtcbiAgICAgICAgICAgICAgICBpZiAoYXBpUmVzcG9uc2UuZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZVN0b3JlLnNldEl0ZW0oYXBpS2V5LCBhcGlSZXNwb25zZS5kYXRhLCBjb25maWcuY29udGVudFR5cGVVaWQsIGNhY2hlT3B0aW9ucy5tYXhBZ2UpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShhcGlSZXNwb25zZS5kYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlUmVzcG9uc2UgPSBjYWNoZVN0b3JlLmdldEl0ZW0oYXBpS2V5LCBjb25maWcuY29udGVudFR5cGVVaWQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGVSZXNwb25zZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBjYWNoZVJlc3BvbnNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczoge30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KGFwaVJlc3BvbnNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5Qb2xpY3kuQ0FDSEVfVEhFTl9ORVRXT1JLOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FjaGVSZXNwb25zZSA9IGNhY2hlU3RvcmUuZ2V0SXRlbShhcGlLZXksIGNvbmZpZy5jb250ZW50VHlwZVVpZCk7XG4gICAgICAgICAgICAgICAgaWYgKGNhY2hlUmVzcG9uc2UpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGNhY2hlUmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZzoge30sXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGFwaVJlc3BvbnNlID0geWllbGQgZGVmYXVsdEFkYXB0ZXIoY29uZmlnKTtcbiAgICAgICAgICAgICAgICBpZiAoYXBpUmVzcG9uc2UuZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZVN0b3JlLnNldEl0ZW0oYXBpS2V5LCBhcGlSZXNwb25zZS5kYXRhLCBjb25maWcuY29udGVudFR5cGVVaWQsIGNhY2hlT3B0aW9ucy5tYXhBZ2UpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShhcGlSZXNwb25zZS5kYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZWplY3QoYXBpUmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5Qb2xpY3kuQ0FDSEVfRUxTRV9ORVRXT1JLOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FjaGVSZXNwb25zZSA9IGNhY2hlU3RvcmUuZ2V0SXRlbShhcGlLZXksIGNvbmZpZy5jb250ZW50VHlwZVVpZCk7XG4gICAgICAgICAgICAgICAgaWYgKGNhY2hlUmVzcG9uc2UpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGNhY2hlUmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZzoge30sXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBhcGlSZXNwb25zZSA9IHlpZWxkIGRlZmF1bHRBZGFwdGVyKGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhcGlSZXNwb25zZS5kYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZVN0b3JlLnNldEl0ZW0oYXBpS2V5LCBhcGlSZXNwb25zZS5kYXRhLCBjb25maWcuY29udGVudFR5cGVVaWQsIGNhY2hlT3B0aW9ucy5tYXhBZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoYXBpUmVzcG9uc2UuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVqZWN0KGFwaVJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5oYW5kbGVSZXF1ZXN0ID0gaGFuZGxlUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhY2hlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImhhbmRsZVJlcXVlc3QiLCJ0c2xpYl8xIiwicmVxdWlyZSIsInBlcnNpc3RhbmNlXzEiLCJ0eXBlc18xIiwiY2FjaGVPcHRpb25zIiwiYXBpS2V5IiwiZGVmYXVsdEFkYXB0ZXIiLCJyZXNvbHZlIiwicmVqZWN0IiwiY29uZmlnIiwiX19hd2FpdGVyIiwiY2FjaGVTdG9yZSIsIlBlcnNpc3RhbmNlU3RvcmUiLCJwb2xpY3kiLCJQb2xpY3kiLCJORVRXT1JLX0VMU0VfQ0FDSEUiLCJhcGlSZXNwb25zZSIsImRhdGEiLCJzZXRJdGVtIiwiY29udGVudFR5cGVVaWQiLCJtYXhBZ2UiLCJjYWNoZVJlc3BvbnNlIiwiZ2V0SXRlbSIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJoZWFkZXJzIiwiQ0FDSEVfVEhFTl9ORVRXT1JLIiwiQ0FDSEVfRUxTRV9ORVRXT1JLIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/cache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/content-type.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/content-type.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ContentType = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nconst entry_1 = __webpack_require__(/*! ./entry */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry.js\");\nconst entries_1 = __webpack_require__(/*! ./entries */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entries.js\");\nclass ContentType {\n    constructor(client, contentTypeUid){\n        this._queryParams = {};\n        this._client = client;\n        this._contentTypeUid = contentTypeUid;\n        this._urlPath = `/content_types/${this._contentTypeUid}`;\n    }\n    entry(uid) {\n        if (uid) return new entry_1.Entry(this._client, this._contentTypeUid, uid);\n        return new entries_1.Entries(this._client, this._contentTypeUid);\n    }\n    /**\n     * @method fetch\n     * @memberof ContentType\n     * @description Fetches the contentType data on the basis of the contentType uid\n     * @returns {ContentType}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(asset_uid).fetch();\n     */ fetch() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath);\n            if (response.content_type) return response.content_type;\n            return response;\n        });\n    }\n}\nexports.ContentType = ContentType; //# sourceMappingURL=content-type.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9jb250ZW50LXR5cGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHLEtBQUs7QUFDM0IsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUMseUZBQW9CO0FBQzNDLE1BQU1FLFVBQVVGLG1CQUFPQSxDQUFDLDBGQUFTO0FBQ2pDLE1BQU1HLFlBQVlILG1CQUFPQSxDQUFDLDhGQUFXO0FBQ3JDLE1BQU1GO0lBQ0ZNLFlBQVlDLE1BQU0sRUFBRUMsY0FBYyxDQUFFO1FBQ2hDLElBQUksQ0FBQ0MsWUFBWSxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFDQyxPQUFPLEdBQUdIO1FBQ2YsSUFBSSxDQUFDSSxlQUFlLEdBQUdIO1FBQ3ZCLElBQUksQ0FBQ0ksUUFBUSxHQUFHLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQ0QsZUFBZSxDQUFDLENBQUM7SUFDNUQ7SUFDQUUsTUFBTUMsR0FBRyxFQUFFO1FBQ1AsSUFBSUEsS0FDQSxPQUFPLElBQUlWLFFBQVFXLEtBQUssQ0FBQyxJQUFJLENBQUNMLE9BQU8sRUFBRSxJQUFJLENBQUNDLGVBQWUsRUFBRUc7UUFDakUsT0FBTyxJQUFJVCxVQUFVVyxPQUFPLENBQUMsSUFBSSxDQUFDTixPQUFPLEVBQUUsSUFBSSxDQUFDQyxlQUFlO0lBQ25FO0lBQ0E7Ozs7Ozs7Ozs7S0FVQyxHQUNETSxRQUFRO1FBQ0osT0FBT2hCLFFBQVFpQixTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDM0MsTUFBTUMsV0FBVyxNQUFNLENBQUMsR0FBR2hCLE9BQU9pQixPQUFPLEVBQUUsSUFBSSxDQUFDVixPQUFPLEVBQUUsSUFBSSxDQUFDRSxRQUFRO1lBQ3RFLElBQUlPLFNBQVNFLFlBQVksRUFDckIsT0FBT0YsU0FBU0UsWUFBWTtZQUNoQyxPQUFPRjtRQUNYO0lBQ0o7QUFDSjtBQUNBckIsbUJBQW1CLEdBQUdFLGFBQ3RCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL2NvbnRlbnQtdHlwZS5qcz8xNGQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db250ZW50VHlwZSA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQGNvbnRlbnRzdGFjay9jb3JlXCIpO1xuY29uc3QgZW50cnlfMSA9IHJlcXVpcmUoXCIuL2VudHJ5XCIpO1xuY29uc3QgZW50cmllc18xID0gcmVxdWlyZShcIi4vZW50cmllc1wiKTtcbmNsYXNzIENvbnRlbnRUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQsIGNvbnRlbnRUeXBlVWlkKSB7XG4gICAgICAgIHRoaXMuX3F1ZXJ5UGFyYW1zID0ge307XG4gICAgICAgIHRoaXMuX2NsaWVudCA9IGNsaWVudDtcbiAgICAgICAgdGhpcy5fY29udGVudFR5cGVVaWQgPSBjb250ZW50VHlwZVVpZDtcbiAgICAgICAgdGhpcy5fdXJsUGF0aCA9IGAvY29udGVudF90eXBlcy8ke3RoaXMuX2NvbnRlbnRUeXBlVWlkfWA7XG4gICAgfVxuICAgIGVudHJ5KHVpZCkge1xuICAgICAgICBpZiAodWlkKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBlbnRyeV8xLkVudHJ5KHRoaXMuX2NsaWVudCwgdGhpcy5fY29udGVudFR5cGVVaWQsIHVpZCk7XG4gICAgICAgIHJldHVybiBuZXcgZW50cmllc18xLkVudHJpZXModGhpcy5fY2xpZW50LCB0aGlzLl9jb250ZW50VHlwZVVpZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgZmV0Y2hcbiAgICAgKiBAbWVtYmVyb2YgQ29udGVudFR5cGVcbiAgICAgKiBAZGVzY3JpcHRpb24gRmV0Y2hlcyB0aGUgY29udGVudFR5cGUgZGF0YSBvbiB0aGUgYmFzaXMgb2YgdGhlIGNvbnRlbnRUeXBlIHVpZFxuICAgICAqIEByZXR1cm5zIHtDb250ZW50VHlwZX1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suY29udGVudFR5cGUoYXNzZXRfdWlkKS5mZXRjaCgpO1xuICAgICAqL1xuICAgIGZldGNoKCkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkICgwLCBjb3JlXzEuZ2V0RGF0YSkodGhpcy5fY2xpZW50LCB0aGlzLl91cmxQYXRoKTtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5jb250ZW50X3R5cGUpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmNvbnRlbnRfdHlwZTtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Db250ZW50VHlwZSA9IENvbnRlbnRUeXBlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGVudC10eXBlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNvbnRlbnRUeXBlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJjb3JlXzEiLCJlbnRyeV8xIiwiZW50cmllc18xIiwiY29uc3RydWN0b3IiLCJjbGllbnQiLCJjb250ZW50VHlwZVVpZCIsIl9xdWVyeVBhcmFtcyIsIl9jbGllbnQiLCJfY29udGVudFR5cGVVaWQiLCJfdXJsUGF0aCIsImVudHJ5IiwidWlkIiwiRW50cnkiLCJFbnRyaWVzIiwiZmV0Y2giLCJfX2F3YWl0ZXIiLCJyZXNwb25zZSIsImdldERhdGEiLCJjb250ZW50X3R5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/content-type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contentstack.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contentstack.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.stack = exports.Utils = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nconst cache_1 = __webpack_require__(/*! ./cache */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/cache.js\");\nconst stack_1 = __webpack_require__(/*! ./stack */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/stack.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/utils.js\");\nexports.Utils = tslib_1.__importStar(__webpack_require__(/*! @contentstack/utils */ \"(rsc)/./node_modules/@contentstack/utils/dist/index.es.js\"));\n/**\n * @method stack\n * @memberof Contentstack\n * @description Creates a stack instance\n * @param {StackConfig} config - config object for stack with apiKey, deliveryToken and environment as required fields\n *\n * @example\n * import contentstack from '@contentstack/delivery-sdk'\n * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n * @example\n * import contentstack from '@contentstack/delivery-sdk'\n * const stack = contentstack.Stack({\n *   apiKey: \"apiKey\",\n *   deliveryToken: \"deliveryToken\",\n *   environment: \"environment\",\n *   region:\"region\",\n *   locale:\"locale\",\n *   cacheOptions: {\n *    policy: Policy.CACHE_THEN_NETWORK,\n *    storeType: 'localStorage'\n *   }\n * }\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction stack(config) {\n    var _a, _b, _c, _d, _e;\n    let defaultConfig = {\n        defaultHostname: \"cdn.contentstack.io\",\n        headers: {},\n        params: {},\n        live_preview: {}\n    };\n    if (((_a = config.live_preview) === null || _a === void 0 ? void 0 : _a.enable) === true) {\n        if (((_b = config.live_preview) === null || _b === void 0 ? void 0 : _b.management_token) != null && ((_c = config.live_preview) === null || _c === void 0 ? void 0 : _c.preview_token) == null) {\n            config.host = \"api.contentstack.io\";\n            config.live_preview.host = config.host;\n        } else if (((_d = config.live_preview) === null || _d === void 0 ? void 0 : _d.preview_token) != null && ((_e = config.live_preview) === null || _e === void 0 ? void 0 : _e.management_token) == null) {\n            config.host = \"rest-preview.contentstack.com\";\n            config.live_preview.host = config.host;\n        }\n    } else config.host = defaultConfig.defaultHostname;\n    defaultConfig.live_preview = config.live_preview;\n    defaultConfig.defaultHostname = (0, utils_1.getHost)(config.region, config.host);\n    if (config.apiKey) {\n        defaultConfig.headers.api_key = config.apiKey;\n    } else {\n        throw new Error(\"API key for Stack is required.\");\n    }\n    if (config.deliveryToken) {\n        defaultConfig.headers.access_token = config.deliveryToken;\n    } else {\n        throw new Error(\"Delivery token for Stack is required.\");\n    }\n    if (config.environment) {\n        defaultConfig.params.environment = config.environment;\n    } else {\n        throw new Error(\"Environment for Stack is required\");\n    }\n    if (config.early_access) {\n        defaultConfig.headers[\"x-header-ea\"] = config.early_access.join(\",\");\n    }\n    // return new Stack(httpClient(defaultConfig), config);\n    const client = (0, core_1.httpClient)(defaultConfig);\n    if (config.logHandler) client.defaults.logHandler = config.logHandler;\n    if (config.cacheOptions && config.cacheOptions.policy !== types_1.Policy.IGNORE_CACHE) {\n        const defaultAdapter = client.defaults.adapter;\n        client.defaults.adapter = (adapterConfig)=>{\n            return new Promise((resolve, reject)=>tslib_1.__awaiter(this, void 0, void 0, function*() {\n                    if (config.cacheOptions) yield (0, cache_1.handleRequest)(config.cacheOptions, config.apiKey, defaultAdapter, resolve, reject, adapterConfig);\n                }));\n        };\n    }\n    // Retry policy handlers\n    const errorHandler = (error)=>{\n        (0, core_1.retryResponseErrorHandler)(error, config);\n    };\n    client.interceptors.request.use(core_1.retryRequestHandler);\n    client.interceptors.response.use(core_1.retryResponseHandler, errorHandler);\n    if (config.plugins) {\n        client.interceptors.request.use((reqConfig)=>{\n            if (config && config.plugins) config.plugins.forEach((pluginInstance)=>{\n                reqConfig = pluginInstance.onRequest(reqConfig);\n            });\n            return reqConfig;\n        });\n        client.interceptors.response.use((response)=>{\n            if (config && config.plugins) config.plugins.forEach((pluginInstance)=>{\n                response = pluginInstance.onResponse(response.request, response, response.data);\n            });\n            return response;\n        });\n    }\n    return new stack_1.Stack(client, config);\n}\nexports.stack = stack; //# sourceMappingURL=contentstack.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contentstack.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contenttype-query.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contenttype-query.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ContentTypeQuery = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nclass ContentTypeQuery {\n    constructor(client){\n        this._queryParams = {};\n        this._client = client;\n        this._urlPath = \"/content_types\";\n    }\n    /**\n     * @method includeGlobalFieldSchema\n     * @memberof ContentTypeQuery\n     * @description The assets published in the locale will be fetched\n     * @returns {ContentTypeQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const contentTypeQuery = stack.contentType();\n     * const result = await contentTypeQuery.includeGlobalFieldSchema().find();\n     */ includeGlobalFieldSchema() {\n        this._queryParams.include_global_field_schema = \"true\";\n        return this;\n    }\n    /**\n     * @method find\n     * @memberof ContentTypeQuery\n     * @description Fetches all contentTypes of the stack\n     * @returns {ContentTypeQuery}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const contentTypeQuery = stack.contentType();\n     * const result = await contentTypeQuery.find();\n     */ find() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, this._queryParams);\n            return response;\n        });\n    }\n}\nexports.ContentTypeQuery = ContentTypeQuery; //# sourceMappingURL=contenttype-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9jb250ZW50dHlwZS1xdWVyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsd0JBQXdCLEdBQUcsS0FBSztBQUNoQyxNQUFNRyxVQUFVQyxtQkFBT0EsQ0FBQyxzREFBTztBQUMvQixNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQyx5RkFBb0I7QUFDM0MsTUFBTUY7SUFDRkksWUFBWUMsTUFBTSxDQUFFO1FBQ2hCLElBQUksQ0FBQ0MsWUFBWSxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFDQyxPQUFPLEdBQUdGO1FBQ2YsSUFBSSxDQUFDRyxRQUFRLEdBQUc7SUFDcEI7SUFDQTs7Ozs7Ozs7Ozs7S0FXQyxHQUNEQywyQkFBMkI7UUFDdkIsSUFBSSxDQUFDSCxZQUFZLENBQUNJLDJCQUEyQixHQUFHO1FBQ2hELE9BQU8sSUFBSTtJQUNmO0lBQ0E7Ozs7Ozs7Ozs7O0tBV0MsR0FDREMsT0FBTztRQUNILE9BQU9WLFFBQVFXLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUMzQyxNQUFNQyxXQUFXLE1BQU0sQ0FBQyxHQUFHVixPQUFPVyxPQUFPLEVBQUUsSUFBSSxDQUFDUCxPQUFPLEVBQUUsSUFBSSxDQUFDQyxRQUFRLEVBQUUsSUFBSSxDQUFDRixZQUFZO1lBQ3pGLE9BQU9PO1FBQ1g7SUFDSjtBQUNKO0FBQ0FmLHdCQUF3QixHQUFHRSxrQkFDM0IsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9saWIvY29udGVudHR5cGUtcXVlcnkuanM/MGRiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29udGVudFR5cGVRdWVyeSA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQGNvbnRlbnRzdGFjay9jb3JlXCIpO1xuY2xhc3MgQ29udGVudFR5cGVRdWVyeSB7XG4gICAgY29uc3RydWN0b3IoY2xpZW50KSB7XG4gICAgICAgIHRoaXMuX3F1ZXJ5UGFyYW1zID0ge307XG4gICAgICAgIHRoaXMuX2NsaWVudCA9IGNsaWVudDtcbiAgICAgICAgdGhpcy5fdXJsUGF0aCA9ICcvY29udGVudF90eXBlcyc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaW5jbHVkZUdsb2JhbEZpZWxkU2NoZW1hXG4gICAgICogQG1lbWJlcm9mIENvbnRlbnRUeXBlUXVlcnlcbiAgICAgKiBAZGVzY3JpcHRpb24gVGhlIGFzc2V0cyBwdWJsaXNoZWQgaW4gdGhlIGxvY2FsZSB3aWxsIGJlIGZldGNoZWRcbiAgICAgKiBAcmV0dXJucyB7Q29udGVudFR5cGVRdWVyeX1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgY29udGVudFR5cGVRdWVyeSA9IHN0YWNrLmNvbnRlbnRUeXBlKCk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgY29udGVudFR5cGVRdWVyeS5pbmNsdWRlR2xvYmFsRmllbGRTY2hlbWEoKS5maW5kKCk7XG4gICAgICovXG4gICAgaW5jbHVkZUdsb2JhbEZpZWxkU2NoZW1hKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2dsb2JhbF9maWVsZF9zY2hlbWEgPSAndHJ1ZSc7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGZpbmRcbiAgICAgKiBAbWVtYmVyb2YgQ29udGVudFR5cGVRdWVyeVxuICAgICAqIEBkZXNjcmlwdGlvbiBGZXRjaGVzIGFsbCBjb250ZW50VHlwZXMgb2YgdGhlIHN0YWNrXG4gICAgICogQHJldHVybnMge0NvbnRlbnRUeXBlUXVlcnl9XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBpbXBvcnQgY29udGVudHN0YWNrIGZyb20gJ0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrJ1xuICAgICAqXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soeyBhcGlLZXk6IFwiYXBpS2V5XCIsIGRlbGl2ZXJ5VG9rZW46IFwiZGVsaXZlcnlUb2tlblwiLCBlbnZpcm9ubWVudDogXCJlbnZpcm9ubWVudFwiIH0pO1xuICAgICAqIGNvbnN0IGNvbnRlbnRUeXBlUXVlcnkgPSBzdGFjay5jb250ZW50VHlwZSgpO1xuICAgICAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbnRlbnRUeXBlUXVlcnkuZmluZCgpO1xuICAgICAqL1xuICAgIGZpbmQoKSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgKDAsIGNvcmVfMS5nZXREYXRhKSh0aGlzLl9jbGllbnQsIHRoaXMuX3VybFBhdGgsIHRoaXMuX3F1ZXJ5UGFyYW1zKTtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Db250ZW50VHlwZVF1ZXJ5ID0gQ29udGVudFR5cGVRdWVyeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRlbnR0eXBlLXF1ZXJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNvbnRlbnRUeXBlUXVlcnkiLCJ0c2xpYl8xIiwicmVxdWlyZSIsImNvcmVfMSIsImNvbnN0cnVjdG9yIiwiY2xpZW50IiwiX3F1ZXJ5UGFyYW1zIiwiX2NsaWVudCIsIl91cmxQYXRoIiwiaW5jbHVkZUdsb2JhbEZpZWxkU2NoZW1hIiwiaW5jbHVkZV9nbG9iYWxfZmllbGRfc2NoZW1hIiwiZmluZCIsIl9fYXdhaXRlciIsInJlc3BvbnNlIiwiZ2V0RGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contenttype-query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entries.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entries.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Entries = void 0;\nconst entry_queryable_1 = __webpack_require__(/*! ./entry-queryable */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry-queryable.js\");\nconst query_1 = __webpack_require__(/*! ./query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js\");\nclass Entries extends entry_queryable_1.EntryQueryable {\n    constructor(client, contentTypeUid){\n        super();\n        this._client = client;\n        this._contentTypeUid = contentTypeUid;\n        this._urlPath = `/content_types/${this._contentTypeUid}/entries`;\n    }\n    /**\n     * @method includeFallback\n     * @memberof Entries\n     * @description When an entry is not published in a specific language, content can be fetched from its fallback language\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeFallback().find();\n     */ includeFallback() {\n        this._queryParams.include_fallback = \"true\";\n        return this;\n    }\n    /**\n     * @method includeMetadata\n     * @memberof Entries\n     * @description Include the metadata for getting metadata content for the entry.\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeMetadata().find();\n     */ includeMetadata() {\n        this._queryParams.include_metadata = \"true\";\n        return this;\n    }\n    /**\n     * @method includeEmbeddedItems\n     * @memberof Entries\n     * @description Include Embedded Objects (Entries and Assets) along with entry/entries details.\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeEmbeddedItems().fetch();\n     */ includeEmbeddedItems() {\n        this._queryParams[\"include_embedded_items[]\"] = \"BASE\";\n        return this;\n    }\n    /**\n     * @method includeContentType\n     * @memberof Entries\n     * @description IInclude the details of the content type along with the entries details\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeContentType().fetch();\n     */ includeContentType() {\n        this._queryParams.include_content_type = \"true\";\n        return this;\n    }\n    /**\n     * @method includeBranch\n     * @memberof Entries\n     * @description Includes the branch in result\n     * @returns {Entries}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry().includeBranch().find();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method includeReference\n     * @memberof Entries\n     * @description To include the content of the referred entries in your response,\n     * you need to use the include[] parameter and specify the UID of the reference field as value.\n     * This function sets the include parameter to a reference field UID in the API request.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().include_reference(\"brand\")\n     * const res = await query.find()\n     *\n     * @param {string} referenceFieldUid - UID of the reference field to include.\n     * @returns {Entries} - Returns the Entries instance for chaining.\n     */ includeReference(referenceFieldUid) {\n        this._queryParams[\"include[]\"] = referenceFieldUid;\n        return this;\n    }\n    /**\n     * @method includeReferenceContentTypeUID\n     * @memberof Entries\n     * @description This method also includes the content type UIDs of the referenced entries returned in the response.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().includeReferenceContentTypeUID()\n     * const res = await query.find()\n     *\n     * @returns {Entries} - Returns the Entries instance for chaining.\n     */ includeReferenceContentTypeUID() {\n        this._queryParams.include_reference_content_type_uid = \"true\";\n        return this;\n    }\n    /**\n     * @method includeSchema\n     * @memberof Entries\n     * @description This method also includes the content type UIDs of the referenced entries returned in the response.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().includeSchema()\n     * const res = await query.find()\n     *\n     * @returns {Entries} - Returns the Entries instance for chaining.\n     */ includeSchema() {\n        this._queryParams.include_schema = \"true\";\n        return this;\n    }\n    /**\n     * @method locale\n     * @memberof Entry\n     * @description The assets published in the locale will be fetched\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentTypeUid\").entry().locale('en-us').find();\n     */ locale(locale) {\n        this._queryParams.locale = locale;\n        return this;\n    }\n    /**\n     * @method query\n     * @memberof Entries\n     * @description Fetches the Entry data on the basis of the asset uid\n     * @returns {Collection}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentTypeUid\").entry().query();\n     */ query(queryObj) {\n        if (queryObj) return new query_1.Query(this._client, this._parameters, this._queryParams, this._contentTypeUid, queryObj);\n        return new query_1.Query(this._client, this._parameters, this._queryParams, this._contentTypeUid);\n    }\n}\nexports.Entries = Entries; //# sourceMappingURL=entries.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9lbnRyaWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxlQUFlLEdBQUcsS0FBSztBQUN2QixNQUFNRyxvQkFBb0JDLG1CQUFPQSxDQUFDLDhHQUFtQjtBQUNyRCxNQUFNQyxVQUFVRCxtQkFBT0EsQ0FBQywwRkFBUztBQUNqQyxNQUFNRixnQkFBZ0JDLGtCQUFrQkcsY0FBYztJQUNsREMsWUFBWUMsTUFBTSxFQUFFQyxjQUFjLENBQUU7UUFDaEMsS0FBSztRQUNMLElBQUksQ0FBQ0MsT0FBTyxHQUFHRjtRQUNmLElBQUksQ0FBQ0csZUFBZSxHQUFHRjtRQUN2QixJQUFJLENBQUNHLFFBQVEsR0FBRyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUNELGVBQWUsQ0FBQyxRQUFRLENBQUM7SUFDcEU7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RFLGtCQUFrQjtRQUNkLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxnQkFBZ0IsR0FBRztRQUNyQyxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7O0tBVUMsR0FDREMsa0JBQWtCO1FBQ2QsSUFBSSxDQUFDRixZQUFZLENBQUNHLGdCQUFnQixHQUFHO1FBQ3JDLE9BQU8sSUFBSTtJQUNmO0lBQ0E7Ozs7Ozs7Ozs7S0FVQyxHQUNEQyx1QkFBdUI7UUFDbkIsSUFBSSxDQUFDSixZQUFZLENBQUMsMkJBQTJCLEdBQUc7UUFDaEQsT0FBTyxJQUFJO0lBQ2Y7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RLLHFCQUFxQjtRQUNqQixJQUFJLENBQUNMLFlBQVksQ0FBQ00sb0JBQW9CLEdBQUc7UUFDekMsT0FBTyxJQUFJO0lBQ2Y7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RDLGdCQUFnQjtRQUNaLElBQUksQ0FBQ1AsWUFBWSxDQUFDUSxjQUFjLEdBQUc7UUFDbkMsT0FBTyxJQUFJO0lBQ2Y7SUFDQTs7Ozs7Ozs7Ozs7OztLQWFDLEdBQ0RDLGlCQUFpQkMsaUJBQWlCLEVBQUU7UUFDaEMsSUFBSSxDQUFDVixZQUFZLENBQUMsWUFBWSxHQUFHVTtRQUNqQyxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7O0tBVUMsR0FDREMsaUNBQWlDO1FBQzdCLElBQUksQ0FBQ1gsWUFBWSxDQUFDWSxrQ0FBa0MsR0FBRztRQUN2RCxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7O0tBVUMsR0FDREMsZ0JBQWdCO1FBQ1osSUFBSSxDQUFDYixZQUFZLENBQUNjLGNBQWMsR0FBRztRQUNuQyxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7O0tBVUMsR0FDREMsT0FBT0EsTUFBTSxFQUFFO1FBQ1gsSUFBSSxDQUFDZixZQUFZLENBQUNlLE1BQU0sR0FBR0E7UUFDM0IsT0FBTyxJQUFJO0lBQ2Y7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RDLE1BQU1DLFFBQVEsRUFBRTtRQUNaLElBQUlBLFVBQ0EsT0FBTyxJQUFJMUIsUUFBUTJCLEtBQUssQ0FBQyxJQUFJLENBQUN0QixPQUFPLEVBQUUsSUFBSSxDQUFDdUIsV0FBVyxFQUFFLElBQUksQ0FBQ25CLFlBQVksRUFBRSxJQUFJLENBQUNILGVBQWUsRUFBRW9CO1FBQ3RHLE9BQU8sSUFBSTFCLFFBQVEyQixLQUFLLENBQUMsSUFBSSxDQUFDdEIsT0FBTyxFQUFFLElBQUksQ0FBQ3VCLFdBQVcsRUFBRSxJQUFJLENBQUNuQixZQUFZLEVBQUUsSUFBSSxDQUFDSCxlQUFlO0lBQ3BHO0FBQ0o7QUFDQVgsZUFBZSxHQUFHRSxTQUNsQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9lbnRyaWVzLmpzP2E4MTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVudHJpZXMgPSB2b2lkIDA7XG5jb25zdCBlbnRyeV9xdWVyeWFibGVfMSA9IHJlcXVpcmUoXCIuL2VudHJ5LXF1ZXJ5YWJsZVwiKTtcbmNvbnN0IHF1ZXJ5XzEgPSByZXF1aXJlKFwiLi9xdWVyeVwiKTtcbmNsYXNzIEVudHJpZXMgZXh0ZW5kcyBlbnRyeV9xdWVyeWFibGVfMS5FbnRyeVF1ZXJ5YWJsZSB7XG4gICAgY29uc3RydWN0b3IoY2xpZW50LCBjb250ZW50VHlwZVVpZCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLl9jbGllbnQgPSBjbGllbnQ7XG4gICAgICAgIHRoaXMuX2NvbnRlbnRUeXBlVWlkID0gY29udGVudFR5cGVVaWQ7XG4gICAgICAgIHRoaXMuX3VybFBhdGggPSBgL2NvbnRlbnRfdHlwZXMvJHt0aGlzLl9jb250ZW50VHlwZVVpZH0vZW50cmllc2A7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaW5jbHVkZUZhbGxiYWNrXG4gICAgICogQG1lbWJlcm9mIEVudHJpZXNcbiAgICAgKiBAZGVzY3JpcHRpb24gV2hlbiBhbiBlbnRyeSBpcyBub3QgcHVibGlzaGVkIGluIGEgc3BlY2lmaWMgbGFuZ3VhZ2UsIGNvbnRlbnQgY2FuIGJlIGZldGNoZWQgZnJvbSBpdHMgZmFsbGJhY2sgbGFuZ3VhZ2VcbiAgICAgKiBAcmV0dXJucyB7RW50cmllc31cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suY29udGVudFR5cGUoY29udGVudFR5cGVfdWlkKS5lbnRyeSgpLmluY2x1ZGVGYWxsYmFjaygpLmZpbmQoKTtcbiAgICAgKi9cbiAgICBpbmNsdWRlRmFsbGJhY2soKSB7XG4gICAgICAgIHRoaXMuX3F1ZXJ5UGFyYW1zLmluY2x1ZGVfZmFsbGJhY2sgPSAndHJ1ZSc7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGluY2x1ZGVNZXRhZGF0YVxuICAgICAqIEBtZW1iZXJvZiBFbnRyaWVzXG4gICAgICogQGRlc2NyaXB0aW9uIEluY2x1ZGUgdGhlIG1ldGFkYXRhIGZvciBnZXR0aW5nIG1ldGFkYXRhIGNvbnRlbnQgZm9yIHRoZSBlbnRyeS5cbiAgICAgKiBAcmV0dXJucyB7RW50cmllc31cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suY29udGVudFR5cGUoY29udGVudFR5cGVfdWlkKS5lbnRyeSgpLmluY2x1ZGVNZXRhZGF0YSgpLmZpbmQoKTtcbiAgICAgKi9cbiAgICBpbmNsdWRlTWV0YWRhdGEoKSB7XG4gICAgICAgIHRoaXMuX3F1ZXJ5UGFyYW1zLmluY2x1ZGVfbWV0YWRhdGEgPSAndHJ1ZSc7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGluY2x1ZGVFbWJlZGRlZEl0ZW1zXG4gICAgICogQG1lbWJlcm9mIEVudHJpZXNcbiAgICAgKiBAZGVzY3JpcHRpb24gSW5jbHVkZSBFbWJlZGRlZCBPYmplY3RzIChFbnRyaWVzIGFuZCBBc3NldHMpIGFsb25nIHdpdGggZW50cnkvZW50cmllcyBkZXRhaWxzLlxuICAgICAqIEByZXR1cm5zIHtFbnRyaWVzfVxuICAgICAqIEBleGFtcGxlXG4gICAgICogaW1wb3J0IGNvbnRlbnRzdGFjayBmcm9tICdAY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkaydcbiAgICAgKlxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKHsgYXBpS2V5OiBcImFwaUtleVwiLCBkZWxpdmVyeVRva2VuOiBcImRlbGl2ZXJ5VG9rZW5cIiwgZW52aXJvbm1lbnQ6IFwiZW52aXJvbm1lbnRcIiB9KTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBhd2FpdCBzdGFjay5jb250ZW50VHlwZShjb250ZW50VHlwZV91aWQpLmVudHJ5KCkuaW5jbHVkZUVtYmVkZGVkSXRlbXMoKS5mZXRjaCgpO1xuICAgICAqL1xuICAgIGluY2x1ZGVFbWJlZGRlZEl0ZW1zKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtc1snaW5jbHVkZV9lbWJlZGRlZF9pdGVtc1tdJ10gPSAnQkFTRSc7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGluY2x1ZGVDb250ZW50VHlwZVxuICAgICAqIEBtZW1iZXJvZiBFbnRyaWVzXG4gICAgICogQGRlc2NyaXB0aW9uIElJbmNsdWRlIHRoZSBkZXRhaWxzIG9mIHRoZSBjb250ZW50IHR5cGUgYWxvbmcgd2l0aCB0aGUgZW50cmllcyBkZXRhaWxzXG4gICAgICogQHJldHVybnMge0VudHJpZXN9XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBpbXBvcnQgY29udGVudHN0YWNrIGZyb20gJ0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrJ1xuICAgICAqXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soeyBhcGlLZXk6IFwiYXBpS2V5XCIsIGRlbGl2ZXJ5VG9rZW46IFwiZGVsaXZlcnlUb2tlblwiLCBlbnZpcm9ubWVudDogXCJlbnZpcm9ubWVudFwiIH0pO1xuICAgICAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHN0YWNrLmNvbnRlbnRUeXBlKGNvbnRlbnRUeXBlX3VpZCkuZW50cnkoKS5pbmNsdWRlQ29udGVudFR5cGUoKS5mZXRjaCgpO1xuICAgICAqL1xuICAgIGluY2x1ZGVDb250ZW50VHlwZSgpIHtcbiAgICAgICAgdGhpcy5fcXVlcnlQYXJhbXMuaW5jbHVkZV9jb250ZW50X3R5cGUgPSAndHJ1ZSc7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGluY2x1ZGVCcmFuY2hcbiAgICAgKiBAbWVtYmVyb2YgRW50cmllc1xuICAgICAqIEBkZXNjcmlwdGlvbiBJbmNsdWRlcyB0aGUgYnJhbmNoIGluIHJlc3VsdFxuICAgICAqIEByZXR1cm5zIHtFbnRyaWVzfVxuICAgICAqIEBleGFtcGxlXG4gICAgICogaW1wb3J0IGNvbnRlbnRzdGFjayBmcm9tICdAY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkaydcbiAgICAgKlxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKHsgYXBpS2V5OiBcImFwaUtleVwiLCBkZWxpdmVyeVRva2VuOiBcImRlbGl2ZXJ5VG9rZW5cIiwgZW52aXJvbm1lbnQ6IFwiZW52aXJvbm1lbnRcIiB9KTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBhd2FpdCBzdGFjay5jb250ZW50VHlwZShjb250ZW50VHlwZV91aWQpLmVudHJ5KCkuaW5jbHVkZUJyYW5jaCgpLmZpbmQoKTtcbiAgICAgKi9cbiAgICBpbmNsdWRlQnJhbmNoKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2JyYW5jaCA9ICd0cnVlJztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaW5jbHVkZVJlZmVyZW5jZVxuICAgICAqIEBtZW1iZXJvZiBFbnRyaWVzXG4gICAgICogQGRlc2NyaXB0aW9uIFRvIGluY2x1ZGUgdGhlIGNvbnRlbnQgb2YgdGhlIHJlZmVycmVkIGVudHJpZXMgaW4geW91ciByZXNwb25zZSxcbiAgICAgKiB5b3UgbmVlZCB0byB1c2UgdGhlIGluY2x1ZGVbXSBwYXJhbWV0ZXIgYW5kIHNwZWNpZnkgdGhlIFVJRCBvZiB0aGUgcmVmZXJlbmNlIGZpZWxkIGFzIHZhbHVlLlxuICAgICAqIFRoaXMgZnVuY3Rpb24gc2V0cyB0aGUgaW5jbHVkZSBwYXJhbWV0ZXIgdG8gYSByZWZlcmVuY2UgZmllbGQgVUlEIGluIHRoZSBBUEkgcmVxdWVzdC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKFwiYXBpS2V5XCIsIFwiZGVsaXZlcnlLZXlcIiwgXCJlbnZpcm9ubWVudFwiKTtcbiAgICAgKiBjb25zdCBxdWVyeSA9IHN0YWNrLmNvbnRlbnRUeXBlKFwiY29udGVudFR5cGVVaWRcIikuZW50cnkoKS5pbmNsdWRlX3JlZmVyZW5jZShcImJyYW5kXCIpXG4gICAgICogY29uc3QgcmVzID0gYXdhaXQgcXVlcnkuZmluZCgpXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcmVmZXJlbmNlRmllbGRVaWQgLSBVSUQgb2YgdGhlIHJlZmVyZW5jZSBmaWVsZCB0byBpbmNsdWRlLlxuICAgICAqIEByZXR1cm5zIHtFbnRyaWVzfSAtIFJldHVybnMgdGhlIEVudHJpZXMgaW5zdGFuY2UgZm9yIGNoYWluaW5nLlxuICAgICAqL1xuICAgIGluY2x1ZGVSZWZlcmVuY2UocmVmZXJlbmNlRmllbGRVaWQpIHtcbiAgICAgICAgdGhpcy5fcXVlcnlQYXJhbXNbJ2luY2x1ZGVbXSddID0gcmVmZXJlbmNlRmllbGRVaWQ7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGluY2x1ZGVSZWZlcmVuY2VDb250ZW50VHlwZVVJRFxuICAgICAqIEBtZW1iZXJvZiBFbnRyaWVzXG4gICAgICogQGRlc2NyaXB0aW9uIFRoaXMgbWV0aG9kIGFsc28gaW5jbHVkZXMgdGhlIGNvbnRlbnQgdHlwZSBVSURzIG9mIHRoZSByZWZlcmVuY2VkIGVudHJpZXMgcmV0dXJuZWQgaW4gdGhlIHJlc3BvbnNlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soXCJhcGlLZXlcIiwgXCJkZWxpdmVyeUtleVwiLCBcImVudmlyb25tZW50XCIpO1xuICAgICAqIGNvbnN0IHF1ZXJ5ID0gc3RhY2suY29udGVudFR5cGUoXCJjb250ZW50VHlwZVVpZFwiKS5lbnRyeSgpLmluY2x1ZGVSZWZlcmVuY2VDb250ZW50VHlwZVVJRCgpXG4gICAgICogY29uc3QgcmVzID0gYXdhaXQgcXVlcnkuZmluZCgpXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7RW50cmllc30gLSBSZXR1cm5zIHRoZSBFbnRyaWVzIGluc3RhbmNlIGZvciBjaGFpbmluZy5cbiAgICAgKi9cbiAgICBpbmNsdWRlUmVmZXJlbmNlQ29udGVudFR5cGVVSUQoKSB7XG4gICAgICAgIHRoaXMuX3F1ZXJ5UGFyYW1zLmluY2x1ZGVfcmVmZXJlbmNlX2NvbnRlbnRfdHlwZV91aWQgPSAndHJ1ZSc7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGluY2x1ZGVTY2hlbWFcbiAgICAgKiBAbWVtYmVyb2YgRW50cmllc1xuICAgICAqIEBkZXNjcmlwdGlvbiBUaGlzIG1ldGhvZCBhbHNvIGluY2x1ZGVzIHRoZSBjb250ZW50IHR5cGUgVUlEcyBvZiB0aGUgcmVmZXJlbmNlZCBlbnRyaWVzIHJldHVybmVkIGluIHRoZSByZXNwb25zZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKFwiYXBpS2V5XCIsIFwiZGVsaXZlcnlLZXlcIiwgXCJlbnZpcm9ubWVudFwiKTtcbiAgICAgKiBjb25zdCBxdWVyeSA9IHN0YWNrLmNvbnRlbnRUeXBlKFwiY29udGVudFR5cGVVaWRcIikuZW50cnkoKS5pbmNsdWRlU2NoZW1hKClcbiAgICAgKiBjb25zdCByZXMgPSBhd2FpdCBxdWVyeS5maW5kKClcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtFbnRyaWVzfSAtIFJldHVybnMgdGhlIEVudHJpZXMgaW5zdGFuY2UgZm9yIGNoYWluaW5nLlxuICAgICAqL1xuICAgIGluY2x1ZGVTY2hlbWEoKSB7XG4gICAgICAgIHRoaXMuX3F1ZXJ5UGFyYW1zLmluY2x1ZGVfc2NoZW1hID0gJ3RydWUnO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBsb2NhbGVcbiAgICAgKiBAbWVtYmVyb2YgRW50cnlcbiAgICAgKiBAZGVzY3JpcHRpb24gVGhlIGFzc2V0cyBwdWJsaXNoZWQgaW4gdGhlIGxvY2FsZSB3aWxsIGJlIGZldGNoZWRcbiAgICAgKiBAcmV0dXJucyB7RW50cnl9XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBpbXBvcnQgY29udGVudHN0YWNrIGZyb20gJ0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrJ1xuICAgICAqXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soeyBhcGlLZXk6IFwiYXBpS2V5XCIsIGRlbGl2ZXJ5VG9rZW46IFwiZGVsaXZlcnlUb2tlblwiLCBlbnZpcm9ubWVudDogXCJlbnZpcm9ubWVudFwiIH0pO1xuICAgICAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHN0YWNrLmNvbnRlbnRUeXBlKFwiY29udGVudFR5cGVVaWRcIikuZW50cnkoKS5sb2NhbGUoJ2VuLXVzJykuZmluZCgpO1xuICAgICAqL1xuICAgIGxvY2FsZShsb2NhbGUpIHtcbiAgICAgICAgdGhpcy5fcXVlcnlQYXJhbXMubG9jYWxlID0gbG9jYWxlO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBxdWVyeVxuICAgICAqIEBtZW1iZXJvZiBFbnRyaWVzXG4gICAgICogQGRlc2NyaXB0aW9uIEZldGNoZXMgdGhlIEVudHJ5IGRhdGEgb24gdGhlIGJhc2lzIG9mIHRoZSBhc3NldCB1aWRcbiAgICAgKiBAcmV0dXJucyB7Q29sbGVjdGlvbn1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suY29udGVudFR5cGUoXCJjb250ZW50VHlwZVVpZFwiKS5lbnRyeSgpLnF1ZXJ5KCk7XG4gICAgICovXG4gICAgcXVlcnkocXVlcnlPYmopIHtcbiAgICAgICAgaWYgKHF1ZXJ5T2JqKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBxdWVyeV8xLlF1ZXJ5KHRoaXMuX2NsaWVudCwgdGhpcy5fcGFyYW1ldGVycywgdGhpcy5fcXVlcnlQYXJhbXMsIHRoaXMuX2NvbnRlbnRUeXBlVWlkLCBxdWVyeU9iaik7XG4gICAgICAgIHJldHVybiBuZXcgcXVlcnlfMS5RdWVyeSh0aGlzLl9jbGllbnQsIHRoaXMuX3BhcmFtZXRlcnMsIHRoaXMuX3F1ZXJ5UGFyYW1zLCB0aGlzLl9jb250ZW50VHlwZVVpZCk7XG4gICAgfVxufVxuZXhwb3J0cy5FbnRyaWVzID0gRW50cmllcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudHJpZXMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRW50cmllcyIsImVudHJ5X3F1ZXJ5YWJsZV8xIiwicmVxdWlyZSIsInF1ZXJ5XzEiLCJFbnRyeVF1ZXJ5YWJsZSIsImNvbnN0cnVjdG9yIiwiY2xpZW50IiwiY29udGVudFR5cGVVaWQiLCJfY2xpZW50IiwiX2NvbnRlbnRUeXBlVWlkIiwiX3VybFBhdGgiLCJpbmNsdWRlRmFsbGJhY2siLCJfcXVlcnlQYXJhbXMiLCJpbmNsdWRlX2ZhbGxiYWNrIiwiaW5jbHVkZU1ldGFkYXRhIiwiaW5jbHVkZV9tZXRhZGF0YSIsImluY2x1ZGVFbWJlZGRlZEl0ZW1zIiwiaW5jbHVkZUNvbnRlbnRUeXBlIiwiaW5jbHVkZV9jb250ZW50X3R5cGUiLCJpbmNsdWRlQnJhbmNoIiwiaW5jbHVkZV9icmFuY2giLCJpbmNsdWRlUmVmZXJlbmNlIiwicmVmZXJlbmNlRmllbGRVaWQiLCJpbmNsdWRlUmVmZXJlbmNlQ29udGVudFR5cGVVSUQiLCJpbmNsdWRlX3JlZmVyZW5jZV9jb250ZW50X3R5cGVfdWlkIiwiaW5jbHVkZVNjaGVtYSIsImluY2x1ZGVfc2NoZW1hIiwibG9jYWxlIiwicXVlcnkiLCJxdWVyeU9iaiIsIlF1ZXJ5IiwiX3BhcmFtZXRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entries.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry-queryable.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry-queryable.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.EntryQueryable = void 0;\nconst base_query_1 = __webpack_require__(/*! ./base-query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\");\n/* eslint-disable @cspell/spellchecker */ class EntryQueryable extends base_query_1.BaseQuery {\n    /**\n     * @method only\n     * @memberof EntryQueryable\n     * @description Selects specific field/fields of an entry\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentTypeUid\").entry().only(\"fieldUID\").find()\n     *\n     * @param {string} fieldUid - field uid to select\n     * @returns {EntryQueryable} - returns EntryQueryable object for chaining method calls\n     */ only(fieldUid) {\n        this._queryParams[\"only[BASE][]\"] = fieldUid;\n        return this;\n    }\n    /**\n     * @method except\n     * @memberof EntryQueryable\n     * @description Excludes specific field/fields of an entry\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(\"contentTypeUid\").entry().except(\"fieldUID\").find()\n     *\n     * @param {string} fieldUid - field uid to exclude\n     * @returns {EntryQueryable} - returns EntryQueryable object for chaining method calls\n     */ except(fieldUid) {\n        this._queryParams[\"except[BASE][]\"] = fieldUid;\n        return this;\n    }\n}\nexports.EntryQueryable = EntryQueryable; //# sourceMappingURL=entry-queryable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9lbnRyeS1xdWVyeWFibGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHLEtBQUs7QUFDOUIsTUFBTUcsZUFBZUMsbUJBQU9BLENBQUMsb0dBQWM7QUFDM0MsdUNBQXVDLEdBQ3ZDLE1BQU1GLHVCQUF1QkMsYUFBYUUsU0FBUztJQUMvQzs7Ozs7Ozs7Ozs7O0tBWUMsR0FDREMsS0FBS0MsUUFBUSxFQUFFO1FBQ1gsSUFBSSxDQUFDQyxZQUFZLENBQUMsZUFBZSxHQUFHRDtRQUNwQyxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7Ozs7S0FZQyxHQUNERSxPQUFPRixRQUFRLEVBQUU7UUFDYixJQUFJLENBQUNDLFlBQVksQ0FBQyxpQkFBaUIsR0FBR0Q7UUFDdEMsT0FBTyxJQUFJO0lBQ2Y7QUFDSjtBQUNBUCxzQkFBc0IsR0FBR0UsZ0JBQ3pCLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL2VudHJ5LXF1ZXJ5YWJsZS5qcz8yODRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FbnRyeVF1ZXJ5YWJsZSA9IHZvaWQgMDtcbmNvbnN0IGJhc2VfcXVlcnlfMSA9IHJlcXVpcmUoXCIuL2Jhc2UtcXVlcnlcIik7XG4vKiBlc2xpbnQtZGlzYWJsZSBAY3NwZWxsL3NwZWxsY2hlY2tlciAqL1xuY2xhc3MgRW50cnlRdWVyeWFibGUgZXh0ZW5kcyBiYXNlX3F1ZXJ5XzEuQmFzZVF1ZXJ5IHtcbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIG9ubHlcbiAgICAgKiBAbWVtYmVyb2YgRW50cnlRdWVyeWFibGVcbiAgICAgKiBAZGVzY3JpcHRpb24gU2VsZWN0cyBzcGVjaWZpYyBmaWVsZC9maWVsZHMgb2YgYW4gZW50cnlcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suY29udGVudFR5cGUoXCJjb250ZW50VHlwZVVpZFwiKS5lbnRyeSgpLm9ubHkoXCJmaWVsZFVJRFwiKS5maW5kKClcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmaWVsZFVpZCAtIGZpZWxkIHVpZCB0byBzZWxlY3RcbiAgICAgKiBAcmV0dXJucyB7RW50cnlRdWVyeWFibGV9IC0gcmV0dXJucyBFbnRyeVF1ZXJ5YWJsZSBvYmplY3QgZm9yIGNoYWluaW5nIG1ldGhvZCBjYWxsc1xuICAgICAqL1xuICAgIG9ubHkoZmllbGRVaWQpIHtcbiAgICAgICAgdGhpcy5fcXVlcnlQYXJhbXNbJ29ubHlbQkFTRV1bXSddID0gZmllbGRVaWQ7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGV4Y2VwdFxuICAgICAqIEBtZW1iZXJvZiBFbnRyeVF1ZXJ5YWJsZVxuICAgICAqIEBkZXNjcmlwdGlvbiBFeGNsdWRlcyBzcGVjaWZpYyBmaWVsZC9maWVsZHMgb2YgYW4gZW50cnlcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gYXdhaXQgc3RhY2suY29udGVudFR5cGUoXCJjb250ZW50VHlwZVVpZFwiKS5lbnRyeSgpLmV4Y2VwdChcImZpZWxkVUlEXCIpLmZpbmQoKVxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGZpZWxkVWlkIC0gZmllbGQgdWlkIHRvIGV4Y2x1ZGVcbiAgICAgKiBAcmV0dXJucyB7RW50cnlRdWVyeWFibGV9IC0gcmV0dXJucyBFbnRyeVF1ZXJ5YWJsZSBvYmplY3QgZm9yIGNoYWluaW5nIG1ldGhvZCBjYWxsc1xuICAgICAqL1xuICAgIGV4Y2VwdChmaWVsZFVpZCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtc1snZXhjZXB0W0JBU0VdW10nXSA9IGZpZWxkVWlkO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5leHBvcnRzLkVudHJ5UXVlcnlhYmxlID0gRW50cnlRdWVyeWFibGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnRyeS1xdWVyeWFibGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRW50cnlRdWVyeWFibGUiLCJiYXNlX3F1ZXJ5XzEiLCJyZXF1aXJlIiwiQmFzZVF1ZXJ5Iiwib25seSIsImZpZWxkVWlkIiwiX3F1ZXJ5UGFyYW1zIiwiZXhjZXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry-queryable.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Entry = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nclass Entry {\n    constructor(client, contentTypeUid, entryUid){\n        this._queryParams = {};\n        this._client = client;\n        this._contentTypeUid = contentTypeUid;\n        this._entryUid = entryUid;\n        this._urlPath = `/content_types/${this._contentTypeUid}/entries/${this._entryUid}`;\n    }\n    /**\n     * @method includeFallback\n     * @memberof Entry\n     * @description When an entry is not published in a specific language, content can be fetched from its fallback language\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeFallback().fetch();\n     */ includeFallback() {\n        this._queryParams.include_fallback = \"true\";\n        return this;\n    }\n    /**\n     * @method includeMetadata\n     * @memberof Entry\n     * @description Include the metadata for getting metadata content for the entry.\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeMetadata().fetch();\n     */ includeMetadata() {\n        this._queryParams.include_metadata = \"true\";\n        return this;\n    }\n    /**\n     * @method includeEmbeddedItems\n     * @memberof Entry\n     * @description Include Embedded Objects (Entry and Assets) along with entry/entries details.\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeEmbeddedItems().fetch();\n     */ includeEmbeddedItems() {\n        this._queryParams[\"include_embedded_items[]\"] = \"BASE\";\n        return this;\n    }\n    /**\n     * @method includeContentType\n     * @memberof Entry\n     * @description IInclude the details of the content type along with the entries details\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeContentType().fetch();\n     */ includeContentType() {\n        this._queryParams.include_content_type = \"true\";\n        return this;\n    }\n    /**\n     * @method includeBranch\n     * @memberof Entry\n     * @description Includes the branch in result\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).includeBranch().fetch();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method locale\n     * @memberof Entry\n     * @description The assets published in the locale will be fetched\n     * @returns {Entry}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.assetQuery().locale('en-us').fetch();\n     */ locale(locale) {\n        this._queryParams.locale = locale;\n        return this;\n    }\n    /**\n     * @method fetch\n     * @memberof Entry\n     * @description Fetches the entry data on the basis of the entry uid\n     * @returns {Collection}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const result = await stack.contentType(contentType_uid).entry(entry_uid).fetch();\n     */ fetch() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, this._queryParams);\n            if (response.entry) return response.entry;\n            return response;\n        });\n    }\n}\nexports.Entry = Entry; //# sourceMappingURL=entry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/entry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field-query.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field-query.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GlobalFieldQuery = void 0;\nconst base_query_1 = __webpack_require__(/*! ./base-query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\");\nclass GlobalFieldQuery extends base_query_1.BaseQuery {\n    constructor(client){\n        super();\n        this._client = client;\n        this._urlPath = \"/global_fields\";\n    }\n    /**\n     * @method includeBranch\n     * @memberof GlobalFieldQuery\n     * @description Includes the _branch top-level key in the response\n     * @returns {GlobalFieldQuery}\n     * @example\n     * const stack = contentstack.Stack('apiKey','deliveryToken','environment');\n     * const globalFields = stack.globalFields();\n     * const result = globalFields.includeBranch().find();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n}\nexports.GlobalFieldQuery = GlobalFieldQuery; //# sourceMappingURL=global-field-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9nbG9iYWwtZmllbGQtcXVlcnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHdCQUF3QixHQUFHLEtBQUs7QUFDaEMsTUFBTUcsZUFBZUMsbUJBQU9BLENBQUMsb0dBQWM7QUFDM0MsTUFBTUYseUJBQXlCQyxhQUFhRSxTQUFTO0lBQ2pEQyxZQUFZQyxNQUFNLENBQUU7UUFDaEIsS0FBSztRQUNMLElBQUksQ0FBQ0MsT0FBTyxHQUFHRDtRQUNmLElBQUksQ0FBQ0UsUUFBUSxHQUFHO0lBQ3BCO0lBQ0E7Ozs7Ozs7OztLQVNDLEdBQ0RDLGdCQUFnQjtRQUNaLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxjQUFjLEdBQUc7UUFDbkMsT0FBTyxJQUFJO0lBQ2Y7QUFDSjtBQUNBWix3QkFBd0IsR0FBR0Usa0JBQzNCLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL2dsb2JhbC1maWVsZC1xdWVyeS5qcz8zY2NjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HbG9iYWxGaWVsZFF1ZXJ5ID0gdm9pZCAwO1xuY29uc3QgYmFzZV9xdWVyeV8xID0gcmVxdWlyZShcIi4vYmFzZS1xdWVyeVwiKTtcbmNsYXNzIEdsb2JhbEZpZWxkUXVlcnkgZXh0ZW5kcyBiYXNlX3F1ZXJ5XzEuQmFzZVF1ZXJ5IHtcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5fY2xpZW50ID0gY2xpZW50O1xuICAgICAgICB0aGlzLl91cmxQYXRoID0gJy9nbG9iYWxfZmllbGRzJztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBpbmNsdWRlQnJhbmNoXG4gICAgICogQG1lbWJlcm9mIEdsb2JhbEZpZWxkUXVlcnlcbiAgICAgKiBAZGVzY3JpcHRpb24gSW5jbHVkZXMgdGhlIF9icmFuY2ggdG9wLWxldmVsIGtleSBpbiB0aGUgcmVzcG9uc2VcbiAgICAgKiBAcmV0dXJucyB7R2xvYmFsRmllbGRRdWVyeX1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKCdhcGlLZXknLCdkZWxpdmVyeVRva2VuJywnZW52aXJvbm1lbnQnKTtcbiAgICAgKiBjb25zdCBnbG9iYWxGaWVsZHMgPSBzdGFjay5nbG9iYWxGaWVsZHMoKTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBnbG9iYWxGaWVsZHMuaW5jbHVkZUJyYW5jaCgpLmZpbmQoKTtcbiAgICAgKi9cbiAgICBpbmNsdWRlQnJhbmNoKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2JyYW5jaCA9ICd0cnVlJztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5HbG9iYWxGaWVsZFF1ZXJ5ID0gR2xvYmFsRmllbGRRdWVyeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbC1maWVsZC1xdWVyeS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHbG9iYWxGaWVsZFF1ZXJ5IiwiYmFzZV9xdWVyeV8xIiwicmVxdWlyZSIsIkJhc2VRdWVyeSIsImNvbnN0cnVjdG9yIiwiY2xpZW50IiwiX2NsaWVudCIsIl91cmxQYXRoIiwiaW5jbHVkZUJyYW5jaCIsIl9xdWVyeVBhcmFtcyIsImluY2x1ZGVfYnJhbmNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field-query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GlobalField = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nclass GlobalField {\n    constructor(clientConfig, globalFieldUid){\n        this._queryParams = {};\n        this._client = clientConfig;\n        this._urlPath = `/global_fields/${globalFieldUid}`;\n    }\n    /**\n     * @method includeBranch\n     * @memberof GlobalField\n     * @description Includes the _branch top-level key in the response\n     * @returns {GlobalField}\n     * @example\n     * const stack = contentstack.Stack('apiKey','deliveryToken','environment');\n     * const globalField = stack.globalField('global_field_uid');\n     * const result = globalField.includeBranch().fetch();\n     */ includeBranch() {\n        this._queryParams.include_branch = \"true\";\n        return this;\n    }\n    /**\n     * @method find\n     * @memberof GlobalField\n     * @description Fetches comprehensive details of a specific global field\n     * @returns {GlobalField}\n     * @example\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const globalField = stack.globalField('global_field_uid');\n     * const result = globalField.fetch();\n     */ fetch() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const response = yield (0, core_1.getData)(this._client, this._urlPath, this._queryParams);\n            return response.global_field;\n        });\n    }\n}\nexports.GlobalField = GlobalField; //# sourceMappingURL=global-field.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9nbG9iYWwtZmllbGQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQixHQUFHLEtBQUs7QUFDM0IsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUMseUZBQW9CO0FBQzNDLE1BQU1GO0lBQ0ZJLFlBQVlDLFlBQVksRUFBRUMsY0FBYyxDQUFFO1FBQ3RDLElBQUksQ0FBQ0MsWUFBWSxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFDQyxPQUFPLEdBQUdIO1FBQ2YsSUFBSSxDQUFDSSxRQUFRLEdBQUcsQ0FBQyxlQUFlLEVBQUVILGVBQWUsQ0FBQztJQUN0RDtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNESSxnQkFBZ0I7UUFDWixJQUFJLENBQUNILFlBQVksQ0FBQ0ksY0FBYyxHQUFHO1FBQ25DLE9BQU8sSUFBSTtJQUNmO0lBQ0E7Ozs7Ozs7OztLQVNDLEdBQ0RDLFFBQVE7UUFDSixPQUFPWCxRQUFRWSxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDM0MsTUFBTUMsV0FBVyxNQUFNLENBQUMsR0FBR1gsT0FBT1ksT0FBTyxFQUFFLElBQUksQ0FBQ1AsT0FBTyxFQUFFLElBQUksQ0FBQ0MsUUFBUSxFQUFFLElBQUksQ0FBQ0YsWUFBWTtZQUN6RixPQUFPTyxTQUFTRSxZQUFZO1FBQ2hDO0lBQ0o7QUFDSjtBQUNBbEIsbUJBQW1CLEdBQUdFLGFBQ3RCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL2dsb2JhbC1maWVsZC5qcz9iMDNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HbG9iYWxGaWVsZCA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQGNvbnRlbnRzdGFjay9jb3JlXCIpO1xuY2xhc3MgR2xvYmFsRmllbGQge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudENvbmZpZywgZ2xvYmFsRmllbGRVaWQpIHtcbiAgICAgICAgdGhpcy5fcXVlcnlQYXJhbXMgPSB7fTtcbiAgICAgICAgdGhpcy5fY2xpZW50ID0gY2xpZW50Q29uZmlnO1xuICAgICAgICB0aGlzLl91cmxQYXRoID0gYC9nbG9iYWxfZmllbGRzLyR7Z2xvYmFsRmllbGRVaWR9YDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBpbmNsdWRlQnJhbmNoXG4gICAgICogQG1lbWJlcm9mIEdsb2JhbEZpZWxkXG4gICAgICogQGRlc2NyaXB0aW9uIEluY2x1ZGVzIHRoZSBfYnJhbmNoIHRvcC1sZXZlbCBrZXkgaW4gdGhlIHJlc3BvbnNlXG4gICAgICogQHJldHVybnMge0dsb2JhbEZpZWxkfVxuICAgICAqIEBleGFtcGxlXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soJ2FwaUtleScsJ2RlbGl2ZXJ5VG9rZW4nLCdlbnZpcm9ubWVudCcpO1xuICAgICAqIGNvbnN0IGdsb2JhbEZpZWxkID0gc3RhY2suZ2xvYmFsRmllbGQoJ2dsb2JhbF9maWVsZF91aWQnKTtcbiAgICAgKiBjb25zdCByZXN1bHQgPSBnbG9iYWxGaWVsZC5pbmNsdWRlQnJhbmNoKCkuZmV0Y2goKTtcbiAgICAgKi9cbiAgICBpbmNsdWRlQnJhbmNoKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5pbmNsdWRlX2JyYW5jaCA9ICd0cnVlJztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgZmluZFxuICAgICAqIEBtZW1iZXJvZiBHbG9iYWxGaWVsZFxuICAgICAqIEBkZXNjcmlwdGlvbiBGZXRjaGVzIGNvbXByZWhlbnNpdmUgZGV0YWlscyBvZiBhIHNwZWNpZmljIGdsb2JhbCBmaWVsZFxuICAgICAqIEByZXR1cm5zIHtHbG9iYWxGaWVsZH1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IHN0YWNrID0gY29udGVudHN0YWNrLlN0YWNrKHsgYXBpS2V5OiBcImFwaUtleVwiLCBkZWxpdmVyeVRva2VuOiBcImRlbGl2ZXJ5VG9rZW5cIiwgZW52aXJvbm1lbnQ6IFwiZW52aXJvbm1lbnRcIiB9KTtcbiAgICAgKiBjb25zdCBnbG9iYWxGaWVsZCA9IHN0YWNrLmdsb2JhbEZpZWxkKCdnbG9iYWxfZmllbGRfdWlkJyk7XG4gICAgICogY29uc3QgcmVzdWx0ID0gZ2xvYmFsRmllbGQuZmV0Y2goKTtcbiAgICAgKi9cbiAgICBmZXRjaCgpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCAoMCwgY29yZV8xLmdldERhdGEpKHRoaXMuX2NsaWVudCwgdGhpcy5fdXJsUGF0aCwgdGhpcy5fcXVlcnlQYXJhbXMpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmdsb2JhbF9maWVsZDtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5HbG9iYWxGaWVsZCA9IEdsb2JhbEZpZWxkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFsLWZpZWxkLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkdsb2JhbEZpZWxkIiwidHNsaWJfMSIsInJlcXVpcmUiLCJjb3JlXzEiLCJjb25zdHJ1Y3RvciIsImNsaWVudENvbmZpZyIsImdsb2JhbEZpZWxkVWlkIiwiX3F1ZXJ5UGFyYW1zIiwiX2NsaWVudCIsIl91cmxQYXRoIiwiaW5jbHVkZUJyYW5jaCIsImluY2x1ZGVfYnJhbmNoIiwiZmV0Y2giLCJfX2F3YWl0ZXIiLCJyZXNwb25zZSIsImdldERhdGEiLCJnbG9iYWxfZmllbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/pagination.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/pagination.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Pagination = void 0;\nclass Pagination {\n    constructor(){\n        this._queryParams = {};\n    }\n    /**\n     * @method constructor\n     * @memberof Pagination\n     * @description Create a pagination class object to paginate through the query response\n     * @param {baseQuery} object of class BaseQUery\n     * @param {paginationObj} object to send skip and limit values\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     *\n     * interface TEntryProps {\n     *   uid: string;\n     *   title: string;\n     *   created_at: string;\n     *   _version: number;\n     *   locale: string;\n     *   created_by: string;\n     *   url: string;\n     *   // other props\n     * }\n     * interface TEntries {\n     *   entries: TEntryProps[];\n     * }\n     * const pagedResult = await query.paginate().find<TEntries>();\n     * OR\n     * const pageObj = await query.paginate({ skip: 10, limit: 20 }).find<TEntries>();\n     * @returns {Pagination}\n     */ paginate(paginationObj) {\n        this._queryParams.skip = (paginationObj === null || paginationObj === void 0 ? void 0 : paginationObj.skip) || 0;\n        this._queryParams.limit = (paginationObj === null || paginationObj === void 0 ? void 0 : paginationObj.limit) || 10;\n        return this;\n    }\n    /**\n     * @method next\n     * @memberof Pagination\n     * @description Go to next set of response values - skips the current num of responses and shows next responses\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     *\n     * interface TEntryProps {\n     *   uid: string;\n     *   title: string;\n     *   created_at: string;\n     *   _version: number;\n     *   locale: string;\n     *   created_by: string;\n     *   url: string;\n     *   // other props\n     * }\n     * interface TEntries {\n     *   entries: TEntryProps[];\n     * }\n     * const pagedResult = await query.paginate().find<TEntries>();\n     * const nextPageResult = await query.next().find<TEntries>();\n     * @returns {Object}\n     */ next() {\n        if (!this._queryParams.skip) this.paginate();\n        this._queryParams.skip += this._queryParams.limit;\n        return this;\n    }\n    /**\n     * @method previous\n     * @memberof Pagination\n     * @description Go to previous set of response values - skips the current num of responses and shows previous responses\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     *\n     * interface TEntryProps {\n     *   uid: string;\n     *   title: string;\n     *   created_at: string;\n     *   _version: number;\n     *   locale: string;\n     *   created_by: string;\n     *   url: string;\n     *   // other props\n     * }\n     * interface TEntries {\n     *   entries: TEntryProps[];\n     * }\n     * const pagedResult = await query.paginate().find<TEntries>();\n     * const prevPageResult = await query.previous().find<TEntries>();\n     * @returns {Pagination}\n     */ previous() {\n        if (!this._queryParams.skip) this.paginate();\n        const skipVal = this._queryParams.skip - this._queryParams.limit;\n        this._queryParams.skip = skipVal < 0 ? 0 : skipVal;\n        return this;\n    }\n}\nexports.Pagination = Pagination; //# sourceMappingURL=pagination.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9wYWdpbmF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0IsR0FBRyxLQUFLO0FBQzFCLE1BQU1FO0lBQ0ZDLGFBQWM7UUFDVixJQUFJLENBQUNDLFlBQVksR0FBRyxDQUFDO0lBQ3pCO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBNkJDLEdBQ0RDLFNBQVNDLGFBQWEsRUFBRTtRQUNwQixJQUFJLENBQUNGLFlBQVksQ0FBQ0csSUFBSSxHQUFHLENBQUNELGtCQUFrQixRQUFRQSxrQkFBa0IsS0FBSyxJQUFJLEtBQUssSUFBSUEsY0FBY0MsSUFBSSxLQUFLO1FBQy9HLElBQUksQ0FBQ0gsWUFBWSxDQUFDSSxLQUFLLEdBQUcsQ0FBQ0Ysa0JBQWtCLFFBQVFBLGtCQUFrQixLQUFLLElBQUksS0FBSyxJQUFJQSxjQUFjRSxLQUFLLEtBQUs7UUFDakgsT0FBTyxJQUFJO0lBQ2Y7SUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0EwQkMsR0FDREMsT0FBTztRQUNILElBQUksQ0FBQyxJQUFJLENBQUNMLFlBQVksQ0FBQ0csSUFBSSxFQUN2QixJQUFJLENBQUNGLFFBQVE7UUFDakIsSUFBSSxDQUFDRCxZQUFZLENBQUNHLElBQUksSUFBSSxJQUFJLENBQUNILFlBQVksQ0FBQ0ksS0FBSztRQUNqRCxPQUFPLElBQUk7SUFDZjtJQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQTBCQyxHQUNERSxXQUFXO1FBQ1AsSUFBSSxDQUFDLElBQUksQ0FBQ04sWUFBWSxDQUFDRyxJQUFJLEVBQ3ZCLElBQUksQ0FBQ0YsUUFBUTtRQUNqQixNQUFNTSxVQUFVLElBQUksQ0FBQ1AsWUFBWSxDQUFDRyxJQUFJLEdBQUcsSUFBSSxDQUFDSCxZQUFZLENBQUNJLEtBQUs7UUFDaEUsSUFBSSxDQUFDSixZQUFZLENBQUNHLElBQUksR0FBR0ksVUFBVSxJQUFJLElBQUlBO1FBQzNDLE9BQU8sSUFBSTtJQUNmO0FBQ0o7QUFDQVgsa0JBQWtCLEdBQUdFLFlBQ3JCLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvbGliL3BhZ2luYXRpb24uanM/YWVkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGFnaW5hdGlvbiA9IHZvaWQgMDtcbmNsYXNzIFBhZ2luYXRpb24ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcyA9IHt9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGNvbnN0cnVjdG9yXG4gICAgICogQG1lbWJlcm9mIFBhZ2luYXRpb25cbiAgICAgKiBAZGVzY3JpcHRpb24gQ3JlYXRlIGEgcGFnaW5hdGlvbiBjbGFzcyBvYmplY3QgdG8gcGFnaW5hdGUgdGhyb3VnaCB0aGUgcXVlcnkgcmVzcG9uc2VcbiAgICAgKiBAcGFyYW0ge2Jhc2VRdWVyeX0gb2JqZWN0IG9mIGNsYXNzIEJhc2VRVWVyeVxuICAgICAqIEBwYXJhbSB7cGFnaW5hdGlvbk9ian0gb2JqZWN0IHRvIHNlbmQgc2tpcCBhbmQgbGltaXQgdmFsdWVzXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBpbXBvcnQgY29udGVudHN0YWNrIGZyb20gJ0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrJ1xuICAgICAqXG4gICAgICogY29uc3Qgc3RhY2sgPSBjb250ZW50c3RhY2suU3RhY2soeyBhcGlLZXk6IFwiYXBpS2V5XCIsIGRlbGl2ZXJ5VG9rZW46IFwiZGVsaXZlcnlUb2tlblwiLCBlbnZpcm9ubWVudDogXCJlbnZpcm9ubWVudFwiIH0pO1xuICAgICAqIGNvbnN0IHF1ZXJ5ID0gc3RhY2suY29udGVudFR5cGUoXCJjb250ZW50VHlwZVVpZFwiKS5lbnRyeSgpLnF1ZXJ5KCk7XG4gICAgICpcbiAgICAgKiBpbnRlcmZhY2UgVEVudHJ5UHJvcHMge1xuICAgICAqICAgdWlkOiBzdHJpbmc7XG4gICAgICogICB0aXRsZTogc3RyaW5nO1xuICAgICAqICAgY3JlYXRlZF9hdDogc3RyaW5nO1xuICAgICAqICAgX3ZlcnNpb246IG51bWJlcjtcbiAgICAgKiAgIGxvY2FsZTogc3RyaW5nO1xuICAgICAqICAgY3JlYXRlZF9ieTogc3RyaW5nO1xuICAgICAqICAgdXJsOiBzdHJpbmc7XG4gICAgICogICAvLyBvdGhlciBwcm9wc1xuICAgICAqIH1cbiAgICAgKiBpbnRlcmZhY2UgVEVudHJpZXMge1xuICAgICAqICAgZW50cmllczogVEVudHJ5UHJvcHNbXTtcbiAgICAgKiB9XG4gICAgICogY29uc3QgcGFnZWRSZXN1bHQgPSBhd2FpdCBxdWVyeS5wYWdpbmF0ZSgpLmZpbmQ8VEVudHJpZXM+KCk7XG4gICAgICogT1JcbiAgICAgKiBjb25zdCBwYWdlT2JqID0gYXdhaXQgcXVlcnkucGFnaW5hdGUoeyBza2lwOiAxMCwgbGltaXQ6IDIwIH0pLmZpbmQ8VEVudHJpZXM+KCk7XG4gICAgICogQHJldHVybnMge1BhZ2luYXRpb259XG4gICAgICovXG4gICAgcGFnaW5hdGUocGFnaW5hdGlvbk9iaikge1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5za2lwID0gKHBhZ2luYXRpb25PYmogPT09IG51bGwgfHwgcGFnaW5hdGlvbk9iaiA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFnaW5hdGlvbk9iai5za2lwKSB8fCAwO1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5saW1pdCA9IChwYWdpbmF0aW9uT2JqID09PSBudWxsIHx8IHBhZ2luYXRpb25PYmogPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhZ2luYXRpb25PYmoubGltaXQpIHx8IDEwO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBuZXh0XG4gICAgICogQG1lbWJlcm9mIFBhZ2luYXRpb25cbiAgICAgKiBAZGVzY3JpcHRpb24gR28gdG8gbmV4dCBzZXQgb2YgcmVzcG9uc2UgdmFsdWVzIC0gc2tpcHMgdGhlIGN1cnJlbnQgbnVtIG9mIHJlc3BvbnNlcyBhbmQgc2hvd3MgbmV4dCByZXNwb25zZXNcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcXVlcnkgPSBzdGFjay5jb250ZW50VHlwZShcImNvbnRlbnRUeXBlVWlkXCIpLmVudHJ5KCkucXVlcnkoKTtcbiAgICAgKlxuICAgICAqIGludGVyZmFjZSBURW50cnlQcm9wcyB7XG4gICAgICogICB1aWQ6IHN0cmluZztcbiAgICAgKiAgIHRpdGxlOiBzdHJpbmc7XG4gICAgICogICBjcmVhdGVkX2F0OiBzdHJpbmc7XG4gICAgICogICBfdmVyc2lvbjogbnVtYmVyO1xuICAgICAqICAgbG9jYWxlOiBzdHJpbmc7XG4gICAgICogICBjcmVhdGVkX2J5OiBzdHJpbmc7XG4gICAgICogICB1cmw6IHN0cmluZztcbiAgICAgKiAgIC8vIG90aGVyIHByb3BzXG4gICAgICogfVxuICAgICAqIGludGVyZmFjZSBURW50cmllcyB7XG4gICAgICogICBlbnRyaWVzOiBURW50cnlQcm9wc1tdO1xuICAgICAqIH1cbiAgICAgKiBjb25zdCBwYWdlZFJlc3VsdCA9IGF3YWl0IHF1ZXJ5LnBhZ2luYXRlKCkuZmluZDxURW50cmllcz4oKTtcbiAgICAgKiBjb25zdCBuZXh0UGFnZVJlc3VsdCA9IGF3YWl0IHF1ZXJ5Lm5leHQoKS5maW5kPFRFbnRyaWVzPigpO1xuICAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgICovXG4gICAgbmV4dCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9xdWVyeVBhcmFtcy5za2lwKVxuICAgICAgICAgICAgdGhpcy5wYWdpbmF0ZSgpO1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5za2lwICs9IHRoaXMuX3F1ZXJ5UGFyYW1zLmxpbWl0O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBwcmV2aW91c1xuICAgICAqIEBtZW1iZXJvZiBQYWdpbmF0aW9uXG4gICAgICogQGRlc2NyaXB0aW9uIEdvIHRvIHByZXZpb3VzIHNldCBvZiByZXNwb25zZSB2YWx1ZXMgLSBza2lwcyB0aGUgY3VycmVudCBudW0gb2YgcmVzcG9uc2VzIGFuZCBzaG93cyBwcmV2aW91cyByZXNwb25zZXNcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGltcG9ydCBjb250ZW50c3RhY2sgZnJvbSAnQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsnXG4gICAgICpcbiAgICAgKiBjb25zdCBzdGFjayA9IGNvbnRlbnRzdGFjay5TdGFjayh7IGFwaUtleTogXCJhcGlLZXlcIiwgZGVsaXZlcnlUb2tlbjogXCJkZWxpdmVyeVRva2VuXCIsIGVudmlyb25tZW50OiBcImVudmlyb25tZW50XCIgfSk7XG4gICAgICogY29uc3QgcXVlcnkgPSBzdGFjay5jb250ZW50VHlwZShcImNvbnRlbnRUeXBlVWlkXCIpLmVudHJ5KCkucXVlcnkoKTtcbiAgICAgKlxuICAgICAqIGludGVyZmFjZSBURW50cnlQcm9wcyB7XG4gICAgICogICB1aWQ6IHN0cmluZztcbiAgICAgKiAgIHRpdGxlOiBzdHJpbmc7XG4gICAgICogICBjcmVhdGVkX2F0OiBzdHJpbmc7XG4gICAgICogICBfdmVyc2lvbjogbnVtYmVyO1xuICAgICAqICAgbG9jYWxlOiBzdHJpbmc7XG4gICAgICogICBjcmVhdGVkX2J5OiBzdHJpbmc7XG4gICAgICogICB1cmw6IHN0cmluZztcbiAgICAgKiAgIC8vIG90aGVyIHByb3BzXG4gICAgICogfVxuICAgICAqIGludGVyZmFjZSBURW50cmllcyB7XG4gICAgICogICBlbnRyaWVzOiBURW50cnlQcm9wc1tdO1xuICAgICAqIH1cbiAgICAgKiBjb25zdCBwYWdlZFJlc3VsdCA9IGF3YWl0IHF1ZXJ5LnBhZ2luYXRlKCkuZmluZDxURW50cmllcz4oKTtcbiAgICAgKiBjb25zdCBwcmV2UGFnZVJlc3VsdCA9IGF3YWl0IHF1ZXJ5LnByZXZpb3VzKCkuZmluZDxURW50cmllcz4oKTtcbiAgICAgKiBAcmV0dXJucyB7UGFnaW5hdGlvbn1cbiAgICAgKi9cbiAgICBwcmV2aW91cygpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9xdWVyeVBhcmFtcy5za2lwKVxuICAgICAgICAgICAgdGhpcy5wYWdpbmF0ZSgpO1xuICAgICAgICBjb25zdCBza2lwVmFsID0gdGhpcy5fcXVlcnlQYXJhbXMuc2tpcCAtIHRoaXMuX3F1ZXJ5UGFyYW1zLmxpbWl0O1xuICAgICAgICB0aGlzLl9xdWVyeVBhcmFtcy5za2lwID0gc2tpcFZhbCA8IDAgPyAwIDogc2tpcFZhbDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5QYWdpbmF0aW9uID0gUGFnaW5hdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2luYXRpb24uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUGFnaW5hdGlvbiIsImNvbnN0cnVjdG9yIiwiX3F1ZXJ5UGFyYW1zIiwicGFnaW5hdGUiLCJwYWdpbmF0aW9uT2JqIiwic2tpcCIsImxpbWl0IiwibmV4dCIsInByZXZpb3VzIiwic2tpcFZhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/pagination.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Query = void 0;\nconst base_query_1 = __webpack_require__(/*! ./base-query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/base-query.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\");\nclass Query extends base_query_1.BaseQuery {\n    constructor(client, params, queryParams, uid, queryObj){\n        super();\n        this._client = client;\n        this._contentTypeUid = uid;\n        this._urlPath = `/content_types/${this._contentTypeUid}/entries`;\n        this._parameters = params || {};\n        this._queryParams = queryParams || {};\n        if (queryObj) {\n            this._parameters = Object.assign(Object.assign({}, this._parameters), queryObj);\n        }\n    }\n    /**\n     * @method where\n     * @memberof Query\n     * @description Filters the results based on the specified criteria.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.where(\"field_UID\", QueryOperation.IS_LESS_THAN, [\"field1\", \"field2\"]).find()\n     * // OR\n     * const asset = await stack.asset().where(\"field_UID\", QueryOperation.IS_LESS_THAN, [\"field1\", \"field2\"]).find()\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.where(\"field_UID\", QueryOperation.MATCHES, [\"field1\", \"field2\"]).find()\n     * @returns {Query}\n     */ where(fieldUid, queryOperation, fields, additionalData) {\n        if (queryOperation == types_1.QueryOperation.EQUALS) {\n            this._parameters[fieldUid] = fields;\n        } else {\n            const parameterValue = Object.assign({\n                [queryOperation]: fields\n            }, additionalData);\n            this._parameters[fieldUid] = parameterValue;\n        }\n        return this;\n    }\n    /**\n     * @method regex\n     * @memberof Query\n     * @description Retrieve entries that match the provided regular expressions\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.regex('title','^Demo').find()\n     * // OR\n     * const result = await query..regex('title','^Demo', 'i').find() // regex with options\n     * @returns {Query}\n     */ regex(fieldUid, regexPattern, options) {\n        this._parameters[fieldUid] = {\n            $regex: regexPattern\n        };\n        if (options) this._parameters[fieldUid].$options = options;\n        return this;\n    }\n    /**\n     * @method whereIn\n     * @memberof Query\n     * @description Get entries having values based on referenced fields.\n     * The query retrieves all entries that satisfy the query conditions made on referenced fields\n     * This method sets the '$in_query' parameter to a reference field UID and a query instance in the API request.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * query.whereIn(\"brand\")\n     * const res = await query.find()\n     *\n     * @param {string} referenceUid - UID of the reference field to query.\n     * @param {Query} queryInstance - The Query instance to include in the where clause.\n     * @returns {Query} - Returns the Query instance for chaining.\n     */ whereIn(referenceUid, queryInstance) {\n        // eslint-disable-next-line @typescript-eslint/naming-convention, prettier/prettier\n        this._parameters[referenceUid] = {\n            \"$in_query\": queryInstance._parameters\n        };\n        return this;\n    }\n    /**\n     * @method whereNotIn\n     * @memberof Query\n     * @description Get entries having values based on referenced fields.\n     * This query works the opposite of $in_query and retrieves all entries that does not satisfy query conditions made on referenced fields.\n     * This method sets the '$nin_query' parameter to a reference field UID and a query instance in the API request.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * query.whereNotIn(\"brand\")\n     * const res = await query.find()\n     *\n     * @param {string} referenceUid - UID of the reference field to query.\n     * @param {Query} queryInstance - The Query instance to include in the where clause.\n     * @returns {Query} - Returns the Query instance for chaining.\n     */ whereNotIn(referenceUid, queryInstance) {\n        // eslint-disable-next-line @typescript-eslint/naming-convention, prettier/prettier\n        this._parameters[referenceUid] = {\n            \"$nin_query\": queryInstance._parameters\n        };\n        return this;\n    }\n    /**\n     * @method queryOperator\n     * @memberof Query\n     * @description In case of '$and' get entries that satisfy all the conditions provided in the '$and' query and\n     * in case of '$or' query get all entries that satisfy at least one of the given conditions provided in the '$or' query.\n     * @example\n     * const stack = contentstack.Stack(\"apiKey\", \"deliveryKey\", \"environment\");\n     * const query = stack.contentType(\"contentType1Uid\").entry().query();\n     * const subQuery1 = stack.contentType(\"contentType2Uid\").query().where(\"price\", QueryOperation.IS_LESS_THAN, fields=90);\n     * const subQuery2 = stack.contentType(\"contentType3Uid\").query().where(\"discount\", QueryOperation.INCLUDES, fields=[20, 45]);\n     * query.queryOperator(QueryOperator.AND, subQuery1, subQuery2)\n     * const res = await query.find()\n     *\n     * @param {QueryOperator} queryType - The type of query operator to apply.\n     * @param {...Query[]} queryObjects - The Query instances to apply the query to.\n     * @returns {Query} - Returns the Query instance for chaining.\n     */ queryOperator(queryType, ...queryObjects) {\n        const paramsList = [];\n        for (const queryItem of queryObjects){\n            paramsList.push(queryItem._parameters);\n        }\n        this._parameters[queryType] = paramsList;\n        return this;\n    }\n    /**\n     * @method getQuery\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.query({'brand': {'$nin_query': {'title': 'Apple Inc.'}}}).getQuery()\n     * // OR\n     * const asset = await stack.asset().query({'brand': {'$nin_query': {'title': 'Apple Inc.'}}}).getQuery()\n     *\n     * @returns {Query}\n     */ getQuery() {\n        return this._parameters;\n    }\n    /**\n     * @method containedIn\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.containedIn('fieldUid', ['value1', 'value2']).find()\n     *\n     * @returns {Query}\n     */ containedIn(key, value) {\n        this._parameters[key] = {\n            \"$in\": value\n        };\n        return this;\n    }\n    /**\n     * @method NoContainedIn\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.notContainedIn('fieldUid', ['value1', 'value2']).find()\n     *\n     * @returns {Query}\n     */ notContainedIn(key, value) {\n        this._parameters[key] = {\n            \"$nin\": value\n        };\n        return this;\n    }\n    /**\n     * @method exists\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.exists('fieldUid').find()\n     *\n     * @returns {Query}\n     */ exists(key) {\n        this._parameters[key] = {\n            \"$exists\": true\n        };\n        return this;\n    }\n    /**\n     * @method notExists\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType(\"contentTypeUid\").entry().query();\n     * const result = await query.notExists('fieldUid').find()\n     *\n     * @returns {Query}\n     */ notExists(key) {\n        this._parameters[key] = {\n            \"$exists\": false\n        };\n        return this;\n    }\n    /**\n     * @method or\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query1 = stack.contentType('contenttype_uid').Entry().query().containedIn('fieldUID', ['value']);\n     * const query2 = stack.contentType('contenttype_uid').Entry().query().where('fieldUID', QueryOperation.EQUALS, 'value2');\n     * const query = await stack.contentType('contenttype_uid').Entry().query().or(query1, query2).find();\n     *\n     * @returns {Query}\n     */ or(...queries) {\n        const paramsList = [];\n        for (const queryItem of queries){\n            paramsList.push(queryItem._parameters);\n        }\n        this._parameters.$or = paramsList;\n        return this;\n    }\n    /**\n     * @method and\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query1 = stack.contentType('contenttype_uid').Entry().query().containedIn('fieldUID', ['value']);\n     * const query2 = stack.contentType('contenttype_uid').Entry().query().where('fieldUID', QueryOperation.EQUALS, 'value2');\n     * const query = await stack.contentType('contenttype_uid').Entry().query().and(query1, query2).find();\n     *\n     * @returns {Query}\n     */ and(...queries) {\n        const paramsList = [];\n        for (const queryItem of queries){\n            paramsList.push(queryItem._parameters);\n        }\n        this._parameters.$and = paramsList;\n        return this;\n    }\n    /**\n     * @method equalTo\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = await stack.contentType('contenttype_uid').Entry().query().equalTo('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ equalTo(key, value) {\n        this._parameters[key] = value;\n        return this;\n    }\n    /**\n     * @method notEqualTo\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = await stack.contentType('contenttype_uid').Entry().query().notEqualTo('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ notEqualTo(key, value) {\n        this._parameters[key] = {\n            \"$ne\": value\n        };\n        return this;\n        ;\n    }\n    /**\n     * @method referenceIn\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().referenceIn('reference_uid', query).find();\n     *\n     * @returns {Query}\n     */ referenceIn(key, query) {\n        this._parameters[key] = {\n            \"$in_query\": query._parameters\n        };\n        return this;\n    }\n    /**\n     * @method referenceNotIn\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().referenceNotIn('reference_uid', query).find();\n     *\n     * @returns {Query}\n     */ referenceNotIn(key, query) {\n        this._parameters[key] = {\n            \"$nin_query\": query._parameters\n        };\n        return this;\n    }\n    /**\n     * @method tags\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().tags(['tag1']).find();\n     *\n     * @returns {Query}\n     */ tags(values) {\n        this._parameters[\"tags\"] = values;\n        return this;\n    }\n    /**\n     * @method search\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().search('key').find();\n     *\n     * @returns {Query}\n     */ search(key) {\n        this._queryParams[\"typeahead\"] = key;\n        return this;\n    }\n    /**\n     * @method lessThan\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().lessThan('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ lessThan(key, value) {\n        this._parameters[key] = {\n            \"$lt\": value\n        };\n        return this;\n    }\n    /**\n     * @method lessThanOrEqualTo\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().lessThanOrEqualTo('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ lessThanOrEqualTo(key, value) {\n        this._parameters[key] = {\n            \"$lte\": value\n        };\n        return this;\n    }\n    /**\n     * @method greaterThan\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().greaterThan('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ greaterThan(key, value) {\n        this._parameters[key] = {\n            \"$gt\": value\n        };\n        return this;\n    }\n    /**\n     * @method greaterThanOrEqualTo\n     * @memberof Query\n     * @description Returns the raw (JSON) query based on the filters applied on Query object.\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * const query = stack.contentType('contenttype_uid').query().where('title', QueryOperation.EQUALS, 'value');\n     * const entryQuery = await stack.contentType('contenttype_uid').query().greaterThanOrEqualTo('fieldUid', 'value').find();\n     *\n     * @returns {Query}\n     */ greaterThanOrEqualTo(key, value) {\n        this._parameters[key] = {\n            \"$gte\": value\n        };\n        return this;\n    }\n}\nexports.Query = Query; //# sourceMappingURL=query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/stack.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/stack.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Stack = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst asset_1 = __webpack_require__(/*! ./asset */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset.js\");\nconst asset_query_1 = __webpack_require__(/*! ./asset-query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/asset-query.js\");\nconst content_type_1 = __webpack_require__(/*! ./content-type */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/content-type.js\");\nconst contenttype_query_1 = __webpack_require__(/*! ./contenttype-query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/contenttype-query.js\");\nconst synchronization_1 = __webpack_require__(/*! ./synchronization */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/synchronization.js\");\nconst taxonomy_query_1 = __webpack_require__(/*! ./taxonomy-query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/taxonomy-query.js\");\nconst global_field_query_1 = __webpack_require__(/*! ./global-field-query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field-query.js\");\nconst global_field_1 = __webpack_require__(/*! ./global-field */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/global-field.js\");\nclass Stack {\n    constructor(client, config){\n        this._client = client;\n        this.config = config;\n    }\n    asset(uid) {\n        if (uid) return new asset_1.Asset(this._client, uid);\n        return new asset_query_1.AssetQuery(this._client);\n    }\n    contentType(uid) {\n        if (uid) return new content_type_1.ContentType(this._client, uid);\n        return new contenttype_query_1.ContentTypeQuery(this._client);\n    }\n    /**\n     * @method Taxonomy\n     * @memberOf Stack\n     * @description Sets the url to /taxonomies/entries. Pass a query to fetch entries with taxonomies\n     *\n     * @returns {TaxonomyQuery} * @example\n     * import contentstack from '@contentstack/typescript'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n  \n     * const taxonomy = stack.Taxonomy() // For taxonomy query object\n     */ taxonomy() {\n        return new taxonomy_query_1.TaxonomyQuery(this._client);\n    }\n    globalField(uid) {\n        if (uid) return new global_field_1.GlobalField(this._client, uid);\n        return new global_field_query_1.GlobalFieldQuery(this._client);\n    }\n    /**\n     * @method setLocale\n     * @memberOf Stack\n     * @description Sets the locale of the API server\n     * @param {String} locale - valid locale e.g. fr-fr\n     * @return {Stack}\n     * @example\n     * import contentstack from '@contentstack/delivery-sdk'\n     *\n     * const stack = contentstack.Stack({ apiKey: \"apiKey\", deliveryToken: \"deliveryToken\", environment: \"environment\" });\n     * stack.setLocale('en-155');\n     */ setLocale(locale) {\n        this.config.locale = locale;\n    }\n    /**\n     * @method sync\n     * @memberOf Stack\n     * @description Syncs your Contentstack data with your app and ensures that the data is always up-to-date by providing delta updates\n     * @param {object} params - params is an object that supports ‘locale’, ‘start_date’, ‘content_type_uid’, and ‘type’ queries.\n     * @example\n     * Stack.sync()        // For initializing sync\n     * @example\n     * Stack.sync({ 'locale': 'en-us'})     //For initializing sync with entries of a specific locale\n     * @example\n     * Stack.sync({ 'start_date': '2018-10-22'})    //For initializing sync with entries published after a specific date\n     * @example\n     * Stack.sync({ 'content_type_uid': 'session'})   //For initializing sync with entries of a specific content type\n     * @example\n     * Stack.sync({ 'type': 'entry_published'})\n     * //Use the type parameter to get a specific type of content. Supports'asset_published',\n     * // 'entry_published', 'asset_unpublished', 'entry_unpublished', 'asset_deleted', 'entry_deleted', 'content_type_deleted'.\n     * @example\n     * Stack.sync({'pagination_token': '<page_tkn>'})    // For fetching the next batch of entries using pagination token\n     * @example\n     * Stack.sync({'sync_token': '<sync_tkn>'})    // For performing subsequent sync after initial sync\n     * @instance\n     */ sync() {\n        return tslib_1.__awaiter(this, arguments, void 0, function*(params = {}, recursive = false) {\n            return yield (0, synchronization_1.synchronization)(this._client, params, recursive);\n        });\n    }\n    livePreviewQuery(query) {\n        if (this.config.live_preview) {\n            this.config.live_preview.live_preview = query.live_preview || \"init\";\n            this.config.live_preview.contentTypeUid = query.contentTypeUid;\n            this.config.live_preview.entryUid = query.entryUid;\n        }\n    }\n}\nexports.Stack = Stack; //# sourceMappingURL=stack.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/stack.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/synchronization.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/synchronization.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.synchronization = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\nconst core_1 = __webpack_require__(/*! @contentstack/core */ \"(rsc)/./node_modules/@contentstack/core/dist/cjs/src/index.js\");\nconst humps_1 = tslib_1.__importDefault(__webpack_require__(/*! humps */ \"(rsc)/./node_modules/humps/humps.js\"));\nfunction synchronization(client_1) {\n    return tslib_1.__awaiter(this, arguments, void 0, function*(client, params = {}, recursive = false) {\n        const config = {\n            params\n        };\n        if (!(\"paginationToken\" in params || \"syncToken\" in params)) {\n            // for every config except sync and pagination token\n            config.params = Object.assign(Object.assign({}, params), {\n                init: true\n            });\n        }\n        if (params.type && typeof params.type !== \"string\") {\n            const type = params.type;\n            config.params = Object.assign(Object.assign({}, config.params), {\n                type: type.join(\",\")\n            });\n        }\n        let response = yield (0, core_1.getData)(client, \"/sync\", humps_1.default.decamelizeKeys(config));\n        const data = response.data;\n        while(recursive && \"pagination_token\" in response.data){\n            const recResponse = yield (0, core_1.getData)(client, \"/sync\", humps_1.default.decamelizeKeys({\n                paginationToken: data.pagination_token\n            }));\n            recResponse.data.items = Object.assign(Object.assign({}, response.data.items), recResponse.data.items);\n            response = Object.assign({}, recResponse);\n        }\n        return response.data;\n    });\n}\nexports.synchronization = synchronization; //# sourceMappingURL=synchronization.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9zeW5jaHJvbml6YXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHVCQUF1QixHQUFHLEtBQUs7QUFDL0IsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsc0RBQU87QUFDL0IsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUMseUZBQW9CO0FBQzNDLE1BQU1FLFVBQVVILFFBQVFJLGVBQWUsQ0FBQ0gsbUJBQU9BLENBQUMsa0RBQU87QUFDdkQsU0FBU0YsZ0JBQWdCTSxRQUFRO0lBQzdCLE9BQU9MLFFBQVFNLFNBQVMsQ0FBQyxJQUFJLEVBQUVDLFdBQVcsS0FBSyxHQUFHLFVBQVdDLE1BQU0sRUFBRUMsU0FBUyxDQUFDLENBQUMsRUFBRUMsWUFBWSxLQUFLO1FBQy9GLE1BQU1DLFNBQVM7WUFBRUY7UUFBTztRQUN4QixJQUFJLENBQUUsc0JBQXFCQSxVQUFVLGVBQWVBLE1BQUssR0FBSTtZQUN6RCxvREFBb0Q7WUFDcERFLE9BQU9GLE1BQU0sR0FBR2QsT0FBT2lCLE1BQU0sQ0FBQ2pCLE9BQU9pQixNQUFNLENBQUMsQ0FBQyxHQUFHSCxTQUFTO2dCQUFFSSxNQUFNO1lBQUs7UUFDMUU7UUFDQSxJQUFJSixPQUFPSyxJQUFJLElBQUksT0FBT0wsT0FBT0ssSUFBSSxLQUFLLFVBQVU7WUFDaEQsTUFBTUEsT0FBT0wsT0FBT0ssSUFBSTtZQUN4QkgsT0FBT0YsTUFBTSxHQUFHZCxPQUFPaUIsTUFBTSxDQUFDakIsT0FBT2lCLE1BQU0sQ0FBQyxDQUFDLEdBQUdELE9BQU9GLE1BQU0sR0FBRztnQkFBRUssTUFBTUEsS0FBS0MsSUFBSSxDQUFDO1lBQUs7UUFDM0Y7UUFDQSxJQUFJQyxXQUFXLE1BQU0sQ0FBQyxHQUFHZCxPQUFPZSxPQUFPLEVBQUVULFFBQVEsU0FBU0wsUUFBUWUsT0FBTyxDQUFDQyxjQUFjLENBQUNSO1FBQ3pGLE1BQU1TLE9BQU9KLFNBQVNJLElBQUk7UUFDMUIsTUFBT1YsYUFBYSxzQkFBc0JNLFNBQVNJLElBQUksQ0FBRTtZQUNyRCxNQUFNQyxjQUFjLE1BQU0sQ0FBQyxHQUFHbkIsT0FBT2UsT0FBTyxFQUFFVCxRQUFRLFNBQVNMLFFBQVFlLE9BQU8sQ0FBQ0MsY0FBYyxDQUFDO2dCQUFFRyxpQkFBaUJGLEtBQUtHLGdCQUFnQjtZQUFDO1lBQ3ZJRixZQUFZRCxJQUFJLENBQUNJLEtBQUssR0FBRzdCLE9BQU9pQixNQUFNLENBQUNqQixPQUFPaUIsTUFBTSxDQUFDLENBQUMsR0FBR0ksU0FBU0ksSUFBSSxDQUFDSSxLQUFLLEdBQUdILFlBQVlELElBQUksQ0FBQ0ksS0FBSztZQUNyR1IsV0FBV3JCLE9BQU9pQixNQUFNLENBQUMsQ0FBQyxHQUFHUztRQUNqQztRQUNBLE9BQU9MLFNBQVNJLElBQUk7SUFDeEI7QUFDSjtBQUNBdkIsdUJBQXVCLEdBQUdFLGlCQUMxQiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi9zeW5jaHJvbml6YXRpb24uanM/ZWIyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc3luY2hyb25pemF0aW9uID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAY29udGVudHN0YWNrL2NvcmVcIik7XG5jb25zdCBodW1wc18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImh1bXBzXCIpKTtcbmZ1bmN0aW9uIHN5bmNocm9uaXphdGlvbihjbGllbnRfMSkge1xuICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCBhcmd1bWVudHMsIHZvaWQgMCwgZnVuY3Rpb24qIChjbGllbnQsIHBhcmFtcyA9IHt9LCByZWN1cnNpdmUgPSBmYWxzZSkge1xuICAgICAgICBjb25zdCBjb25maWcgPSB7IHBhcmFtcyB9O1xuICAgICAgICBpZiAoISgncGFnaW5hdGlvblRva2VuJyBpbiBwYXJhbXMgfHwgJ3N5bmNUb2tlbicgaW4gcGFyYW1zKSkge1xuICAgICAgICAgICAgLy8gZm9yIGV2ZXJ5IGNvbmZpZyBleGNlcHQgc3luYyBhbmQgcGFnaW5hdGlvbiB0b2tlblxuICAgICAgICAgICAgY29uZmlnLnBhcmFtcyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcGFyYW1zKSwgeyBpbml0OiB0cnVlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXJhbXMudHlwZSAmJiB0eXBlb2YgcGFyYW1zLnR5cGUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBjb25zdCB0eXBlID0gcGFyYW1zLnR5cGU7XG4gICAgICAgICAgICBjb25maWcucGFyYW1zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBjb25maWcucGFyYW1zKSwgeyB0eXBlOiB0eXBlLmpvaW4oJywnKSB9KTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcmVzcG9uc2UgPSB5aWVsZCAoMCwgY29yZV8xLmdldERhdGEpKGNsaWVudCwgJy9zeW5jJywgaHVtcHNfMS5kZWZhdWx0LmRlY2FtZWxpemVLZXlzKGNvbmZpZykpO1xuICAgICAgICBjb25zdCBkYXRhID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgd2hpbGUgKHJlY3Vyc2l2ZSAmJiAncGFnaW5hdGlvbl90b2tlbicgaW4gcmVzcG9uc2UuZGF0YSkge1xuICAgICAgICAgICAgY29uc3QgcmVjUmVzcG9uc2UgPSB5aWVsZCAoMCwgY29yZV8xLmdldERhdGEpKGNsaWVudCwgJy9zeW5jJywgaHVtcHNfMS5kZWZhdWx0LmRlY2FtZWxpemVLZXlzKHsgcGFnaW5hdGlvblRva2VuOiBkYXRhLnBhZ2luYXRpb25fdG9rZW4gfSkpO1xuICAgICAgICAgICAgcmVjUmVzcG9uc2UuZGF0YS5pdGVtcyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcmVzcG9uc2UuZGF0YS5pdGVtcyksIHJlY1Jlc3BvbnNlLmRhdGEuaXRlbXMpO1xuICAgICAgICAgICAgcmVzcG9uc2UgPSBPYmplY3QuYXNzaWduKHt9LCByZWNSZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgfSk7XG59XG5leHBvcnRzLnN5bmNocm9uaXphdGlvbiA9IHN5bmNocm9uaXphdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5bmNocm9uaXphdGlvbi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzeW5jaHJvbml6YXRpb24iLCJ0c2xpYl8xIiwicmVxdWlyZSIsImNvcmVfMSIsImh1bXBzXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJjbGllbnRfMSIsIl9fYXdhaXRlciIsImFyZ3VtZW50cyIsImNsaWVudCIsInBhcmFtcyIsInJlY3Vyc2l2ZSIsImNvbmZpZyIsImFzc2lnbiIsImluaXQiLCJ0eXBlIiwiam9pbiIsInJlc3BvbnNlIiwiZ2V0RGF0YSIsImRlZmF1bHQiLCJkZWNhbWVsaXplS2V5cyIsImRhdGEiLCJyZWNSZXNwb25zZSIsInBhZ2luYXRpb25Ub2tlbiIsInBhZ2luYXRpb25fdG9rZW4iLCJpdGVtcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/synchronization.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/taxonomy-query.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/taxonomy-query.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TaxonomyQuery = void 0;\nconst query_1 = __webpack_require__(/*! ./query */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/query.js\");\nclass TaxonomyQuery extends query_1.Query {\n    constructor(client){\n        super(client, {}, {}); // will need make changes to Query class so that CT uid is not mandatory\n        this._client = client;\n        this._urlPath = `/taxonomies/entries`;\n    }\n}\nexports.TaxonomyQuery = TaxonomyQuery;\n; //# sourceMappingURL=taxonomy-query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi90YXhvbm9teS1xdWVyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUcsS0FBSztBQUM3QixNQUFNRyxVQUFVQyxtQkFBT0EsQ0FBQywwRkFBUztBQUNqQyxNQUFNRixzQkFBc0JDLFFBQVFFLEtBQUs7SUFDckNDLFlBQVlDLE1BQU0sQ0FBRTtRQUNoQixLQUFLLENBQUNBLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSx3RUFBd0U7UUFDL0YsSUFBSSxDQUFDQyxPQUFPLEdBQUdEO1FBQ2YsSUFBSSxDQUFDRSxRQUFRLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQztJQUN6QztBQUNKO0FBQ0FULHFCQUFxQixHQUFHRTtFQUV4QiwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi90YXhvbm9teS1xdWVyeS5qcz84ZjE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UYXhvbm9teVF1ZXJ5ID0gdm9pZCAwO1xuY29uc3QgcXVlcnlfMSA9IHJlcXVpcmUoXCIuL3F1ZXJ5XCIpO1xuY2xhc3MgVGF4b25vbXlRdWVyeSBleHRlbmRzIHF1ZXJ5XzEuUXVlcnkge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgICAgICBzdXBlcihjbGllbnQsIHt9LCB7fSk7IC8vIHdpbGwgbmVlZCBtYWtlIGNoYW5nZXMgdG8gUXVlcnkgY2xhc3Mgc28gdGhhdCBDVCB1aWQgaXMgbm90IG1hbmRhdG9yeVxuICAgICAgICB0aGlzLl9jbGllbnQgPSBjbGllbnQ7XG4gICAgICAgIHRoaXMuX3VybFBhdGggPSBgL3RheG9ub21pZXMvZW50cmllc2A7XG4gICAgfVxufVxuZXhwb3J0cy5UYXhvbm9teVF1ZXJ5ID0gVGF4b25vbXlRdWVyeTtcbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRheG9ub215LXF1ZXJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlRheG9ub215UXVlcnkiLCJxdWVyeV8xIiwicmVxdWlyZSIsIlF1ZXJ5IiwiY29uc3RydWN0b3IiLCJjbGllbnQiLCJfY2xpZW50IiwiX3VybFBhdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/taxonomy-query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.QueryOperator = exports.TaxonomyQueryOperation = exports.QueryOperation = exports.CanvasBy = exports.ResizeFilter = exports.OverlayRepeat = exports.OverlayAlign = exports.Orientation = exports.FitBy = exports.CropBy = exports.Format = exports.PublishType = exports.Policy = exports.Region = void 0;\nvar Region;\n(function(Region) {\n    Region[\"US\"] = \"us\";\n    Region[\"EU\"] = \"eu\";\n    Region[\"AZURE_NA\"] = \"azure-na\";\n    Region[\"AZURE_EU\"] = \"azure-eu\";\n    Region[\"GCP_NA\"] = \"gcp-na\";\n})(Region || (exports.Region = Region = {}));\nvar Policy;\n(function(Policy) {\n    Policy[\"IGNORE_CACHE\"] = \"IGNORE_CACHE\";\n    Policy[\"CACHE_THEN_NETWORK\"] = \"CACHE_THEN_NETWORK\";\n    Policy[\"CACHE_ELSE_NETWORK\"] = \"CACHE_ELSE_NETWORK\";\n    Policy[\"NETWORK_ELSE_CACHE\"] = \"NETWORK_ELSE_CACHE\";\n})(Policy || (exports.Policy = Policy = {}));\nvar PublishType;\n(function(PublishType) {\n    PublishType[\"ENTRY_PUBLISHED\"] = \"entry_published\";\n    PublishType[\"ENTRY_UNPUBLISHED\"] = \"entry_unpublished\";\n    PublishType[\"ENTRY_DELETED\"] = \"entry_deleted\";\n    PublishType[\"ASSET_PUBLISHED\"] = \"asset_published\";\n    PublishType[\"ASSET_UNPUBLISHED\"] = \"asset_unpublished\";\n    PublishType[\"ASSET_DELETED\"] = \"asset_deleted\";\n    PublishType[\"CONTENT_TYPE_DELETED\"] = \"content_type_deleted\";\n})(PublishType || (exports.PublishType = PublishType = {}));\nvar Format;\n(function(Format) {\n    Format[\"GIF\"] = \"gif\";\n    Format[\"PNG\"] = \"png\";\n    Format[\"JPG\"] = \"jpg\";\n    Format[\"PJPG\"] = \"pjpg\";\n    Format[\"WEBP\"] = \"webp\";\n    Format[\"WEBPLL\"] = \"webpll\";\n    Format[\"WEBPLY\"] = \"webply\";\n})(Format || (exports.Format = Format = {}));\nvar CropBy;\n(function(CropBy) {\n    CropBy[\"DEFAULT\"] = \"default\";\n    CropBy[\"ASPECTRATIO\"] = \"aspectRatio\";\n    CropBy[\"REGION\"] = \"region\";\n    CropBy[\"OFFSET\"] = \"offset\";\n})(CropBy || (exports.CropBy = CropBy = {}));\nvar FitBy;\n(function(FitBy) {\n    FitBy[\"BOUNDS\"] = \"bounds\";\n    FitBy[\"CROP\"] = \"crop\";\n})(FitBy || (exports.FitBy = FitBy = {}));\nvar Orientation;\n(function(Orientation) {\n    Orientation[Orientation[\"DEFAULT\"] = 1] = \"DEFAULT\";\n    Orientation[Orientation[\"FLIP_HORIZONTAL\"] = 2] = \"FLIP_HORIZONTAL\";\n    Orientation[Orientation[\"FLIP_HORIZONTAL_VERTICAL\"] = 3] = \"FLIP_HORIZONTAL_VERTICAL\";\n    Orientation[Orientation[\"FLIP_VERTICAL\"] = 4] = \"FLIP_VERTICAL\";\n    Orientation[Orientation[\"FLIP_HORIZONTAL_LEFT\"] = 5] = \"FLIP_HORIZONTAL_LEFT\";\n    Orientation[Orientation[\"RIGHT\"] = 6] = \"RIGHT\";\n    Orientation[Orientation[\"FLIP_HORIZONTAL_RIGHT\"] = 7] = \"FLIP_HORIZONTAL_RIGHT\";\n    Orientation[Orientation[\"LEFT\"] = 8] = \"LEFT\";\n})(Orientation || (exports.Orientation = Orientation = {}));\nvar OverlayAlign;\n(function(OverlayAlign) {\n    OverlayAlign[\"TOP\"] = \"top\";\n    OverlayAlign[\"BOTTOM\"] = \"bottom\";\n    OverlayAlign[\"LEFT\"] = \"left\";\n    OverlayAlign[\"RIGHT\"] = \"right\";\n    OverlayAlign[\"MIDDLE\"] = \"middle\";\n    OverlayAlign[\"CENTER\"] = \"center\";\n})(OverlayAlign || (exports.OverlayAlign = OverlayAlign = {}));\nvar OverlayRepeat;\n(function(OverlayRepeat) {\n    OverlayRepeat[\"X\"] = \"x\";\n    OverlayRepeat[\"Y\"] = \"y\";\n    OverlayRepeat[\"BOTH\"] = \"both\";\n})(OverlayRepeat || (exports.OverlayRepeat = OverlayRepeat = {}));\nvar ResizeFilter;\n(function(ResizeFilter) {\n    ResizeFilter[\"NEAREST\"] = \"nearest\";\n    ResizeFilter[\"BILINEAR\"] = \"bilinear\";\n    ResizeFilter[\"BICUBIC\"] = \"bicubic\";\n    ResizeFilter[\"LANCZOS2\"] = \"lanczos2\";\n    ResizeFilter[\"LANCZOS3\"] = \"lanczos3\";\n})(ResizeFilter || (exports.ResizeFilter = ResizeFilter = {}));\nvar CanvasBy;\n(function(CanvasBy) {\n    CanvasBy[\"DEFAULT\"] = \"default\";\n    CanvasBy[\"ASPECTRATIO\"] = \"aspectRatio\";\n    CanvasBy[\"REGION\"] = \"region\";\n    CanvasBy[\"OFFSET\"] = \"offset\";\n})(CanvasBy || (exports.CanvasBy = CanvasBy = {}));\nvar QueryOperation;\n(function(QueryOperation) {\n    QueryOperation[\"EQUALS\"] = \"\";\n    QueryOperation[\"NOT_EQUALS\"] = \"$ne\";\n    QueryOperation[\"INCLUDES\"] = \"$in\";\n    QueryOperation[\"EXCLUDES\"] = \"$nin\";\n    QueryOperation[\"IS_LESS_THAN\"] = \"$lt\";\n    QueryOperation[\"IS_LESS_THAN_OR_EQUAL\"] = \"$lte\";\n    QueryOperation[\"IS_GREATER_THAN\"] = \"$gt\";\n    QueryOperation[\"IS_GREATER_THAN_OR_EQUAL\"] = \"$gte\";\n    QueryOperation[\"EXISTS\"] = \"$exists\";\n    QueryOperation[\"MATCHES\"] = \"$regex\";\n})(QueryOperation || (exports.QueryOperation = QueryOperation = {}));\nvar TaxonomyQueryOperation;\n(function(TaxonomyQueryOperation) {\n    TaxonomyQueryOperation[\"ABOVE\"] = \"$above\";\n    TaxonomyQueryOperation[\"BELOW\"] = \"$below\";\n    TaxonomyQueryOperation[\"EQ_ABOVE\"] = \"$eq_above\";\n    TaxonomyQueryOperation[\"EQ_BELOW\"] = \"$eq_below\";\n})(TaxonomyQueryOperation || (exports.TaxonomyQueryOperation = TaxonomyQueryOperation = {}));\nvar QueryOperator;\n(function(QueryOperator) {\n    QueryOperator[\"AND\"] = \"$and\";\n    QueryOperator[\"OR\"] = \"$or\";\n})(QueryOperator || (exports.QueryOperator = QueryOperator = {})); //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/utils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/utils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getHost = void 0;\nconst types_1 = __webpack_require__(/*! ./types */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/types.js\");\nfunction getHost(region = types_1.Region.US, host) {\n    if (host) return host;\n    let url = \"cdn.contentstack.io\";\n    if (region !== types_1.Region.US) {\n        url = region.toString().toLowerCase() + \"-cdn.contentstack.com\";\n    }\n    return url;\n}\nexports.getHost = getHost; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHLEtBQUs7QUFDdkIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsMEZBQVM7QUFDakMsU0FBU0YsUUFBUUcsU0FBU0YsUUFBUUcsTUFBTSxDQUFDQyxFQUFFLEVBQUVDLElBQUk7SUFDN0MsSUFBSUEsTUFDQSxPQUFPQTtJQUNYLElBQUlDLE1BQU07SUFDVixJQUFJSixXQUFXRixRQUFRRyxNQUFNLENBQUNDLEVBQUUsRUFBRTtRQUM5QkUsTUFBTUosT0FBT0ssUUFBUSxHQUFHQyxXQUFXLEtBQUs7SUFDNUM7SUFDQSxPQUFPRjtBQUNYO0FBQ0FULGVBQWUsR0FBR0UsU0FDbEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9saWIvdXRpbHMuanM/Y2FhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SG9zdCA9IHZvaWQgMDtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmZ1bmN0aW9uIGdldEhvc3QocmVnaW9uID0gdHlwZXNfMS5SZWdpb24uVVMsIGhvc3QpIHtcbiAgICBpZiAoaG9zdClcbiAgICAgICAgcmV0dXJuIGhvc3Q7XG4gICAgbGV0IHVybCA9ICdjZG4uY29udGVudHN0YWNrLmlvJztcbiAgICBpZiAocmVnaW9uICE9PSB0eXBlc18xLlJlZ2lvbi5VUykge1xuICAgICAgICB1cmwgPSByZWdpb24udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpICsgJy1jZG4uY29udGVudHN0YWNrLmNvbSc7XG4gICAgfVxuICAgIHJldHVybiB1cmw7XG59XG5leHBvcnRzLmdldEhvc3QgPSBnZXRIb3N0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0SG9zdCIsInR5cGVzXzEiLCJyZXF1aXJlIiwicmVnaW9uIiwiUmVnaW9uIiwiVVMiLCJob3N0IiwidXJsIiwidG9TdHJpbmciLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/lib/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/config/persistance-storage-config.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/config/persistance-storage-config.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=persistance-storage-config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2NvbmZpZy9wZXJzaXN0YW5jZS1zdG9yYWdlLWNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxzREFBc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2NvbmZpZy9wZXJzaXN0YW5jZS1zdG9yYWdlLWNvbmZpZy5qcz85YTUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGVyc2lzdGFuY2Utc3RvcmFnZS1jb25maWcuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/config/persistance-storage-config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/helper/utils.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/helper/utils.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.iGlobal = void 0;\nexports.iGlobal =  false ? 0 : global; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2hlbHBlci91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHLEtBQUs7QUFDdkJBLGVBQWUsR0FBRyxNQUFrQixHQUFjRyxDQUFNQSxHQUFHQyxRQUMzRCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2hlbHBlci91dGlscy5qcz8wMmQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pR2xvYmFsID0gdm9pZCAwO1xuZXhwb3J0cy5pR2xvYmFsID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBnbG9iYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpR2xvYmFsIiwid2luZG93IiwiZ2xvYmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/helper/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./storages */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./config/persistance-storage-config */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/config/persistance-storage-config.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./persistance-store */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/persistance-store.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLHNEQUFPO0FBQy9CRCxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLHdHQUFTLEdBQUdIO0FBQ3pDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLDhHQUFZLEdBQUdIO0FBQzVDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLDBKQUFxQyxHQUFHSDtBQUNyRUUsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywwSEFBcUIsR0FBR0gsVUFDckQsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9wZXJzaXN0YW5jZS9pbmRleC5qcz9mNmM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3N0b3JhZ2VzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbmZpZy9wZXJzaXN0YW5jZS1zdG9yYWdlLWNvbmZpZ1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wZXJzaXN0YW5jZS1zdG9yZVwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/persistance-store.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/persistance-store.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.PersistanceStore = void 0;\nconst local_storage_1 = __webpack_require__(/*! ./storages/local-storage */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js\");\nconst memory_storage_1 = __webpack_require__(/*! ./storages/memory-storage */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js\");\nclass PersistanceStore {\n    constructor(config){\n        this.store = local_storage_1.localStorage;\n        let defaultConfig = {\n            storageType: \"localStorage\",\n            maxAge: 1000 * 60 * 60 * 24,\n            serializer: JSON.stringify,\n            deserializer: JSON.parse\n        };\n        defaultConfig = Object.assign(Object.assign({}, defaultConfig), config);\n        this.setStore(defaultConfig.storageType, defaultConfig.storage);\n        this.config = defaultConfig;\n        this.name = \"\"; // TODO add stack api key to name\n    }\n    setStore(type, store) {\n        switch(type){\n            case \"localStorage\":\n                break;\n            case \"memoryStorage\":\n                this.store = memory_storage_1.memoryStorage;\n                break;\n            case \"customStorage\":\n                if (!store) {\n                    throw new TypeError(\"StorageType `customStorage` should have `storage`.\");\n                } else {\n                    this.store = store;\n                }\n                break;\n        }\n    }\n    setItem(key, value, contentTypeUid, maxAge) {\n        if (!key) {\n            return;\n        }\n        const generatedKey = this.generateCSKey(key, contentTypeUid);\n        if (!value) {\n            this.store.removeItem(generatedKey);\n            return;\n        }\n        const expiry = this.calculateExpiry(maxAge);\n        let content = {\n            value,\n            expiry\n        };\n        if (this.config.serializer) {\n            content = this.config.serializer(content);\n        }\n        this.store.setItem(generatedKey, content);\n    }\n    getItem(key, contentTypeUid) {\n        const generatedKey = this.generateCSKey(key, contentTypeUid);\n        const content = this.store.getItem(generatedKey);\n        if (content) {\n            if (this.config.deserializer) {\n                const item = this.config.deserializer(content);\n                if (!this.isExpire(item.expiry)) {\n                    return item.value;\n                } else {\n                    this.removeItem(key, contentTypeUid);\n                }\n            }\n        }\n    }\n    removeItem(key, contentTypeUid) {\n        const generatedKey = this.generateCSKey(key, contentTypeUid);\n        this.store.removeItem(generatedKey);\n    }\n    clear(contentTypeUid) {\n        if (!contentTypeUid) {\n            this.store.clear();\n        } else {\n            this.store.each((_, key)=>{\n                if (key.match(contentTypeUid)) {\n                    this.store.removeItem(key);\n                }\n            });\n        }\n    }\n    generateCSKey(key, contentTypeUid) {\n        let keyPrefix = \"cs_store_js\";\n        if (contentTypeUid) {\n            keyPrefix = contentTypeUid + \"_\" + keyPrefix;\n        }\n        keyPrefix = this.name + \"_\" + keyPrefix + \"_\" + key;\n        return keyPrefix;\n    }\n    calculateExpiry(maxAge) {\n        const now = new Date();\n        const nowMSec = now.getTime();\n        if (maxAge) {\n            return nowMSec + maxAge;\n        } else if (this.config.maxAge) {\n            return nowMSec + this.config.maxAge;\n        }\n        return 0;\n    }\n    isExpire(dateTime) {\n        if (dateTime) {\n            return dateTime < new Date().getTime();\n        }\n        return true;\n    }\n}\nexports.PersistanceStore = PersistanceStore; //# sourceMappingURL=persistance-store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/persistance-store.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.memoryStorage = exports.localStorage = void 0;\nvar local_storage_1 = __webpack_require__(/*! ./local-storage */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js\");\nObject.defineProperty(exports, \"localStorage\", ({\n    enumerable: true,\n    get: function() {\n        return local_storage_1.localStorage;\n    }\n}));\nvar memory_storage_1 = __webpack_require__(/*! ./memory-storage */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js\");\nObject.defineProperty(exports, \"memoryStorage\", ({\n    enumerable: true,\n    get: function() {\n        return memory_storage_1.memoryStorage;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3N0b3JhZ2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxQkFBcUIsR0FBR0Esb0JBQW9CLEdBQUcsS0FBSztBQUNwRCxJQUFJSSxrQkFBa0JDLG1CQUFPQSxDQUFDLDJIQUFpQjtBQUMvQ1AsZ0RBQStDO0lBQUVRLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9ILGdCQUFnQkQsWUFBWTtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQy9ILElBQUlLLG1CQUFtQkgsbUJBQU9BLENBQUMsNkhBQWtCO0FBQ2pEUCxpREFBZ0Q7SUFBRVEsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0MsaUJBQWlCTixhQUFhO0lBQUU7QUFBRSxDQUFDLEVBQUMsRUFDbEksaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pdmVyc2FsLWRlbW8tYXBwLy4vbm9kZV9tb2R1bGVzL0Bjb250ZW50c3RhY2svZGVsaXZlcnktc2RrL2Rpc3QvY2pzL3NyYy9wZXJzaXN0YW5jZS9zdG9yYWdlcy9pbmRleC5qcz8wYmU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tZW1vcnlTdG9yYWdlID0gZXhwb3J0cy5sb2NhbFN0b3JhZ2UgPSB2b2lkIDA7XG52YXIgbG9jYWxfc3RvcmFnZV8xID0gcmVxdWlyZShcIi4vbG9jYWwtc3RvcmFnZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImxvY2FsU3RvcmFnZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9jYWxfc3RvcmFnZV8xLmxvY2FsU3RvcmFnZTsgfSB9KTtcbnZhciBtZW1vcnlfc3RvcmFnZV8xID0gcmVxdWlyZShcIi4vbWVtb3J5LXN0b3JhZ2VcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJtZW1vcnlTdG9yYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtZW1vcnlfc3RvcmFnZV8xLm1lbW9yeVN0b3JhZ2U7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtZW1vcnlTdG9yYWdlIiwibG9jYWxTdG9yYWdlIiwibG9jYWxfc3RvcmFnZV8xIiwicmVxdWlyZSIsImVudW1lcmFibGUiLCJnZXQiLCJtZW1vcnlfc3RvcmFnZV8xIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.localStorage = void 0;\nconst utils_1 = __webpack_require__(/*! ../helper/utils */ \"(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/helper/utils.js\");\nexports.localStorage = {\n    name: \"localStorage\",\n    clear: clear,\n    each: each,\n    getItem: getItem,\n    removeItem: removeItem,\n    setItem: setItem\n};\nfunction _localStorage() {\n    return utils_1.iGlobal.localStorage;\n}\nfunction clear() {\n    _localStorage().clear();\n}\nfunction each(callback) {\n    for(let i = _localStorage().length - 1; i >= 0; i--){\n        const key = _localStorage().key(i);\n        if (key && getItem(key)) {\n            const value = getItem(key);\n            callback(value, key);\n        }\n    }\n}\nfunction setItem(key, value) {\n    if (!key) {\n        return;\n    }\n    _localStorage().setItem(key, value);\n}\nfunction getItem(key) {\n    return _localStorage().getItem(key);\n}\nfunction removeItem(key) {\n    _localStorage().removeItem(key);\n} //# sourceMappingURL=local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3N0b3JhZ2VzL2xvY2FsLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQixHQUFHLEtBQUs7QUFDNUIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsaUhBQWlCO0FBQ3pDSixvQkFBb0IsR0FBRztJQUNuQkssTUFBTTtJQUNOQyxPQUFPQTtJQUNQQyxNQUFNQTtJQUNOQyxTQUFTQTtJQUNUQyxZQUFZQTtJQUNaQyxTQUFTQTtBQUNiO0FBQ0EsU0FBU0M7SUFDTCxPQUFPUixRQUFRUyxPQUFPLENBQUNWLFlBQVk7QUFDdkM7QUFDQSxTQUFTSTtJQUNMSyxnQkFBZ0JMLEtBQUs7QUFDekI7QUFDQSxTQUFTQyxLQUFLTSxRQUFRO0lBQ2xCLElBQUssSUFBSUMsSUFBSUgsZ0JBQWdCSSxNQUFNLEdBQUcsR0FBR0QsS0FBSyxHQUFHQSxJQUFLO1FBQ2xELE1BQU1FLE1BQU1MLGdCQUFnQkssR0FBRyxDQUFDRjtRQUNoQyxJQUFJRSxPQUFPUixRQUFRUSxNQUFNO1lBQ3JCLE1BQU1mLFFBQVFPLFFBQVFRO1lBQ3RCSCxTQUFTWixPQUFPZTtRQUNwQjtJQUNKO0FBQ0o7QUFDQSxTQUFTTixRQUFRTSxHQUFHLEVBQUVmLEtBQUs7SUFDdkIsSUFBSSxDQUFDZSxLQUFLO1FBQ047SUFDSjtJQUNBTCxnQkFBZ0JELE9BQU8sQ0FBQ00sS0FBS2Y7QUFDakM7QUFDQSxTQUFTTyxRQUFRUSxHQUFHO0lBQ2hCLE9BQU9MLGdCQUFnQkgsT0FBTyxDQUFDUTtBQUNuQztBQUNBLFNBQVNQLFdBQVdPLEdBQUc7SUFDbkJMLGdCQUFnQkYsVUFBVSxDQUFDTztBQUMvQixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvcGVyc2lzdGFuY2Uvc3RvcmFnZXMvbG9jYWwtc3RvcmFnZS5qcz9jNTUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5sb2NhbFN0b3JhZ2UgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4uL2hlbHBlci91dGlsc1wiKTtcbmV4cG9ydHMubG9jYWxTdG9yYWdlID0ge1xuICAgIG5hbWU6ICdsb2NhbFN0b3JhZ2UnLFxuICAgIGNsZWFyOiBjbGVhcixcbiAgICBlYWNoOiBlYWNoLFxuICAgIGdldEl0ZW06IGdldEl0ZW0sXG4gICAgcmVtb3ZlSXRlbTogcmVtb3ZlSXRlbSxcbiAgICBzZXRJdGVtOiBzZXRJdGVtLFxufTtcbmZ1bmN0aW9uIF9sb2NhbFN0b3JhZ2UoKSB7XG4gICAgcmV0dXJuIHV0aWxzXzEuaUdsb2JhbC5sb2NhbFN0b3JhZ2U7XG59XG5mdW5jdGlvbiBjbGVhcigpIHtcbiAgICBfbG9jYWxTdG9yYWdlKCkuY2xlYXIoKTtcbn1cbmZ1bmN0aW9uIGVhY2goY2FsbGJhY2spIHtcbiAgICBmb3IgKGxldCBpID0gX2xvY2FsU3RvcmFnZSgpLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIGNvbnN0IGtleSA9IF9sb2NhbFN0b3JhZ2UoKS5rZXkoaSk7XG4gICAgICAgIGlmIChrZXkgJiYgZ2V0SXRlbShrZXkpKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGdldEl0ZW0oa2V5KTtcbiAgICAgICAgICAgIGNhbGxiYWNrKHZhbHVlLCBrZXkpO1xuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24gc2V0SXRlbShrZXksIHZhbHVlKSB7XG4gICAgaWYgKCFrZXkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBfbG9jYWxTdG9yYWdlKCkuc2V0SXRlbShrZXksIHZhbHVlKTtcbn1cbmZ1bmN0aW9uIGdldEl0ZW0oa2V5KSB7XG4gICAgcmV0dXJuIF9sb2NhbFN0b3JhZ2UoKS5nZXRJdGVtKGtleSk7XG59XG5mdW5jdGlvbiByZW1vdmVJdGVtKGtleSkge1xuICAgIF9sb2NhbFN0b3JhZ2UoKS5yZW1vdmVJdGVtKGtleSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2NhbC1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImxvY2FsU3RvcmFnZSIsInV0aWxzXzEiLCJyZXF1aXJlIiwibmFtZSIsImNsZWFyIiwiZWFjaCIsImdldEl0ZW0iLCJyZW1vdmVJdGVtIiwic2V0SXRlbSIsIl9sb2NhbFN0b3JhZ2UiLCJpR2xvYmFsIiwiY2FsbGJhY2siLCJpIiwibGVuZ3RoIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/local-storage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.memoryStorage = void 0;\nexports.memoryStorage = {\n    name: \"memoryStorage\",\n    clear: clear,\n    each: each,\n    getItem: getItem,\n    removeItem: removeItem,\n    setItem: setItem\n};\nlet memory = {};\nfunction clear() {\n    memory = {};\n}\nfunction each(callback) {\n    for(const key in memory){\n        const value = getItem(key);\n        callback(value, key);\n    }\n}\nfunction setItem(key, value) {\n    if (!key) {\n        return;\n    }\n    memory[key] = value;\n}\nfunction getItem(key) {\n    return memory[key];\n}\nfunction removeItem(key) {\n    delete memory[key];\n} //# sourceMappingURL=memory-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3N0b3JhZ2VzL21lbW9yeS1zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxQkFBcUIsR0FBRyxLQUFLO0FBQzdCQSxxQkFBcUIsR0FBRztJQUNwQkcsTUFBTTtJQUNOQyxPQUFPQTtJQUNQQyxNQUFNQTtJQUNOQyxTQUFTQTtJQUNUQyxZQUFZQTtJQUNaQyxTQUFTQTtBQUNiO0FBQ0EsSUFBSUMsU0FBUyxDQUFDO0FBQ2QsU0FBU0w7SUFDTEssU0FBUyxDQUFDO0FBQ2Q7QUFDQSxTQUFTSixLQUFLSyxRQUFRO0lBQ2xCLElBQUssTUFBTUMsT0FBT0YsT0FBUTtRQUN0QixNQUFNUixRQUFRSyxRQUFRSztRQUN0QkQsU0FBU1QsT0FBT1U7SUFDcEI7QUFDSjtBQUNBLFNBQVNILFFBQVFHLEdBQUcsRUFBRVYsS0FBSztJQUN2QixJQUFJLENBQUNVLEtBQUs7UUFDTjtJQUNKO0lBQ0FGLE1BQU0sQ0FBQ0UsSUFBSSxHQUFHVjtBQUNsQjtBQUNBLFNBQVNLLFFBQVFLLEdBQUc7SUFDaEIsT0FBT0YsTUFBTSxDQUFDRSxJQUFJO0FBQ3RCO0FBQ0EsU0FBU0osV0FBV0ksR0FBRztJQUNuQixPQUFPRixNQUFNLENBQUNFLElBQUk7QUFDdEIsRUFDQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bml2ZXJzYWwtZGVtby1hcHAvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3N0b3JhZ2VzL21lbW9yeS1zdG9yYWdlLmpzPzc4N2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lbW9yeVN0b3JhZ2UgPSB2b2lkIDA7XG5leHBvcnRzLm1lbW9yeVN0b3JhZ2UgPSB7XG4gICAgbmFtZTogJ21lbW9yeVN0b3JhZ2UnLFxuICAgIGNsZWFyOiBjbGVhcixcbiAgICBlYWNoOiBlYWNoLFxuICAgIGdldEl0ZW06IGdldEl0ZW0sXG4gICAgcmVtb3ZlSXRlbTogcmVtb3ZlSXRlbSxcbiAgICBzZXRJdGVtOiBzZXRJdGVtLFxufTtcbmxldCBtZW1vcnkgPSB7fTtcbmZ1bmN0aW9uIGNsZWFyKCkge1xuICAgIG1lbW9yeSA9IHt9O1xufVxuZnVuY3Rpb24gZWFjaChjYWxsYmFjaykge1xuICAgIGZvciAoY29uc3Qga2V5IGluIG1lbW9yeSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGdldEl0ZW0oa2V5KTtcbiAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSk7XG4gICAgfVxufVxuZnVuY3Rpb24gc2V0SXRlbShrZXksIHZhbHVlKSB7XG4gICAgaWYgKCFrZXkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBtZW1vcnlba2V5XSA9IHZhbHVlO1xufVxuZnVuY3Rpb24gZ2V0SXRlbShrZXkpIHtcbiAgICByZXR1cm4gbWVtb3J5W2tleV07XG59XG5mdW5jdGlvbiByZW1vdmVJdGVtKGtleSkge1xuICAgIGRlbGV0ZSBtZW1vcnlba2V5XTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lbW9yeS1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1lbW9yeVN0b3JhZ2UiLCJuYW1lIiwiY2xlYXIiLCJlYWNoIiwiZ2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJzZXRJdGVtIiwibWVtb3J5IiwiY2FsbGJhY2siLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/storages/memory-storage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/types/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/types/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvbnRlbnRzdGFjay9kZWxpdmVyeS1zZGsvZGlzdC9janMvc3JjL3BlcnNpc3RhbmNlL3R5cGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXZlcnNhbC1kZW1vLWFwcC8uL25vZGVfbW9kdWxlcy9AY29udGVudHN0YWNrL2RlbGl2ZXJ5LXNkay9kaXN0L2Nqcy9zcmMvcGVyc2lzdGFuY2UvdHlwZXMvaW5kZXguanM/MjIzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@contentstack/delivery-sdk/dist/cjs/src/persistance/types/index.js\n");

/***/ })

};
;